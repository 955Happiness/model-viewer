{"version":3,"file":"gltf-sample-viewer.js","sources":["../source/gltf/utils.js","../source/gltf/gltf_object.js","../source/gltf/camera.js","../source/gltf/gltf_utils.js","../source/gltf/user_camera.js","../source/gltf/math_utils.js","../source/ResourceLoader/async_file_reader.js","../source/gltf/image_mime_type.js","../source/Renderer/webgl.js","../source/gltf/image.js","../source/Renderer/rendering_parameters.js","../source/GltfState/gltf_state.js","../source/Renderer/shader.js","../source/Renderer/shader_cache.js","../source/Renderer/renderer.js","../source/node_modules/axios/lib/helpers/bind.js","../source/node_modules/axios/lib/utils.js","../source/node_modules/axios/lib/helpers/buildURL.js","../source/node_modules/axios/lib/core/InterceptorManager.js","../source/node_modules/axios/lib/core/transformData.js","../source/node_modules/axios/lib/cancel/isCancel.js","../source/node_modules/axios/lib/helpers/normalizeHeaderName.js","../source/node_modules/axios/lib/core/createError.js","../source/node_modules/axios/lib/core/enhanceError.js","../source/node_modules/axios/lib/helpers/cookies.js","../source/node_modules/axios/lib/helpers/parseHeaders.js","../source/node_modules/axios/lib/helpers/isURLSameOrigin.js","../source/node_modules/axios/lib/adapters/xhr.js","../source/node_modules/axios/lib/core/buildFullPath.js","../source/node_modules/axios/lib/helpers/isAbsoluteURL.js","../source/node_modules/axios/lib/helpers/combineURLs.js","../source/node_modules/axios/lib/core/settle.js","../source/node_modules/axios/lib/defaults.js","../source/node_modules/axios/lib/core/dispatchRequest.js","../source/node_modules/axios/lib/core/mergeConfig.js","../source/node_modules/axios/lib/core/Axios.js","../source/node_modules/axios/lib/cancel/Cancel.js","../source/node_modules/axios/lib/cancel/CancelToken.js","../source/node_modules/axios/lib/axios.js","../source/node_modules/axios/lib/helpers/spread.js","../source/node_modules/axios/lib/helpers/isAxiosError.js","../source/node_modules/axios/index.js","../source/gltf/accessor.js","../source/gltf/buffer.js","../source/gltf/buffer_view.js","../source/gltf/light.js","../source/gltf/image_based_light.js","../source/gltf/texture.js","../source/gltf/material.js","../source/ResourceLoader/draco.js","../source/gltf/primitive.js","../source/gltf/mesh.js","../source/gltf/node.js","../source/gltf/sampler.js","../source/gltf/scene.js","../source/gltf/asset.js","../source/gltf/channel.js","../source/gltf/animation_sampler.js","../source/gltf/interpolator.js","../source/gltf/animation.js","../source/gltf/skin.js","../source/gltf/variant.js","../source/gltf/gltf.js","../source/ResourceLoader/glb_parser.js","../source/ResourceLoader/loader.js","../source/ibl_sampler.js","../source/ResourceLoader/ktx.js","../source/libs/hdrpng.js","../source/GltfView/gltf_view.js","../source/ResourceLoader/resource_loader.js"],"sourcesContent":["import { glMatrix } from 'gl-matrix';\n\nfunction jsToGl(array)\n{\n    let tensor = new glMatrix.ARRAY_TYPE(array.length);\n\n    for (let i = 0; i < array.length; ++i)\n    {\n        tensor[i] = array[i];\n    }\n\n    return tensor;\n}\n\nfunction jsToGlSlice(array, offset, stride)\n{\n    let tensor = new glMatrix.ARRAY_TYPE(stride);\n\n    for (let i = 0; i < stride; ++i)\n    {\n        tensor[i] = array[offset + i];\n    }\n\n    return tensor;\n}\n\nfunction initGlForMembers(gltfObj, gltf, webGlContext)\n{\n    for (const name of Object.keys(gltfObj))\n    {\n        const member = gltfObj[name];\n\n        if (member === undefined)\n        {\n            continue;\n        }\n        if (member.initGl !== undefined)\n        {\n            member.initGl(gltf, webGlContext);\n        }\n        if (Array.isArray(member))\n        {\n            for (const element of member)\n            {\n                if (element !== null && element !== undefined && element.initGl !== undefined)\n                {\n                    element.initGl(gltf, webGlContext);\n                }\n            }\n        }\n    }\n}\n\nfunction objectsFromJsons(jsonObjects, GltfType)\n{\n    if (jsonObjects === undefined)\n    {\n        return [];\n    }\n\n    const objects = [];\n    for (const jsonObject of jsonObjects)\n    {\n        objects.push(objectFromJson(jsonObject, GltfType));\n    }\n    return objects;\n}\n\nfunction objectFromJson(jsonObject, GltfType)\n{\n    const object = new GltfType();\n    object.fromJson(jsonObject);\n    return object;\n}\n\nfunction fromKeys(target, jsonObj, ignore = [])\n{\n    for(let k of Object.keys(target))\n    {\n        if (ignore && ignore.find(function(elem){return elem == k;}) !== undefined)\n        {\n            continue; // skip\n        }\n        if (jsonObj[k] !== undefined)\n        {\n            let normalizedK = k.replace(\"^@\", \"\");\n            target[normalizedK] = jsonObj[k];\n        }\n    }\n}\n\nfunction fromParams(parameters, target, jsonObj)\n{\n    for (let p of parameters)\n    {\n        if(jsonObj[p] !== undefined)\n        {\n            target[p] = jsonObj[p];\n        }\n    }\n}\n\nfunction stringHash(str, seed = 0)\n{\n    for(var i = 0; i < str.length; ++i)\n    {\n        seed = Math.imul(31, seed) + str.charCodeAt(i) | 0;\n    }\n\n    return seed;\n}\n\nfunction combineHashes(hash1, hash2)\n{\n    return hash1 ^ (hash1 + 0x9e3779b9 + (hash2 << 6) + (hash2 >> 2));\n}\n\nfunction clamp(number, min, max)\n{\n    return Math.min(Math.max(number, min), max);\n}\n\nfunction getIsGlb(filename)\n{\n    return getExtension(filename) == \"glb\";\n}\n\nfunction getIsGltf(filename)\n{\n    return getExtension(filename) == \"gltf\";\n}\n\nfunction getIsHdr(filename)\n{\n    return getExtension(filename) == \"hdr\";\n}\n\nfunction getExtension(filename)\n{\n    const split = filename.toLowerCase().split(\".\");\n    if (split.length == 1)\n    {\n        return undefined;\n    }\n    return split[split.length - 1];\n}\n\nfunction getFileName(filePath)\n{\n    const split = filePath.split(\"/\");\n    return split[split.length - 1];\n}\n\nfunction getFileNameWithoutExtension(filePath)\n{\n    const filename = getFileName(filePath);\n    const index = filename.lastIndexOf(\".\");\n    return filename.slice(0, index);\n}\n\nfunction getContainingFolder(filePath)\n{\n    return filePath.substring(0, filePath.lastIndexOf(\"/\") + 1);\n}\n\nfunction combinePaths()\n{\n    const parts = Array.from(arguments);\n    return parts.join(\"/\");\n}\n\n// marker interface used to for parsing the uniforms\nclass UniformStruct { }\n\nclass Timer\n{\n    constructor()\n    {\n        this.startTime = undefined;\n        this.endTime = undefined;\n        this.seconds = undefined;\n    }\n\n    start()\n    {\n        this.startTime = new Date().getTime() / 1000;\n        this.endTime = undefined;\n        this.seconds = undefined;\n    }\n\n    stop()\n    {\n        this.endTime = new Date().getTime() / 1000;\n        this.seconds = this.endTime - this.startTime;\n    }\n}\n\nclass AnimationTimer\n{\n    constructor()\n    {\n        this.startTime = 0;\n        this.paused = true;\n        this.fixedTime = null;\n        this.pausedTime = 0;\n    }\n\n    elapsedSec()\n    {\n        if(this.paused)\n        {\n            return this.pausedTime / 1000;\n        }\n        else\n        {\n            return this.fixedTime || (new Date().getTime() - this.startTime) / 1000;\n        }\n    }\n\n    toggle()\n    {\n        if(this.paused)\n        {\n            this.unpause();\n        }\n        else\n        {\n            this.pause();\n        }\n    }\n\n    start()\n    {\n        this.startTime = new Date().getTime();\n        this.paused = false;\n    }\n\n    pause()\n    {\n        this.pausedTime = new Date().getTime() - this.startTime;\n        this.paused = true;\n    }\n\n    unpause()\n    {\n        this.startTime += new Date().getTime() - this.startTime - this.pausedTime;\n        this.paused = false;\n    }\n\n    reset()\n    {\n        if(!this.paused) {\n            // Animation is running.\n            this.startTime = new Date().getTime();\n        }\n        else {\n            this.startTime = 0;\n        }\n        this.pausedTime = 0;\n    }\n\n    setFixedTime(timeInSec)\n    {\n        this.paused = false;\n        this.fixedTime = timeInSec;\n    }\n}\n\nexport {\n    jsToGl,\n    jsToGlSlice,\n    objectsFromJsons,\n    objectFromJson,\n    fromKeys,\n    fromParams,\n    stringHash,\n    combineHashes,\n    clamp,\n    getIsGlb,\n    getIsGltf,\n    getIsHdr,\n    getExtension,\n    getFileName,\n    getFileNameWithoutExtension,\n    getContainingFolder,\n    combinePaths,\n    UniformStruct,\n    Timer,\n    AnimationTimer,\n    initGlForMembers\n};\n","import { initGlForMembers, fromKeys } from \"./utils\";\n\n// base class for all gltf objects\nclass GltfObject\n{\n    constructor()\n    {\n        this.extensions = undefined;\n        this.extras = undefined;\n    }\n\n    fromJson(json)\n    {\n        fromKeys(this, json);\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        initGlForMembers(this, gltf, webGlContext);\n    }\n}\n\nexport { GltfObject };\n","import { mat4, vec3, quat } from 'gl-matrix';\nimport { fromKeys } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfCamera extends GltfObject\n{\n    constructor(\n        type = \"perspective\",\n        znear = 0.01,\n        zfar = 10000.0,\n        yfov = 45.0 * Math.PI / 180.0,\n        aspectRatio = 16.0 / 9.0,\n        xmag = 1.0,\n        ymag = 1.0,\n        name = undefined,\n        nodeIndex = undefined)\n    {\n        super();\n        this.type = type;\n        this.znear = znear;\n        this.zfar = zfar;\n        this.yfov = yfov; // radians\n        this.xmag = xmag;\n        this.ymag = ymag;\n        this.aspectRatio = aspectRatio;\n        this.name = name;\n        this.node = nodeIndex;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        super.initGl(gltf, webGlContext);\n\n        let cameraIndex = undefined;\n        for (let i = 0; i < gltf.nodes.length; i++)\n        {\n            cameraIndex = gltf.nodes[i].camera;\n            if (cameraIndex === undefined)\n            {\n                continue;\n            }\n\n            if (gltf.cameras[cameraIndex] === this)\n            {\n                this.node = i;\n                break;\n            }\n        }\n\n        // cameraIndex stays undefined if camera is not assigned to any node\n        if(this.node === undefined && cameraIndex !== undefined)\n        {\n            console.error(\"Invalid node for camera \" + cameraIndex);\n        }\n    }\n\n    fromJson(jsonCamera)\n    {\n        this.name = name;\n        if(jsonCamera.perspective !== undefined)\n        {\n            this.type = \"perspective\";\n            fromKeys(this, jsonCamera.perspective);\n        }\n        else if(jsonCamera.orthographic !== undefined)\n        {\n            this.type = \"orthographic\";\n            fromKeys(this, jsonCamera.orthographic);\n        }\n    }\n\n    sortPrimitivesByDepth(gltf, drawables)\n    {\n        // Precompute the distances to avoid their computation during sorting.\n        for (const drawable of drawables)\n        {\n            const modelView = mat4.create();\n            mat4.multiply(modelView, this.getViewMatrix(gltf), drawable.node.worldTransform);\n\n            // Transform primitive centroid to find the primitive's depth.\n            const pos = vec3.transformMat4(vec3.create(), vec3.clone(drawable.primitive.centroid), modelView);\n\n            drawable.depth = pos[2];\n        }\n\n        // 1. Remove primitives that are behind the camera.\n        //    --> They will never be visible and it is cheap to discard them here.\n        // 2. Sort primitives so that the furthest nodes are rendered first.\n        //    This is required for correct transparency rendering.\n        return drawables\n            .filter((a) => a.depth <= 0)\n            .sort((a, b) => a.depth - b.depth);\n    }\n\n    getProjectionMatrix()\n    {\n        const projection = mat4.create();\n\n        if (this.type === \"perspective\")\n        {\n            mat4.perspective(projection, this.yfov, this.aspectRatio, this.znear, this.zfar);\n        }\n        else if (this.type === \"orthographic\")\n        {\n            projection[0]  = 1.0 / this.xmag;\n            projection[5]  = 1.0 / this.ymag;\n            projection[10] = 2.0 / (this.znear - this.zfar);\n            projection[14] = (this.zfar + this.znear) / (this.znear - this.zfar);\n        }\n\n        return projection;\n    }\n\n    getViewMatrix(gltf)\n    {\n        const view = mat4.create();\n        const position = this.getPosition(gltf);\n        const target = this.getLookAtTarget(gltf);\n        mat4.lookAt(view, position, target, vec3.fromValues(0, 1, 0));\n        return view;\n    }\n\n    getLookAtTarget(gltf)\n    {\n        const target = vec3.create();\n        const position = this.getPosition(gltf);\n        const lookDirection = this.getLookDirection(gltf);\n        vec3.add(target, lookDirection, position);\n        return target;\n    }\n\n    getPosition(gltf)\n    {\n        const position = vec3.create();\n        const node = this.getNode(gltf);\n        mat4.getTranslation(position, node.worldTransform);\n        return position;\n    }\n\n    getLookDirection(gltf)\n    {\n        const direction = vec3.create();\n        const rotation = this.getRotation(gltf);\n        vec3.transformQuat(direction, vec3.fromValues(0, 0, -1), rotation);\n        return direction;\n    }\n\n    getRotation(gltf)\n    {\n        const rotation = quat.create();\n        const node = this.getNode(gltf);\n        mat4.getRotation(rotation, node.worldTransform);\n        return rotation;\n    }\n\n    clone()\n    {\n        return new gltfCamera(\n            this.type,\n            this.znear,\n            this.zfar,\n            this.yfov,\n            this.aspectRatio,\n            this.xmag,\n            this.ymag,\n            this.name,\n            this.node);\n    }\n\n    getNode(gltf)\n    {\n        return gltf.nodes[this.node];\n    }\n}\n\nexport { gltfCamera };\n","import { vec3 } from 'gl-matrix';\nimport { jsToGl } from './utils.js';\n\nfunction getSceneExtents(gltf, sceneIndex, outMin, outMax)\n{\n    for (const i of [0, 1, 2])\n    {\n        outMin[i] = Number.POSITIVE_INFINITY;\n        outMax[i] = Number.NEGATIVE_INFINITY;\n    }\n\n    const scene = gltf.scenes[sceneIndex];\n\n    let nodeIndices = scene.nodes.slice();\n    while(nodeIndices.length > 0)\n    {\n        const node = gltf.nodes[nodeIndices.pop()];\n        nodeIndices = nodeIndices.concat(node.children);\n\n        if (node.mesh === undefined)\n        {\n            continue;\n        }\n\n        const mesh = gltf.meshes[node.mesh];\n        if (mesh.primitives === undefined)\n        {\n            continue;\n        }\n\n        for (const primitive of mesh.primitives)\n        {\n            const attribute = primitive.glAttributes.find(a => a.attribute == \"POSITION\");\n            if (attribute === undefined)\n            {\n                continue;\n            }\n\n            const accessor = gltf.accessors[attribute.accessor];\n            const assetMin = vec3.create();\n            const assetMax = vec3.create();\n            getExtentsFromAccessor(accessor, node.worldTransform, assetMin, assetMax);\n\n            for (const i of [0, 1, 2])\n            {\n                outMin[i] = Math.min(outMin[i], assetMin[i]);\n                outMax[i] = Math.max(outMax[i], assetMax[i]);\n            }\n        }\n    }\n}\n\nfunction getExtentsFromAccessor(accessor, worldTransform, outMin, outMax)\n{\n    const boxMin = vec3.create();\n    vec3.transformMat4(boxMin, jsToGl(accessor.min), worldTransform);\n\n    const boxMax = vec3.create();\n    vec3.transformMat4(boxMax, jsToGl(accessor.max), worldTransform);\n\n    const center = vec3.create();\n    vec3.add(center, boxMax, boxMin);\n    vec3.scale(center, center, 0.5);\n\n    const centerToSurface = vec3.create();\n    vec3.sub(centerToSurface, boxMax, center);\n\n    const radius = vec3.length(centerToSurface);\n\n    for (const i of [0, 1, 2])\n    {\n        outMin[i] = center[i] - radius;\n        outMax[i] = center[i] + radius;\n    }\n}\n\nfunction computePrimitiveCentroids(gltf)\n{\n    const meshes = gltf.nodes.filter(node => node.mesh !== undefined).map(node => gltf.meshes[node.mesh]);\n    const primitives = meshes.reduce((acc, mesh) => acc.concat(mesh.primitives), []);\n    for(const primitive of primitives) {\n\n        const positionsAccessor = gltf.accessors[primitive.attributes.POSITION];\n        const positions = positionsAccessor.getTypedView(gltf);\n\n        if(primitive.indices !== undefined)\n        {\n            // Primitive has indices.\n\n            const indicesAccessor = gltf.accessors[primitive.indices];\n\n            const indices = indicesAccessor.getTypedView(gltf);\n\n            const acc = new Float32Array(3);\n\n            for(let i = 0; i < indices.length; i++) {\n                const offset = 3 * indices[i];\n                acc[0] += positions[offset];\n                acc[1] += positions[offset + 1];\n                acc[2] += positions[offset + 2];\n            }\n\n            const centroid = new Float32Array([\n                acc[0] / indices.length,\n                acc[1] / indices.length,\n                acc[2] / indices.length,\n            ]);\n\n            primitive.setCentroid(centroid);\n        }\n        else\n        {\n            // Primitive does not have indices.\n\n            const acc = new Float32Array(3);\n\n            for(let i = 0; i < positions.length; i += 3) {\n                acc[0] += positions[i];\n                acc[1] += positions[i + 1];\n                acc[2] += positions[i + 2];\n            }\n\n            const positionVectors = positions.length / 3;\n\n            const centroid = new Float32Array([\n                acc[0] / positionVectors,\n                acc[1] / positionVectors,\n                acc[2] / positionVectors,\n            ]);\n\n            primitive.setCentroid(centroid);\n        }\n\n    }\n}\n\nexport { getSceneExtents, computePrimitiveCentroids };\n","import { vec3 } from 'gl-matrix';\nimport { gltfCamera } from './camera.js';\nimport { jsToGl, clamp } from './utils.js';\nimport { getSceneExtents } from './gltf_utils.js';\n\nconst VecZero = vec3.create();\nconst PanSpeedDenominator = 1200;\nconst MaxNearFarRatio = 10000;\n\nclass UserCamera extends gltfCamera\n{\n    constructor(\n        position = [0, 0, 0],\n        target = [0, 0,0],\n        up = [0, 1, 0],\n        xRot = 0,\n        yRot = 0,\n        zoom = 1)\n    {\n        super();\n\n        this.position = jsToGl(position);\n        this.target = jsToGl(target);\n        this.up = jsToGl(up);\n        this.xRot = xRot;\n        this.yRot = yRot;\n        this.zoom = zoom;\n        this.zoomFactor = 1.04;\n        this.rotateSpeed = 1 / 180;\n        this.panSpeed = 1;\n        this.sceneExtents = {\n            min: vec3.create(),\n            max: vec3.create()\n        };\n    }\n\n    updatePosition()\n    {\n        // calculate direction from focus to camera (assuming camera is at positive z)\n        // yRot rotates *around* x-axis, xRot rotates *around* y-axis\n        const direction = vec3.fromValues(0, 0, 1);\n        this.toLocalRotation(direction);\n\n        const position = vec3.create();\n        vec3.scale(position, direction, this.zoom);\n        vec3.add(position, position, this.target);\n\n        this.position = position;\n\n        this.fitCameraPlanesToExtents(this.sceneExtents.min, this.sceneExtents.max);\n    }\n\n    reset(gltf, sceneIndex)\n    {\n        this.xRot = 0;\n        this.yRot = 0;\n        this.fitViewToScene(gltf, sceneIndex, true);\n    }\n\n    zoomIn(value)\n    {\n        if (value > 0)\n        {\n            this.zoom *= this.zoomFactor;\n        }\n        else\n        {\n            this.zoom /= this.zoomFactor;\n        }\n    }\n\n    rotate(x, y)\n    {\n        const yMax = Math.PI / 2 - 0.01;\n        this.xRot += (x * this.rotateSpeed);\n        this.yRot += (y * this.rotateSpeed);\n        this.yRot = clamp(this.yRot, -yMax, yMax);\n    }\n\n    pan(x, y)\n    {\n        const left = vec3.fromValues(-1, 0, 0);\n        this.toLocalRotation(left);\n        vec3.scale(left, left, x * this.panSpeed);\n\n        const up = vec3.fromValues(0, 1, 0);\n        this.toLocalRotation(up);\n        vec3.scale(up, up, y * this.panSpeed);\n\n        vec3.add(this.target, this.target, up);\n        vec3.add(this.target, this.target, left);\n    }\n\n    fitPanSpeedToScene(min, max)\n    {\n        const longestDistance = vec3.distance(min, max);\n        this.panSpeed = longestDistance / PanSpeedDenominator;\n    }\n\n    fitViewToScene(gltf, sceneIndex)\n    {\n        getSceneExtents(gltf, sceneIndex, this.sceneExtents.min, this.sceneExtents.max);\n        this.fitCameraTargetToExtents(this.sceneExtents.min, this.sceneExtents.max);\n        this.fitZoomToExtents(this.sceneExtents.min, this.sceneExtents.max);\n        this.fitPanSpeedToScene(this.sceneExtents.min, this.sceneExtents.max);\n        this.fitCameraPlanesToExtents(this.sceneExtents.min, this.sceneExtents.max);\n    }\n\n    toLocalRotation(vector)\n    {\n        vec3.rotateX(vector, vector, VecZero, -this.yRot);\n        vec3.rotateY(vector, vector, VecZero, -this.xRot);\n    }\n\n    getLookAtTarget()\n    {\n        return this.target;\n    }\n\n    getPosition()\n    {\n        return this.position;\n    }\n\n    fitZoomToExtents(min, max)\n    {\n        const maxAxisLength = Math.max(max[0] - min[0], max[1] - min[1]);\n        this.zoom = this.getFittingZoom(maxAxisLength);\n    }\n\n    fitCameraTargetToExtents(min, max)\n    {\n        for (const i of [0, 1, 2])\n        {\n            this.target[i] = (max[i] + min[i]) / 2;\n        }\n    }\n\n    fitCameraPlanesToExtents(min, max)\n    {\n        // Manually increase scene extent just for the camera planes to avoid camera clipping in most situations.\n        const longestDistance = 10 * vec3.distance(min, max);\n        let zNear = this.zoom - (longestDistance * 0.6);\n        let zFar = this.zoom + (longestDistance * 0.6);\n\n        // minimum near plane value needs to depend on far plane value to avoid z fighting or too large near planes\n        zNear = Math.max(zNear, zFar / MaxNearFarRatio);\n\n        this.znear = zNear;\n        this.zfar = zFar;\n    }\n\n    getFittingZoom(axisLength)\n    {\n        const yfov = this.yfov;\n        const xfov = this.yfov * this.aspectRatio;\n\n        const yZoom = axisLength / 2 / Math.tan(yfov / 2);\n        const xZoom = axisLength / 2 / Math.tan(xfov / 2);\n\n        return Math.max(xZoom, yZoom);\n    }\n}\n\nexport { UserCamera };\n","function nearestPowerOf2(n)\n{\n    if (isPowerOf2(n))\n    {\n        return n;\n    }\n    return Math.pow(2.0, Math.round(Math.log(n) / Math.log(2.0)));\n}\n\nfunction isPowerOf2(n)\n{\n    return n && (n & (n - 1)) === 0;\n}\n\nfunction makeEven(n)\n{\n    if (n % 2 === 1)\n    {\n        return n + 1;\n    }\n    return n;\n}\n\nexport { nearestPowerOf2, isPowerOf2, makeEven };\n","class AsyncFileReader\n{\n    static async readAsArrayBuffer(path) {\n        return new Promise( (resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = reject;\n            reader.readAsArrayBuffer(path);\n        });\n    }\n\n    static async readAsText(path) {\n        return new Promise( (resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = reject;\n            reader.readAsText(path);\n        });\n    }\n\n    static async readAsDataURL(path) {\n        return new Promise( (resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = reject;\n            reader.readAsDataURL(path);\n        });\n    }\n}\n\nexport { AsyncFileReader };\n","const ImageMimeType = {JPEG: \"image/jpeg\", PNG: \"image/png\", HDR: \"image/vnd.radiance\", KTX2: \"image/ktx2\", GLTEXTURE: \"image/texture\"};\n\nexport { ImageMimeType };\n","import { ImageMimeType } from \"../gltf/image_mime_type.js\";\n\nlet GL = undefined;\n\nclass gltfWebGl\n{\n    constructor(context)\n    {\n        this.context = context;\n        if(GL === undefined)\n        {\n            GL = context;\n        }\n    }\n\n    loadWebGlExtensions(webglExtensions)\n    {\n        for (let extension of webglExtensions)\n        {\n            if (this.context.getExtension(extension) === null)\n            {\n                console.warn(\"Extension \" + extension + \" not supported!\");\n            }\n        }\n\n        // let EXT_texture_filter_anisotropic = this.context.getExtension(\"EXT_texture_filter_anisotropic\");\n\n        // if (EXT_texture_filter_anisotropic)\n        // {\n        //     this.context.anisotropy = EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT;\n        //     this.context.maxAnisotropy = this.context.getParameter(EXT_texture_filter_anisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n        //     this.context.supports_EXT_texture_filter_anisotropic = true;\n        // }\n        // else\n        // {\n        //     this.context.supports_EXT_texture_filter_anisotropic = false;\n        // }\n    }\n\n    setTexture(loc, gltf, textureInfo, texSlot)\n    {\n        if (loc === -1)\n        {\n            return false;\n        }\n\n        let gltfTex = gltf.textures[textureInfo.index];\n\n        if (gltfTex === undefined)\n        {\n            console.warn(\"Texture is undefined: \" + textureInfo.index);\n            return false;\n        }\n\n        const image = gltf.images[gltfTex.source];\n        if (image.mimeType === ImageMimeType.KTX2 ||\n            image.mimeType === ImageMimeType.GLTEXTURE)\n        {\n            gltfTex.glTexture = image.image;\n            gltfTex.initialized = true;\n        }\n\n        if (gltfTex.glTexture === undefined)\n        {\n            gltfTex.glTexture = this.context.createTexture();\n        }\n\n        this.context.activeTexture(GL.TEXTURE0 + texSlot);\n        this.context.bindTexture(gltfTex.type, gltfTex.glTexture);\n\n        this.context.uniform1i(loc, texSlot);\n\n        if (!gltfTex.initialized)\n        {\n            const gltfSampler = gltf.samplers[gltfTex.sampler];\n\n            if (gltfSampler === undefined)\n            {\n                console.warn(\"Sampler is undefined for texture: \" + textureInfo.index);\n                return false;\n            }\n\n            this.context.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL, false);\n\n            if (image === undefined)\n            {\n                console.warn(\"Image is undefined for texture: \" + gltfTex.source);\n                return false;\n            }\n            const internalformat = textureInfo.linear ? GL.RGBA : GL.SRGB8_ALPHA8;\n            this.context.texImage2D(image.type, image.miplevel, internalformat, GL.RGBA, GL.UNSIGNED_BYTE, image.image);\n            const generateMips = image.shouldGenerateMips();\n\n            this.setSampler(gltfSampler, gltfTex.type, generateMips);\n\n            if (textureInfo.generateMips && generateMips)\n            {\n                // Until this point, images can be assumed to be power of two.\n                switch (gltfSampler.minFilter)\n                {\n                case GL.NEAREST_MIPMAP_NEAREST:\n                case GL.NEAREST_MIPMAP_LINEAR:\n                case GL.LINEAR_MIPMAP_NEAREST:\n                case GL.LINEAR_MIPMAP_LINEAR:\n                    this.context.generateMipmap(gltfTex.type);\n                    break;\n                default:\n                    break;\n                }\n            }\n\n            gltfTex.initialized = true;\n        }\n\n        return gltfTex.initialized;\n    }\n\n    setIndices(gltf, accessorIndex)\n    {\n        let gltfAccessor = gltf.accessors[accessorIndex];\n\n        if (gltfAccessor.glBuffer === undefined)\n        {\n            gltfAccessor.glBuffer = this.context.createBuffer();\n\n            let data = gltfAccessor.getTypedView(gltf);\n\n            if (data === undefined)\n            {\n                return false;\n            }\n\n            this.context.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, gltfAccessor.glBuffer);\n            this.context.bufferData(GL.ELEMENT_ARRAY_BUFFER, data, GL.STATIC_DRAW);\n        }\n        else\n        {\n            this.context.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, gltfAccessor.glBuffer);\n        }\n\n        return true;\n    }\n\n    enableAttribute(gltf, attributeLocation, gltfAccessor)\n    {\n        if (attributeLocation === -1)\n        {\n            console.warn(\"Tried to access unknown attribute\");\n            return false;\n        }\n\n        if(gltfAccessor.bufferView === undefined)\n        {\n            console.warn(\"Tried to access undefined bufferview\");\n            return true;\n        }\n\n        let gltfBufferView = gltf.bufferViews[gltfAccessor.bufferView];\n\n        if (gltfAccessor.glBuffer === undefined)\n        {\n            gltfAccessor.glBuffer = this.context.createBuffer();\n\n            let data = gltfAccessor.getTypedView(gltf);\n\n            if (data === undefined)\n            {\n                return false;\n            }\n\n            this.context.bindBuffer(GL.ARRAY_BUFFER, gltfAccessor.glBuffer);\n            this.context.bufferData(GL.ARRAY_BUFFER, data, GL.STATIC_DRAW);\n        }\n        else\n        {\n            this.context.bindBuffer(GL.ARRAY_BUFFER, gltfAccessor.glBuffer);\n        }\n\n        this.context.vertexAttribPointer(attributeLocation, gltfAccessor.getComponentCount(gltfAccessor.type), gltfAccessor.componentType, gltfAccessor.normalized, gltfBufferView.byteStride, 0);\n        this.context.enableVertexAttribArray(attributeLocation);\n\n        return true;\n    }\n\n    compileShader(shaderIdentifier, isVert, shaderSource)\n    {\n        const shader = this.context.createShader(isVert ? GL.VERTEX_SHADER : GL.FRAGMENT_SHADER);\n        this.context.shaderSource(shader, shaderSource);\n        this.context.compileShader(shader);\n        const compiled = this.context.getShaderParameter(shader, GL.COMPILE_STATUS);\n\n        if (!compiled)\n        {\n            // output surrounding source code\n            let info = \"\";\n            const messages = this.context.getShaderInfoLog(shader).split(\"\\n\");\n            for(const message of messages)\n            {\n                info += message + \"\\n\";\n                const matches = message.match(/(?:(?:WARNING)|(?:ERROR)): [0-9]*:([0-9]*).*/i);\n                if (matches && matches.length > 1)\n                {\n                    const lineNumber = parseInt(matches[1]) - 1;\n                    const lines = shaderSource.split(\"\\n\");\n\n                    for(let i = Math.max(0, lineNumber - 2); i < Math.min(lines.length, lineNumber + 3); i++)\n                    {\n                        if (lineNumber === i)\n                        {\n                            info += \"->\";\n                        }\n                        info += \"\\t\" + lines[i] + \"\\n\";\n                    }\n                }\n            }\n\n            throw new Error(\"Could not compile WebGL program '\" + shaderIdentifier + \"'. \\n\\n\" + info);\n        }\n\n        return shader;\n    }\n\n    linkProgram(vertex, fragment)\n    {\n        let program = this.context.createProgram();\n        this.context.attachShader(program, vertex);\n        this.context.attachShader(program, fragment);\n        this.context.linkProgram(program);\n\n        if (!this.context.getProgramParameter(program, GL.LINK_STATUS))\n        {\n            var info = this.context.getProgramInfoLog(program);\n            throw new Error('Could not link WebGL program. \\n\\n' + info);\n        }\n\n        return program;\n    }\n\n    //https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n    setSampler(gltfSamplerObj, type, generateMipmaps) // TEXTURE_2D\n    {\n        if (generateMipmaps)\n        {\n            this.context.texParameteri(type, GL.TEXTURE_WRAP_S, gltfSamplerObj.wrapS);\n            this.context.texParameteri(type, GL.TEXTURE_WRAP_T, gltfSamplerObj.wrapT);\n        }\n        else\n        {\n            this.context.texParameteri(type, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\n            this.context.texParameteri(type, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\n        }\n\n        // If not mip-mapped, force to non-mip-mapped sampler.\n        if (!generateMipmaps && (gltfSamplerObj.minFilter != GL.NEAREST) && (gltfSamplerObj.minFilter != GL.LINEAR))\n        {\n            if ((gltfSamplerObj.minFilter == GL.NEAREST_MIPMAP_NEAREST) || (gltfSamplerObj.minFilter == GL.NEAREST_MIPMAP_LINEAR))\n            {\n                this.context.texParameteri(type, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\n            }\n            else\n            {\n                this.context.texParameteri(type, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\n            }\n        }\n        else\n        {\n            this.context.texParameteri(type, GL.TEXTURE_MIN_FILTER, gltfSamplerObj.minFilter);\n        }\n        this.context.texParameteri(type, GL.TEXTURE_MAG_FILTER, gltfSamplerObj.magFilter);\n\n        if (this.context.supports_EXT_texture_filter_anisotropic)\n        {\n            this.context.texParameterf(type, this.context.anisotropy, this.context.maxAnisotropy); // => 16xAF\n        }\n    }\n}\n\nexport { gltfWebGl, GL };\n","import { GltfObject } from './gltf_object.js';\nimport { isPowerOf2 } from './math_utils.js';\nimport { AsyncFileReader } from '../ResourceLoader/async_file_reader.js';\nimport { GL } from \"../Renderer/webgl\";\nimport { ImageMimeType } from \"./image_mime_type.js\";\nimport * as jpeg  from \"jpeg-js\";\nimport * as png from 'fast-png';\n\nclass gltfImage extends GltfObject\n{\n    constructor(\n        uri = undefined,\n        type = GL.TEXTURE_2D,\n        miplevel = 0,\n        bufferView = undefined,\n        name = undefined,\n        mimeType = ImageMimeType.JPEG,\n        image = undefined)\n    {\n        super();\n        this.uri = uri;\n        this.bufferView = bufferView;\n        this.mimeType = mimeType;\n        this.image = image; // javascript image\n        this.name = name;\n        this.type = type; // nonstandard\n        this.miplevel = miplevel; // nonstandard\n    }\n\n    resolveRelativePath(basePath)\n    {\n        if (this.uri !== undefined)\n        {\n            if (this.uri.startsWith('./'))\n            {\n                // Remove preceding './' from URI.\n                this.uri = this.uri.substr(2);\n            }\n            this.uri = basePath + this.uri;\n        }\n    }\n\n    async load(gltf, additionalFiles = undefined)\n    {\n        if (this.image !== undefined)\n        {\n            if (this.mimeType !== ImageMimeType.GLTEXTURE)\n            {\n                console.error(\"image has already been loaded\");\n            }\n            return;\n        }\n\n        if (!await this.setImageFromBufferView(gltf) &&\n            !await this.setImageFromFiles(additionalFiles, gltf) &&\n            !await this.setImageFromUri(gltf))\n        {\n            console.error(\"Was not able to resolve image with uri '%s'\", this.uri);\n            return;\n        }\n\n        return;\n    }\n\n    static loadHTMLImage(url)\n    {\n        return new Promise( (resolve, reject) => {\n            const image = new Image();\n            image.addEventListener('load', () => resolve(image) );\n            image.addEventListener('error', reject);\n            image.src = url;\n            image.crossOrigin = \"\";\n        });\n    }\n\n    async setImageFromUri(gltf)\n    {\n        if (this.uri === undefined)\n        {\n            return false;\n        }\n\n        if(this.mimeType === ImageMimeType.KTX2)\n        {\n            if (gltf.ktxDecoder !== undefined)\n            {\n                this.image = await gltf.ktxDecoder.loadKtxFromUri(this.uri);\n            }\n            else\n            {\n                console.warn('Loading of ktx images failed: KtxDecoder not initalized');\n            }\n        }\n        else if (typeof(Image) !== 'undefined' && (this.mimeType === ImageMimeType.JPEG || this.mimeType === ImageMimeType.PNG))\n        {\n            this.image = await gltfImage.loadHTMLImage(this.uri).catch( (error) => {\n                console.error(error);\n            });\n        }\n        else\n        {\n            console.error(\"Unsupported image type \" + this.mimeType);\n            return false;\n        }\n\n        return true;\n    }\n\n    async setImageFromBufferView(gltf)\n    {\n        const view = gltf.bufferViews[this.bufferView];\n        if (view === undefined)\n        {\n            return false;\n        }\n\n        const buffer = gltf.buffers[view.buffer].buffer;\n        const array = new Uint8Array(buffer, view.byteOffset, view.byteLength);\n        if (this.mimeType === ImageMimeType.KTX2)\n        {\n            if (gltf.ktxDecoder !== undefined)\n            {\n                this.image = await gltf.ktxDecoder.loadKtxFromBuffer(array);\n            }\n            else\n            {\n                console.warn('Loading of ktx images failed: KtxDecoder not initalized');\n            }\n        }\n        else if(typeof(Image) !== 'undefined' && (this.mimeType === ImageMimeType.JPEG || this.mimeType === ImageMimeType.PNG))\n        {\n            const blob = new Blob([array], { \"type\": this.mimeType });\n            const objectURL = URL.createObjectURL(blob);\n            this.image = await gltfImage.loadHTMLImage(objectURL).catch( () => {\n                console.error(\"Could not load image from buffer view\");\n            });\n        }\n        else if(this.mimeType === ImageMimeType.JPEG)\n        {\n            this.image = jpeg.decode(array, {useTArray: true});\n        }\n        else if(this.mimeType === ImageMimeType.PNG)\n        {\n            this.image = png.decode(array);\n        }\n        else\n        {\n            console.error(\"Unsupported image type \" + this.mimeType);\n            return false;\n        }\n\n        return true;\n    }\n\n    async setImageFromFiles(files, gltf)\n    {\n        if (this.uri === undefined || files === undefined)\n        {\n            return false;\n        }\n\n        let foundFile = files.find(function(file)\n        {\n            if (file.name === this.uri || file.fullPath === this.uri)\n            {\n                return true;\n            }\n        }, this);\n\n        if (foundFile === undefined)\n        {\n            return false;\n        }\n\n        if(this.mimeType === ImageMimeType.KTX2)\n        {\n            if (gltf.ktxDecoder !== undefined)\n            {\n                const data = new Uint8Array(await foundFile.arrayBuffer());\n                this.image = await gltf.ktxDecoder.loadKtxFromBuffer(data);\n            }\n            else\n            {\n                console.warn('Loading of ktx images failed: KtxDecoder not initalized');\n            }\n        }\n        else if (typeof(Image) !== 'undefined' && (this.mimeType === ImageMimeType.JPEG || this.mimeType === ImageMimeType.PNG))\n        {\n            const imageData = await AsyncFileReader.readAsDataURL(foundFile).catch( () => {\n                console.error(\"Could not load image with FileReader\");\n            });\n            this.image = await gltfImage.loadHTMLImage(imageData).catch( () => {\n                console.error(\"Could not create image from FileReader image data\");\n            });\n        }\n        else\n        {\n            console.error(\"Unsupported image type \" + this.mimeType);\n            return false;\n        }\n\n\n        return true;\n    }\n\n    shouldGenerateMips()\n    {\n        return (isPowerOf2(this.image.width) && isPowerOf2(this.image.height));\n    }\n}\n\nexport { gltfImage, ImageMimeType };\n\n","import { ImageMimeType } from \"../gltf/image\";\nimport { AnimationTimer } from \"../gltf/utils\";\n\nconst UserCameraIndex = \"orbit camera\";\n\nclass gltfRenderingParameters\n{\n    constructor(\n        environmentName = Object.keys(Environments)[0],\n        useIBL = true,\n        usePunctual = false,\n        exposure = 1.0,\n        clearColor = [50, 50, 50],\n        toneMap = ToneMaps.NONE,\n        debugOutput = DebugOutput.NONE)\n    {\n        this.environmentName = environmentName;\n        this.useIBL = useIBL;\n        this.usePunctual = usePunctual;\n        this.exposure = exposure;\n        this.clearColor = clearColor;\n        this.toneMap = toneMap;\n        this.debugOutput = debugOutput;\n        this.sceneIndex = 0;\n        this.cameraIndex = UserCameraIndex;\n        this.animationTimer = new AnimationTimer();\n        this.animationIndex = \"all\";\n        this.skinning = true;\n        this.morphing = true;\n    }\n\n    userCameraActive()\n    {\n        return this.cameraIndex === UserCameraIndex;\n    }\n}\n\nconst ToneMaps =\n{\n    NONE: \"None\",\n    ACES_FAST: \"ACES fast\",\n    ACES: \"ACES\"\n};\n\nconst DebugOutput =\n{\n    NONE: \"None\",\n    METALLIC: \"Metallic\",\n    ROUGHNESS: \"Roughness\",\n    NORMAL: \"Normal\",\n    WORLDSPACENORMAL: \"Worldspace Normal\",\n    GEOMETRYNORMAL: \"Geometry Normal\",\n    TANGENT: \"Tangent\",\n    BITANGENT: \"Bitangent\",\n    BASECOLOR: \"Base Color\",\n    OCCLUSION: \"Occlusion\",\n    EMISSIVE: \"Emissive\",\n    DIFFUSE: \"Diffuse\",\n    SPECULAR: \"Specular\",\n    CLEARCOAT: \"ClearCoat\",\n    SHEEN: \"Sheen\",\n    TRANSMISSION: \"Transmission\",\n    ALPHA: \"Alpha\",\n    F0: \"F0\"\n};\n\nconst Environments =\n{\n    \"Papermill Ruins E\": { folder: \"papermill\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Field\": { folder: \"field\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Courtyard of the Doge's palace\": { folder: \"doge2\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Pisa courtyard nearing sunset\": { folder: \"pisa\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Footprint Court\": { folder: \"footprint_court\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Helipad GoldenHour\": { folder: \"helipad\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Dining room of the Ennis-Brown House\": { folder: \"ennis\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Neutral\": { folder: \"neutral\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Directional\": { folder: \"directional\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Chromatic\": { folder: \"chromatic\", mipLevel: 11, type: ImageMimeType.KTX2 }\n};\n\nexport { UserCameraIndex, gltfRenderingParameters, Environments, ToneMaps, DebugOutput };\n","import { UserCamera } from '../gltf/user_camera.js';\nimport { ToneMaps, DebugOutput } from '../Renderer/rendering_parameters.js';\nimport { AnimationTimer } from '../gltf/utils.js';\n\nclass GltfState\n{\n    constructor()\n    {\n        this.gltf = undefined;\n        this.environment = undefined;\n        this.renderingParameters = {\n            morphing: true,\n            skinning: true,\n            clearColor: [58, 64, 74],\n            exposure: 1.0,\n            usePunctual: true,\n            useIBL: true,\n            toneMap: ToneMaps.LINEAR,\n            debugOutput: DebugOutput.NONE,\n            environmentBackground: false,\n            environmentRotation: 90.0 //+X = 0 +Z = 90 -X = 180 -Z = 270\n        };\n        this.userCamera = new UserCamera();\n        this.sceneIndex = 0;\n        this.cameraIndex = undefined;\n        this.animationIndices = [];\n        this.animationTimer = new AnimationTimer();\n        this.variant = undefined;\n    }\n}\n\nexport { GltfState };\n","import { UniformStruct } from '../gltf/utils.js';\nimport { GL } from './webgl.js';\n\nclass gltfShader\n{\n    constructor(program, hash, gl)\n    {\n        this.program = program;\n        this.hash = hash;\n        this.uniforms = new Map();\n        this.attributes = new Map();\n        this.unknownAttributes = [];\n        this.unknownUniforms = [];\n        this.gl = gl;\n\n        if(this.program !== undefined)\n        {\n            const uniformCount = this.gl.context.getProgramParameter(this.program, GL.ACTIVE_UNIFORMS);\n            for(let i = 0; i < uniformCount; ++i)\n            {\n                const info = this.gl.context.getActiveUniform(this.program, i);\n                const loc = this.gl.context.getUniformLocation(this.program, info.name);\n                this.uniforms.set(info.name, {type: info.type, loc: loc});\n            }\n\n            const attribCount = this.gl.context.getProgramParameter(this.program, GL.ACTIVE_ATTRIBUTES);\n            for(let i = 0; i < attribCount; ++i)\n            {\n                const info = this.gl.context.getActiveAttrib(this.program, i);\n                const loc = this.gl.context.getAttribLocation(this.program, info.name);\n                this.attributes.set(info.name, loc);\n            }\n        }\n    }\n\n    destroy()\n    {\n        if (this.program !== undefined)\n        {\n            this.deleteProgram(this.program);\n        }\n\n        this.program = undefined;\n    }\n\n    getAttributeLocation(name)\n    {\n        const loc = this.attributes.get(name);\n        if (loc === undefined)\n        {\n            if (this.unknownAttributes.find(n => n === name) === undefined)\n            {\n                console.log(\"Attribute '%s' does not exist\", name);\n                this.unknownAttributes.push(name);\n            }\n            return -1;\n        }\n        return loc;\n    }\n\n    getUniformLocation(name)\n    {\n        const uniform = this.uniforms.get(name);\n        if (uniform === undefined)\n        {\n            if (this.unknownUniforms.find(n => n === name) === undefined)\n            {\n                this.unknownUniforms.push(name);\n            }\n            return -1;\n        }\n        return uniform.loc;\n    }\n\n    updateUniform(objectName, object, log = true)\n    {\n        if (object instanceof UniformStruct)\n        {\n            this.updateUniformStruct(objectName, object, log);\n        }\n        else if (Array.isArray(object))\n        {\n            this.updateUniformArray(objectName, object, log);\n        }\n        else\n        {\n            this.updateUniformValue(objectName, object, log);\n        }\n    }\n\n    updateUniformArray(arrayName, array, log)\n    {\n        if(array[0] instanceof UniformStruct)\n        {\n            for (let i = 0; i < array.length; ++i)\n            {\n                let element = array[i];\n                let uniformName = arrayName + \"[\" + i + \"]\";\n                this.updateUniform(uniformName, element, log);\n            }\n        }else{\n            let uniformName = arrayName + \"[0]\";\n\n            let flat = [];\n\n            if(Array.isArray(array[0]) || array[0].length !== undefined)\n            {\n                for (let i = 0; i < array.length; ++i)\n                {\n                    flat.push.apply(flat, Array.from(array[i]));\n                }\n            }\n            else\n            {\n                flat = array;\n            }\n\n            if(flat.length === 0)\n            {\n                console.error(\"Failed to flatten uniform array \" + uniformName);\n                return;\n            }\n\n            this.updateUniformValue(uniformName, flat, log);\n        }\n    }\n\n    updateUniformStruct(structName, object, log)\n    {\n        let memberNames = Object.keys(object);\n        for (let memberName of memberNames)\n        {\n            let uniformName = structName + \".\" + memberName;\n            this.updateUniform(uniformName, object[memberName], log);\n        }\n    }\n\n    // upload the values of a uniform with the given name using type resolve to get correct function call\n    updateUniformValue(uniformName, value, log)\n    {\n        const uniform = this.uniforms.get(uniformName);\n\n        if(uniform !== undefined)\n        {\n            switch (uniform.type) {\n            case GL.FLOAT:\n            {\n                if(Array.isArray(value) || value instanceof Float32Array)\n                {\n                    this.gl.context.uniform1fv(uniform.loc, value);\n                }else{\n                    this.gl.context.uniform1f(uniform.loc, value);\n                }\n                break;\n            }\n            case GL.FLOAT_VEC2: this.gl.context.uniform2fv(uniform.loc, value); break;\n            case GL.FLOAT_VEC3: this.gl.context.uniform3fv(uniform.loc, value); break;\n            case GL.FLOAT_VEC4: this.gl.context.uniform4fv(uniform.loc, value); break;\n\n            case GL.INT:\n            {\n                if(Array.isArray(value) || value instanceof Uint32Array || value instanceof Int32Array)\n                {\n                    this.gl.context.uniform1iv(uniform.loc, value);\n                }else{\n                    this.gl.context.uniform1i(uniform.loc, value);\n                }\n                break;\n            }\n            case GL.INT_VEC2: this.gl.context.uniform2iv(uniform.loc, value); break;\n            case GL.INT_VEC3: this.gl.context.uniform3iv(uniform.loc, value); break;\n            case GL.INT_VEC4: this.gl.context.uniform4iv(uniform.loc, value); break;\n\n            case GL.FLOAT_MAT2: this.gl.context.uniformMatrix2fv(uniform.loc, false, value); break;\n            case GL.FLOAT_MAT3: this.gl.context.uniformMatrix3fv(uniform.loc, false, value); break;\n            case GL.FLOAT_MAT4: this.gl.context.uniformMatrix4fv(uniform.loc, false, value); break;\n            }\n        }\n        else if(log)\n        {\n            console.warn(\"Unkown uniform: \" + uniformName);\n        }\n    }\n}\n\nexport { gltfShader };\n","import { gltfShader } from './shader.js';\nimport { stringHash, combineHashes } from '../gltf/utils.js';\n\n// THis class generates and caches the shader source text for a given permutation\nclass ShaderCache\n{\n    constructor(sources, gl)\n    {\n        this.sources  = sources; // shader name -> source code\n        this.shaders  = new Map(); // name & permutations hashed -> compiled shader\n        this.programs = new Map(); // (vertex shader, fragment shader) -> program\n        this.gl = gl;\n\n        // resovle / expande sources (TODO: break include cycles)\n        for (let [key, src] of this.sources)\n        {\n            let changed = false;\n            for (let [includeName, includeSource] of this.sources)\n            {\n                //var pattern = RegExp(/#include</ + includeName + />/);\n                const pattern = \"#include <\" + includeName + \">\";\n\n                if(src.includes(pattern))\n                {\n                    // only replace the first occurance\n                    src = src.replace(pattern, includeSource);\n\n                    // remove the others\n                    while (src.includes(pattern))\n                    {\n                        src = src.replace(pattern, \"\");\n                    }\n\n                    changed = true;\n                }\n            }\n\n            if(changed)\n            {\n                this.sources.set(key, src);\n            }\n        }\n    }\n\n    destroy()\n    {\n        for (let [, shader] of this.shaders.entries())\n        {\n            this.gl.context.deleteShader(shader);\n            shader = undefined;\n        }\n\n        this.shaders.clear();\n\n        for (let [, program] of this.programs)\n        {\n            program.destroy();\n        }\n\n        this.programs.clear();\n    }\n\n    // example args: \"pbr.vert\", [\"NORMALS\", \"TANGENTS\"]\n    selectShader(shaderIdentifier, permutationDefines)\n    {\n        // first check shaders for the exact permutation\n        // if not present, check sources and compile it\n        // if not present, return null object\n\n        const src = this.sources.get(shaderIdentifier);\n        if(src === undefined)\n        {\n            console.log(\"Shader source for \" + shaderIdentifier + \" not found\");\n            return null;\n        }\n\n        const isVert = shaderIdentifier.endsWith(\".vert\");\n        let hash = stringHash(shaderIdentifier);\n\n        // console.log(shaderIdentifier);\n\n        let defines = \"#version 300 es\\n\";\n        for(let define of permutationDefines)\n        {\n            // console.log(define);\n            hash ^= stringHash(define);\n            defines += \"#define \" + define + \"\\n\";\n        }\n\n        let shader = this.shaders.get(hash);\n\n        if(shader === undefined)\n        {\n            // console.log(defines);\n            // compile this variant\n            shader = this.gl.compileShader(shaderIdentifier, isVert, defines + src);\n            this.shaders.set(hash, shader);\n        }\n\n        return hash;\n    }\n\n    getShaderProgram(vertexShaderHash, fragmentShaderHash)\n    {\n        const hash = combineHashes(vertexShaderHash, fragmentShaderHash);\n\n        let program = this.programs.get(hash);\n\n        if (program) // program already linked\n        {\n            return program;\n        }\n        else // link this shader program type!\n        {\n            let linkedProg = this.gl.linkProgram(this.shaders.get(vertexShaderHash), this.shaders.get(fragmentShaderHash));\n            if(linkedProg)\n            {\n                let program = new gltfShader(linkedProg, hash, this.gl);\n                this.programs.set(hash, program);\n                return program;\n            }\n        }\n\n        return undefined;\n    }\n}\n\nexport { ShaderCache };\n","import { mat4, mat3, vec3 } from 'gl-matrix';\nimport { ShaderCache } from './shader_cache.js';\nimport { ToneMaps, DebugOutput } from './rendering_parameters.js';\nimport { gltfWebGl, GL } from './webgl.js';\n\nimport pbrShader from './shaders/pbr.frag';\nimport brdfShader from './shaders/brdf.glsl';\nimport iblShader from './shaders/ibl.glsl';\nimport punctualShader from './shaders/punctual.glsl';\nimport primitiveShader from './shaders/primitive.vert';\nimport texturesShader from './shaders/textures.glsl';\nimport tonemappingShader from './shaders/tonemapping.glsl';\nimport shaderFunctions from './shaders/functions.glsl';\nimport animationShader from './shaders/animation.glsl';\n\nclass gltfRenderer\n{\n    constructor(context)\n    {\n        this.shader = undefined; // current shader\n\n        this.currentWidth = 0;\n        this.currentHeight = 0;\n\n        this.webGl = new gltfWebGl(context);\n\n        // create render target for non transmission materials\n        this.opaqueRenderTexture = 0;\n        this.opaqueFramebuffer = 0;\n        this.opaqueDepthTexture = 0;\n        this.opaqueFramebufferWidth = 1024;\n        this.opaqueFramebufferHeight = 1024;\n\n        const shaderSources = new Map();\n        shaderSources.set(\"primitive.vert\", primitiveShader);\n        shaderSources.set(\"pbr.frag\", pbrShader);\n        shaderSources.set(\"brdf.glsl\", brdfShader);\n        shaderSources.set(\"ibl.glsl\", iblShader);\n        shaderSources.set(\"punctual.glsl\", punctualShader);\n        shaderSources.set(\"tonemapping.glsl\", tonemappingShader);\n        shaderSources.set(\"textures.glsl\", texturesShader);\n        shaderSources.set(\"functions.glsl\", shaderFunctions);\n        shaderSources.set(\"animation.glsl\", animationShader);\n\n        this.shaderCache = new ShaderCache(shaderSources, this.webGl);\n\n        let requiredWebglExtensions = [\n            \"EXT_texture_filter_anisotropic\",\n            \"OES_texture_float_linear\"\n        ];\n\n        this.webGl.loadWebGlExtensions(requiredWebglExtensions);\n\n        this.visibleLights = [];\n\n        this.viewMatrix = mat4.create();\n        this.projMatrix = mat4.create();\n        this.viewProjectionMatrix = mat4.create();\n\n        this.currentCameraPosition = vec3.create();\n\n        this.init();\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    // Render glTF scene graph\n    /////////////////////////////////////////////////////////////////////\n\n    // app state\n    init()\n    {\n        const context = this.webGl.context;\n        context.pixelStorei(GL.UNPACK_COLORSPACE_CONVERSION_WEBGL, GL.NONE);\n        context.enable(GL.DEPTH_TEST);\n        context.depthFunc(GL.LEQUAL);\n        context.colorMask(true, true, true, true);\n        context.clearDepth(1.0);\n\n        this.opaqueRenderTexture = context.createTexture();\n        context.bindTexture(context.TEXTURE_2D, this.opaqueRenderTexture);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MIN_FILTER, context.LINEAR_MIPMAP_LINEAR);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_WRAP_S, context.CLAMP_TO_EDGE);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_WRAP_T, context.CLAMP_TO_EDGE);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MAG_FILTER, context.NEAREST);\n        context.texImage2D( context.TEXTURE_2D,\n                            0,\n                            context.RGBA,\n                            this.opaqueFramebufferWidth,\n                            this.opaqueFramebufferHeight,\n                            0,\n                            context.RGBA,\n                            context.UNSIGNED_BYTE,\n                            null);\n        context.bindTexture(context.TEXTURE_2D, null);\n\n        this.opaqueDepthTexture = context.createTexture();\n        context.bindTexture(context.TEXTURE_2D, this.opaqueDepthTexture);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MIN_FILTER, context.NEAREST);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_WRAP_S, context.CLAMP_TO_EDGE);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_WRAP_T, context.CLAMP_TO_EDGE);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MAG_FILTER, context.NEAREST);\n        context.texImage2D( context.TEXTURE_2D,\n                            0,\n                            context.DEPTH_COMPONENT16,\n                            this.opaqueFramebufferWidth,\n                            this.opaqueFramebufferHeight,\n                            0,\n                            context.DEPTH_COMPONENT,\n                            context.UNSIGNED_SHORT,\n                            null);\n        context.bindTexture(context.TEXTURE_2D, null);\n\n        this.opaqueFramebuffer = context.createFramebuffer();\n        context.bindFramebuffer(context.FRAMEBUFFER, this.opaqueFramebuffer);\n        context.framebufferTexture2D(context.FRAMEBUFFER, context.COLOR_ATTACHMENT0, context.TEXTURE_2D, this.opaqueRenderTexture, 0);\n        context.framebufferTexture2D(context.FRAMEBUFFER, context.DEPTH_ATTACHMENT, context.TEXTURE_2D, this.opaqueDepthTexture, 0);\n        context.viewport(0, 0, this.currentWidth, this.currentHeight);\n        context.bindFramebuffer(context.FRAMEBUFFER, null);\n\n    }\n\n    resize(width, height)\n    {\n        if (this.currentWidth !== width || this.currentHeight !== height)\n        {\n            this.currentHeight = height;\n            this.currentWidth = width;\n            this.webGl.context.viewport(0, 0, width, height);\n        }\n    }\n\n    // frame state\n    clearFrame(clearColor)\n    {\n        this.webGl.context.bindFramebuffer(this.webGl.context.FRAMEBUFFER, null);\n        this.webGl.context.clearColor(clearColor[0] / 255.0, clearColor[1] / 255.0, clearColor[2] / 255.0, 1.0);\n        this.webGl.context.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n        this.webGl.context.bindFramebuffer(this.webGl.context.FRAMEBUFFER, this.opaqueFramebuffer);\n        this.webGl.context.clearColor(clearColor[0] / 255.0, clearColor[1] / 255.0, clearColor[2] / 255.0, 1.0);\n        this.webGl.context.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n        this.webGl.context.bindFramebuffer(this.webGl.context.FRAMEBUFFER, null);\n    }\n\n    // render complete gltf scene with given camera\n    drawScene(state, scene)\n    {\n        let currentCamera = undefined;\n\n        if (state.cameraIndex === undefined)\n        {\n            currentCamera = state.userCamera;\n        }\n        else\n        {\n            currentCamera = state.gltf.cameras[state.cameraIndex].clone();\n        }\n\n        currentCamera.aspectRatio = this.currentWidth / this.currentHeight;\n\n        this.projMatrix = currentCamera.getProjectionMatrix();\n        this.viewMatrix = currentCamera.getViewMatrix(state.gltf);\n        this.currentCameraPosition = currentCamera.getPosition(state.gltf);\n\n        this.visibleLights = this.getVisibleLights(state.gltf, scene);\n\n        mat4.multiply(this.viewProjectionMatrix, this.projMatrix, this.viewMatrix);\n\n        const nodes = scene.gatherNodes(state.gltf);\n\n        // Update skins.\n        for (const node of nodes)\n        {\n            if (node.mesh !== undefined && node.skin !== undefined)\n            {\n                this.updateSkin(state, node);\n            }\n        }\n\n        // collect drawables by essentially zipping primitives (for geometry and material)\n        // and nodes for the transform\n        const drawables = nodes\n            .filter(node => node.mesh !== undefined)\n            .reduce((acc, node) => acc.concat(state.gltf.meshes[node.mesh].primitives.map( primitive => {\n                return  {node: node, primitive: primitive};\n            })), [])\n            .filter(({node, primitive}) => primitive.material !== undefined);\n\n        // opaque drawables don't need sorting\n        const opaqueDrawables = drawables\n            .filter(({node, primitive}) => state.gltf.materials[primitive.material].alphaMode !== \"BLEND\"\n                && (state.gltf.materials[primitive.material].extensions === undefined\n                    || state.gltf.materials[primitive.material].extensions.KHR_materials_transmission === undefined));\n\n        // transparent drawables need sorting before they can be drawn\n        let transparentDrawables = drawables\n            .filter(({node, primitive}) => state.gltf.materials[primitive.material].alphaMode === \"BLEND\"\n                && (state.gltf.materials[primitive.material].extensions === undefined\n                    || state.gltf.materials[primitive.material].extensions.KHR_materials_transmission === undefined));\n        transparentDrawables = currentCamera.sortPrimitivesByDepth(state.gltf, transparentDrawables);\n\n        // Render transmission sample texture\n        this.webGl.context.bindFramebuffer(this.webGl.context.FRAMEBUFFER, this.opaqueFramebuffer);\n\n        this.webGl.context.viewport(0, 0, this.opaqueFramebufferWidth, this.opaqueFramebufferHeight);\n        for (const drawable of opaqueDrawables)\n        {\n            this.drawPrimitive(state, drawable.primitive, drawable.node, this.viewProjectionMatrix);\n        }\n        for (const drawable of transparentDrawables)\n        {\n            this.drawPrimitive(state, drawable.primitive, drawable.node, this.viewProjectionMatrix);\n        }\n\n        //Reset Viewport\n        this.webGl.context.viewport(0, 0,  this.currentWidth, this.currentHeight);\n\n        //Create Framebuffer Mipmaps\n        this.webGl.context.bindTexture(this.webGl.context.TEXTURE_2D, this.opaqueRenderTexture);\n        this.webGl.context.generateMipmap(this.webGl.context.TEXTURE_2D);\n\n        // Render to canvas\n        this.webGl.context.bindFramebuffer(this.webGl.context.FRAMEBUFFER, null);\n        for (const drawable of opaqueDrawables)\n        {\n            this.drawPrimitive(state, drawable.primitive, drawable.node, this.viewProjectionMatrix);\n        }\n        for (const drawable of transparentDrawables)\n        {\n            this.drawPrimitive(state, drawable.primitive, drawable.node, this.viewProjectionMatrix);\n        }\n\n        // filter materials with transmission extension\n        let transmissionDrawables = drawables\n            .filter(({node, primitive}) => state.gltf.materials[primitive.material].extensions !== undefined\n                && state.gltf.materials[primitive.material].extensions.KHR_materials_transmission !== undefined);\n        transmissionDrawables = currentCamera.sortPrimitivesByDepth(state.gltf, transmissionDrawables);\n        for (const drawable of transmissionDrawables)\n        {\n            this.drawPrimitive(state, drawable.primitive, drawable.node, this.viewProjectionMatrix, this.opaqueRenderTexture);\n        }\n    }\n\n    // vertices with given material\n    drawPrimitive(state, primitive, node, viewProjectionMatrix, transmissionSampleTexture)\n    {\n        if (primitive.skip) return;\n\n        let material;\n        if(primitive.mappings !== undefined && state.variant != \"default\")\n        {\n            const names = state.gltf.variants.map(obj => obj.name);\n            const idx = names.indexOf(state.variant);\n            let materialIdx = primitive.material;\n            primitive.mappings.forEach(element => {\n                if(element.variants.indexOf(idx) >= 0)\n                {\n                    materialIdx = element.material;\n                }\n            });\n            material = state.gltf.materials[materialIdx];\n        }\n        else\n        {\n            material = state.gltf.materials[primitive.material];\n        }\n\n        //select shader permutation, compile and link program.\n\n        let vertDefines = [];\n        this.pushVertParameterDefines(vertDefines, state.renderingParameters, state.gltf, node, primitive);\n        vertDefines = primitive.getDefines().concat(vertDefines);\n\n        let fragDefines = material.getDefines().concat(vertDefines);\n        this.pushFragParameterDefines(fragDefines, state);\n\n        const fragmentHash = this.shaderCache.selectShader(material.getShaderIdentifier(), fragDefines);\n        const vertexHash = this.shaderCache.selectShader(primitive.getShaderIdentifier(), vertDefines);\n\n        if (fragmentHash && vertexHash)\n        {\n            this.shader = this.shaderCache.getShaderProgram(fragmentHash, vertexHash);\n        }\n\n        if (this.shader === undefined)\n        {\n            return;\n        }\n\n        this.webGl.context.useProgram(this.shader.program);\n\n        if (state.renderingParameters.usePunctual)\n        {\n            this.applyLights(state.gltf);\n        }\n\n        // update model dependant matrices once per node\n        this.shader.updateUniform(\"u_ViewProjectionMatrix\", viewProjectionMatrix);\n        this.shader.updateUniform(\"u_ModelMatrix\", node.worldTransform);\n        this.shader.updateUniform(\"u_NormalMatrix\", node.normalMatrix, false);\n        this.shader.updateUniform(\"u_Exposure\", state.renderingParameters.exposure, false);\n        this.shader.updateUniform(\"u_Camera\", this.currentCameraPosition, false);\n\n        this.updateAnimationUniforms(state, node, primitive);\n\n        if (mat4.determinant(node.worldTransform) < 0.0)\n        {\n            this.webGl.context.frontFace(GL.CW);\n        }\n        else\n        {\n            this.webGl.context.frontFace(GL.CCW);\n        }\n\n        if (material.doubleSided)\n        {\n            this.webGl.context.disable(GL.CULL_FACE);\n        }\n        else\n        {\n            this.webGl.context.enable(GL.CULL_FACE);\n        }\n\n        if (material.alphaMode === 'BLEND')\n        {\n            this.webGl.context.enable(GL.BLEND);\n            this.webGl.context.blendFuncSeparate(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\n            this.webGl.context.blendEquation(GL.FUNC_ADD);\n        }\n        else\n        {\n            this.webGl.context.disable(GL.BLEND);\n        }\n\n        const drawIndexed = primitive.indices !== undefined;\n        if (drawIndexed)\n        {\n            if (!this.webGl.setIndices(state.gltf, primitive.indices))\n            {\n                return;\n            }\n        }\n\n        let vertexCount = 0;\n        for (const attribute of primitive.glAttributes)\n        {\n            const gltfAccessor = state.gltf.accessors[attribute.accessor];\n            vertexCount = gltfAccessor.count;\n\n            const location = this.shader.getAttributeLocation(attribute.name);\n            if (location < 0)\n            {\n                continue; // only skip this attribute\n            }\n            if (!this.webGl.enableAttribute(state.gltf, location, gltfAccessor))\n            {\n                return; // skip this primitive\n            }\n        }\n\n        for (let [uniform, val] of material.getProperties().entries())\n        {\n            this.shader.updateUniform(uniform, val);\n        }\n\n        for (let i = 0; i < material.textures.length; ++i)\n        {\n            let info = material.textures[i];\n            const location = this.shader.getUniformLocation(info.samplerName);\n            if (location < 0)\n            {\n                continue; // only skip this texture\n            }\n            if (!this.webGl.setTexture(location, state.gltf, info, i)) // binds texture and sampler\n            {\n                return; // skip this material\n            }\n        }\n\n        let textureCount = material.textures.length;\n        if (state.renderingParameters.useIBL && state.environment !== undefined)\n        {\n            textureCount = this.applyEnvironmentMap(state, textureCount);\n        }\n\n        if (state.renderingParameters.usePunctual)\n        {\n            this.webGl.setTexture(this.shader.getUniformLocation(\"u_SheenELUT\"), state.gltf, state.environment.sheenELUT, textureCount++);\n        }\n\n        if(transmissionSampleTexture !== undefined)\n        {\n            this.webGl.context.activeTexture(GL.TEXTURE0 + textureCount);\n            this.webGl.context.bindTexture(this.webGl.context.TEXTURE_2D, this.opaqueRenderTexture);\n            this.webGl.context.uniform1i(this.shader.getUniformLocation(\"u_TransmissionFramebufferSampler\"), textureCount);\n            textureCount++;\n\n            this.webGl.context.uniform2i(this.shader.getUniformLocation(\"u_ScreenSize\"), this.currentWidth, this.currentHeight);\n            this.webGl.context.uniform2i(this.shader.getUniformLocation(\"u_TransmissionFramebufferSize\"), this.opaqueFramebufferWidth, this.opaqueFramebufferHeight);\n        }\n\n        if (drawIndexed)\n        {\n            const indexAccessor = state.gltf.accessors[primitive.indices];\n            this.webGl.context.drawElements(primitive.mode, indexAccessor.count, indexAccessor.componentType, 0);\n        }\n        else\n        {\n            this.webGl.context.drawArrays(primitive.mode, 0, vertexCount);\n        }\n\n        for (const attribute of primitive.glAttributes)\n        {\n            const location = this.shader.getAttributeLocation(attribute.name);\n            if (location < 0)\n            {\n                continue; // skip this attribute\n            }\n            this.webGl.context.disableVertexAttribArray(location);\n        }\n    }\n\n    // returns all lights that are relevant for rendering or the default light if there are none\n    getVisibleLights(gltf, scene)\n    {\n        let lights = [];\n        for (let light of gltf.lights)\n        {\n            if (light.node !== undefined)\n            {\n                if (scene.includesNode(gltf, light.node))\n                {\n                    lights.push(light);\n                }\n            }\n        }\n        return lights;\n    }\n\n    updateSkin(state, node)\n    {\n        if (state.renderingParameters.skinning && state.gltf.skins !== undefined)\n        {\n            const skin = state.gltf.skins[node.skin];\n            skin.computeJoints(state.gltf, node);\n        }\n    }\n\n    pushVertParameterDefines(vertDefines, parameters, gltf, node, primitive)\n    {\n        // skinning\n        if (parameters.skinning && node.skin !== undefined && primitive.hasWeights && primitive.hasJoints)\n        {\n            const skin = gltf.skins[node.skin];\n\n            vertDefines.push(\"USE_SKINNING 1\");\n            vertDefines.push(\"JOINT_COUNT \" + skin.jointMatrices.length);\n        }\n\n        // morphing\n        if (parameters.morphing && node.mesh !== undefined && primitive.targets.length > 0)\n        {\n            const mesh = gltf.meshes[node.mesh];\n            if (mesh.weights !== undefined && mesh.weights.length > 0)\n            {\n                vertDefines.push(\"USE_MORPHING 1\");\n                vertDefines.push(\"WEIGHT_COUNT \" + Math.min(mesh.weights.length, 8));\n            }\n        }\n    }\n\n    updateAnimationUniforms(state, node, primitive)\n    {\n        if (state.renderingParameters.skinning && node.skin !== undefined && primitive.hasWeights && primitive.hasJoints)\n        {\n            const skin = state.gltf.skins[node.skin];\n\n            this.shader.updateUniform(\"u_jointMatrix\", skin.jointMatrices);\n            if(primitive.hasNormals)\n            {\n                this.shader.updateUniform(\"u_jointNormalMatrix\", skin.jointNormalMatrices);\n            }\n        }\n\n        if (state.renderingParameters.morphing && node.mesh !== undefined && primitive.targets.length > 0)\n        {\n            const mesh = state.gltf.meshes[node.mesh];\n            if (mesh.weights !== undefined && mesh.weights.length > 0)\n            {\n                this.shader.updateUniformArray(\"u_morphWeights\", mesh.weights);\n            }\n        }\n    }\n\n    pushFragParameterDefines(fragDefines, state)\n    {\n        if (state.renderingParameters.usePunctual)\n        {\n            fragDefines.push(\"USE_PUNCTUAL 1\");\n            fragDefines.push(\"LIGHT_COUNT \" + this.visibleLights.length);\n        }\n\n        if (state.renderingParameters.useIBL && state.environment)\n        {\n            fragDefines.push(\"USE_IBL 1\");\n        }\n\n        switch (state.renderingParameters.toneMap)\n        {\n        case (ToneMaps.ACES_FAST):\n            fragDefines.push(\"TONEMAP_ACES_FAST 1\");\n            break;\n        case (ToneMaps.ACES):\n            fragDefines.push(\"TONEMAP_ACES 1\");\n            break;\n        case (ToneMaps.NONE):\n        default:\n            break;\n        }\n\n        if (state.renderingParameters.debugOutput !== DebugOutput.NONE)\n        {\n            fragDefines.push(\"DEBUG_OUTPUT 1\");\n        }\n\n        switch (state.renderingParameters.debugOutput)\n        {\n        case (DebugOutput.METALLIC):\n            fragDefines.push(\"DEBUG_METALLIC 1\");\n            break;\n        case (DebugOutput.ROUGHNESS):\n            fragDefines.push(\"DEBUG_ROUGHNESS 1\");\n            break;\n        case (DebugOutput.NORMAL):\n            fragDefines.push(\"DEBUG_NORMAL 1\");\n            break;\n        case (DebugOutput.WORLDSPACENORMAL):\n            fragDefines.push(\"DEBUG_WORLDSPACE_NORMAL 1\");\n            break;\n        case (DebugOutput.GEOMETRYNORMAL):\n            fragDefines.push(\"DEBUG_GEOMETRY_NORMAL 1\");\n            break;\n        case (DebugOutput.TANGENT):\n            fragDefines.push(\"DEBUG_TANGENT 1\");\n            break;\n        case (DebugOutput.BITANGENT):\n            fragDefines.push(\"DEBUG_BITANGENT 1\");\n            break;\n        case (DebugOutput.BASECOLOR):\n            fragDefines.push(\"DEBUG_BASECOLOR 1\");\n            break;\n        case (DebugOutput.OCCLUSION):\n            fragDefines.push(\"DEBUG_OCCLUSION 1\");\n            break;\n        case (DebugOutput.EMISSIVE):\n            fragDefines.push(\"DEBUG_FEMISSIVE 1\");\n            break;\n        case (DebugOutput.SPECULAR):\n            fragDefines.push(\"DEBUG_FSPECULAR 1\");\n            break;\n        case (DebugOutput.DIFFUSE):\n            fragDefines.push(\"DEBUG_FDIFFUSE 1\");\n            break;\n        case (DebugOutput.THICKNESS):\n            fragDefines.push(\"DEBUG_THICKNESS 1\");\n            break;\n        case (DebugOutput.CLEARCOAT):\n            fragDefines.push(\"DEBUG_FCLEARCOAT 1\");\n            break;\n        case (DebugOutput.SHEEN):\n            fragDefines.push(\"DEBUG_FSHEEN 1\");\n            break;\n        case (DebugOutput.SUBSURFACE):\n            fragDefines.push(\"DEBUG_FSUBSURFACE 1\");\n            break;\n        case (DebugOutput.TRANSMISSION):\n            fragDefines.push(\"DEBUG_FTRANSMISSION 1\");\n            break;\n        case (DebugOutput.F0):\n            fragDefines.push(\"DEBUG_F0 1\");\n            break;\n        case (DebugOutput.ALPHA):\n            fragDefines.push(\"DEBUG_ALPHA 1\");\n            break;\n        }\n    }\n\n    applyLights(gltf)\n    {\n        let uniformLights = [];\n        for (let light of this.visibleLights)\n        {\n            uniformLights.push(light.toUniform(gltf));\n        }\n\n        if (uniformLights.length > 0)\n        {\n            this.shader.updateUniform(\"u_Lights\", uniformLights);\n        }\n    }\n\n    applyEnvironmentMap(state, texSlotOffset)\n    {\n        const environment = state.environment;\n        this.webGl.setTexture(this.shader.getUniformLocation(\"u_LambertianEnvSampler\"), environment, environment.diffuseEnvMap, texSlotOffset++);\n\n        this.webGl.setTexture(this.shader.getUniformLocation(\"u_GGXEnvSampler\"), environment, environment.specularEnvMap, texSlotOffset++);\n        this.webGl.setTexture(this.shader.getUniformLocation(\"u_GGXLUT\"), environment, environment.lut, texSlotOffset++);\n\n        this.webGl.setTexture(this.shader.getUniformLocation(\"u_CharlieEnvSampler\"), environment, environment.sheenEnvMap, texSlotOffset++);\n        this.webGl.setTexture(this.shader.getUniformLocation(\"u_CharlieLUT\"), environment, environment.sheenLUT, texSlotOffset++);\n\n        this.shader.updateUniform(\"u_MipCount\", environment.mipCount);\n\n        let rotMatrix4 = mat4.create();\n        mat4.rotateY(rotMatrix4, rotMatrix4,  state.renderingParameters.environmentRotation / 180.0 * Math.PI);\n        let rotMatrix3 = mat3.create();\n        mat3.fromMat4(rotMatrix3, rotMatrix4);\n        this.shader.updateUniform(\"u_envRotation\", rotMatrix3);\n\n        return texSlotOffset;\n    }\n\n    destroy()\n    {\n        this.shaderCache.destroy();\n    }\n}\n\nexport { gltfRenderer };\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","module.exports = require('./lib/axios');","import { GL } from '../Renderer/webgl.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfAccessor extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.bufferView = undefined;\n        this.byteOffset = 0;\n        this.componentType = undefined;\n        this.normalized = false;\n        this.count = undefined;\n        this.type = undefined;\n        this.max = undefined;\n        this.min = undefined;\n        this.sparse = undefined;\n        this.name = undefined;\n\n        // non gltf\n        this.glBuffer = undefined;\n        this.typedView = undefined;\n        this.filteredView = undefined;\n    }\n\n    getTypedView(gltf)\n    {\n        if (this.typedView !== undefined)\n        {\n            return this.typedView;\n        }\n\n        if (this.bufferView !== undefined)\n        {\n            const bufferView = gltf.bufferViews[this.bufferView];\n            const buffer = gltf.buffers[bufferView.buffer];\n            const byteOffset = this.byteOffset + bufferView.byteOffset;\n\n            const componentSize = this.getComponentSize(this.componentType);\n            let componentCount = this.getComponentCount(this.type);\n\n            if(bufferView.byteStride !== 0)\n            {\n                componentCount = bufferView.byteStride / componentSize;\n            }\n\n            let arrayLength = this.count * componentCount;\n\n            if (arrayLength * componentSize > buffer.buffer.byteLength - byteOffset)\n            {\n                arrayLength = (buffer.buffer.byteLength - byteOffset) / componentSize;\n                console.warn(\"Count in accessor '\" + (this.name ? this.name : \"\") + \"' is too large.\");\n            }\n\n            switch (this.componentType)\n            {\n            case GL.BYTE:\n                this.typedView = new Int8Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            case GL.UNSIGNED_BYTE:\n                this.typedView = new Uint8Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            case GL.SHORT:\n                this.typedView = new Int16Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            case GL.UNSIGNED_SHORT:\n                this.typedView = new Uint16Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            case GL.UNSIGNED_INT:\n                this.typedView = new Uint32Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            case GL.FLOAT:\n                this.typedView = new Float32Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            }\n        }\n\n        if (this.typedView === undefined)\n        {\n            console.warn(\"Failed to convert buffer view to typed view!: \" + this.bufferView);\n        }\n        else if (this.sparse !== undefined)\n        {\n            this.applySparse(gltf, this.typedView);\n        }\n\n        return this.typedView;\n    }\n\n    getDeinterlacedView(gltf)\n    {\n        if (this.filteredView !== undefined)\n        {\n            return this.filteredView;\n        }\n\n        if (this.bufferView !== undefined)\n        {\n            const bufferView = gltf.bufferViews[this.bufferView];\n            const buffer = gltf.buffers[bufferView.buffer];\n            const byteOffset = this.byteOffset + bufferView.byteOffset;\n\n            const componentSize = this.getComponentSize(this.componentType);\n            const componentCount = this.getComponentCount(this.type);\n            const arrayLength = this.count * componentCount;\n\n            let stride = bufferView.byteStride !== 0 ? bufferView.byteStride : componentCount * componentSize;\n            let dv = new DataView(buffer.buffer, byteOffset, this.count * stride);\n\n            let func = 'getFloat32';\n            switch (this.componentType)\n            {\n            case GL.BYTE:\n                this.filteredView = new Int8Array(arrayLength);\n                func = 'getInt8';\n                break;\n            case GL.UNSIGNED_BYTE:\n                this.filteredView = new Uint8Array(arrayLength);\n                func = 'getUint8';\n                break;\n            case GL.SHORT:\n                this.filteredView = new Int16Array(arrayLength);\n                func = 'getInt16';\n                break;\n            case GL.UNSIGNED_SHORT:\n                this.filteredView = new Uint16Array(arrayLength);\n                func = 'getUint16';\n                break;\n            case GL.UNSIGNED_INT:\n                this.filteredView = new Uint32Array(arrayLength);\n                func = 'getUint32';\n                break;\n            case GL.FLOAT:\n                this.filteredView = new Float32Array(arrayLength);\n                func = 'getFloat32';\n                break;\n            }\n\n            for(let i = 0; i < arrayLength; ++i)\n            {\n                let offset = Math.floor(i/componentCount) * stride + (i % componentCount) * componentSize;\n                this.filteredView[i] = dv[func](offset, true);\n            }\n        }\n\n        if (this.filteredView === undefined)\n        {\n            console.warn(\"Failed to convert buffer view to filtered view!: \" + this.bufferView);\n        }\n        else if (this.sparse !== undefined)\n        {\n            this.applySparse(gltf, this.filteredView);\n        }\n\n        return this.filteredView;\n    }\n\n    applySparse(gltf, view)\n    {\n        // Gather indices.\n\n        const indicesBufferView = gltf.bufferViews[this.sparse.indices.bufferView];\n        const indicesBuffer = gltf.buffers[indicesBufferView.buffer];\n        const indicesByteOffset = this.sparse.indices.byteOffset + indicesBufferView.byteOffset;\n\n        const indicesComponentSize = this.getComponentSize(this.sparse.indices.componentType);\n        let indicesComponentCount = 1;\n\n        if(indicesBufferView.byteStride !== 0)\n        {\n            indicesComponentCount = indicesBufferView.byteStride / indicesComponentSize;\n        }\n\n        const indicesArrayLength = this.sparse.count * indicesComponentCount;\n\n        let indicesTypedView;\n        switch (this.sparse.indices.componentType)\n        {\n        case GL.UNSIGNED_BYTE:\n            indicesTypedView = new Uint8Array(indicesBuffer.buffer, indicesByteOffset, indicesArrayLength);\n            break;\n        case GL.UNSIGNED_SHORT:\n            indicesTypedView = new Uint16Array(indicesBuffer.buffer, indicesByteOffset, indicesArrayLength);\n            break;\n        case GL.UNSIGNED_INT:\n            indicesTypedView = new Uint32Array(indicesBuffer.buffer, indicesByteOffset, indicesArrayLength);\n            break;\n        }\n\n        // Gather values.\n\n        const valuesBufferView = gltf.bufferViews[this.sparse.values.bufferView];\n        const valuesBuffer = gltf.buffers[valuesBufferView.buffer];\n        const valuesByteOffset = this.sparse.values.byteOffset + valuesBufferView.byteOffset;\n\n        const valuesComponentSize = this.getComponentSize(this.componentType);\n        let valuesComponentCount = this.getComponentCount(this.type);\n\n        if(valuesBufferView.byteStride !== 0)\n        {\n            valuesComponentCount = valuesBufferView.byteStride / valuesComponentSize;\n        }\n\n        const valuesArrayLength = this.sparse.count * valuesComponentCount;\n\n        let valuesTypedView;\n        switch (this.componentType)\n        {\n        case GL.BYTE:\n            valuesTypedView = new Int8Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        case GL.UNSIGNED_BYTE:\n            valuesTypedView = new Uint8Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        case GL.SHORT:\n            valuesTypedView = new Int16Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        case GL.UNSIGNED_SHORT:\n            valuesTypedView = new Uint16Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        case GL.UNSIGNED_INT:\n            valuesTypedView = new Uint32Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        case GL.FLOAT:\n            valuesTypedView = new Float32Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        }\n\n        // Overwrite values.\n\n        for(let i = 0; i < this.sparse.count; ++i)\n        {\n            for(let k = 0; k < valuesComponentCount; ++k)\n            {\n                view[indicesTypedView[i] * valuesComponentCount + k] = valuesTypedView[i * valuesComponentCount + k];\n            }\n        }\n    }\n\n    getComponentCount(type)\n    {\n        return CompononentCount.get(type);\n    }\n\n    getComponentSize(componentType)\n    {\n        switch (componentType)\n        {\n        case GL.BYTE:\n        case GL.UNSIGNED_BYTE:\n            return 1;\n        case GL.SHORT:\n        case GL.UNSIGNED_SHORT:\n            return 2;\n        case GL.UNSIGNED_INT:\n        case GL.FLOAT:\n            return 4;\n        default:\n            return 0;\n        }\n    }\n\n    destroy()\n    {\n        if (this.glBuffer !== undefined)\n        {\n            // TODO: this breaks the dependency direction\n            WebGl.context.deleteBuffer(this.glBuffer);\n        }\n\n        this.glBuffer = undefined;\n    }\n}\n\nconst CompononentCount = new Map(\n    [\n        [\"SCALAR\", 1],\n        [\"VEC2\", 2],\n        [\"VEC3\", 3],\n        [\"VEC4\", 4],\n        [\"MAT2\", 4],\n        [\"MAT3\", 9],\n        [\"MAT4\", 16]\n    ]\n);\n\nexport { gltfAccessor };\n","import axios from 'axios';\nimport { getContainingFolder } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfBuffer extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.uri = undefined;\n        this.byteLength = undefined;\n        this.name = undefined;\n\n        // non gltf\n        this.buffer = undefined; // raw data blob\n    }\n\n    load(gltf, additionalFiles = undefined)\n    {\n        if (this.buffer !== undefined)\n        {\n            console.error(\"buffer has already been loaded\");\n            return;\n        }\n\n        const self = this;\n        return new Promise(function(resolve)\n        {\n            if (!self.setBufferFromFiles(additionalFiles, resolve) &&\n                !self.sefBufferFromUri(gltf, resolve))\n            {\n                console.error(\"Was not able to resolve buffer with uri '%s'\", self.uri);\n                resolve();\n            }\n        });\n    }\n\n    sefBufferFromUri(gltf, callback)\n    {\n        if (this.uri === undefined)\n        {\n            return false;\n        }\n\n        const self = this;\n        axios.get(getContainingFolder(gltf.path) + this.uri, { responseType: 'arraybuffer'})\n            .then(function(response)\n            {\n                self.buffer = response.data;\n                callback();\n            });\n        return true;\n    }\n\n    setBufferFromFiles(files, callback)\n    {\n        if (this.uri === undefined || files === undefined)\n        {\n            return false;\n        }\n\n        const foundFile = files.find(function(file)\n        {\n            if (file.name === this.uri || file.fullPath === this.uri)\n            {\n                return true;\n            }\n        }, this);\n\n        if (foundFile === undefined)\n        {\n            return false;\n        }\n\n        const self = this;\n        const reader = new FileReader();\n        reader.onloadend = function(event)\n        {\n            self.buffer = event.target.result;\n            callback();\n        };\n        reader.readAsArrayBuffer(foundFile);\n\n        return true;\n    }\n}\n\nexport { gltfBuffer };\n","import { GltfObject } from './gltf_object.js';\n\nclass gltfBufferView extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.buffer = undefined;\n        this.byteOffset = 0;\n        this.byteLength = undefined;\n        this.byteStride = 0;\n        this.target = undefined;\n        this.name = undefined;\n    }\n}\n\nexport { gltfBufferView };\n","import { mat4, vec3, quat } from 'gl-matrix';\nimport { jsToGl, UniformStruct } from './utils.js';\nimport { fromKeys } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfLight extends GltfObject\n{\n    constructor(\n        type = \"directional\",\n        color = [1, 1, 1],\n        intensity = 1,\n        innerConeAngle = 0,\n        outerConeAngle = Math.PI / 4,\n        range = -1,\n        name = undefined,\n        node = undefined)\n    {\n        super();\n        this.type = type;\n        this.color = color;\n        this.intensity = intensity;\n        this.innerConeAngle = innerConeAngle;\n        this.outerConeAngle = outerConeAngle;\n        this.range = range;\n        this.name = name;\n        // non gltf\n        this.node = node;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        super.initGl(gltf, webGlContext);\n\n        for (let i = 0; i < gltf.nodes.length; i++)\n        {\n            const nodeExtensions = gltf.nodes[i].extensions;\n            if (nodeExtensions === undefined)\n            {\n                continue;\n            }\n\n            const lightsExtension = nodeExtensions.KHR_lights_punctual;\n            if (lightsExtension === undefined)\n            {\n                continue;\n            }\n\n            const lightIndex = lightsExtension.light;\n            if (gltf.lights[lightIndex] === this)\n            {\n                this.node = i;\n                break;\n            }\n        }\n    }\n\n    fromJson(jsonLight)\n    {\n        super.fromJson(jsonLight);\n\n        if(jsonLight.spot !== undefined)\n        {\n            fromKeys(this, jsonLight.spot);\n        }\n    }\n\n    toUniform(gltf)\n    {\n        const uLight = new UniformLight();\n\n        if (this.node !== undefined)\n        {\n            const matrix = gltf.nodes[this.node].worldTransform;\n\n            var scale = vec3.fromValues(1, 1, 1);\n            mat4.getScaling(scale, matrix);\n\n            // To extract a correct rotation, the scaling component must be eliminated.\n            const mn = mat4.create();\n            for(const col of [0, 1, 2])\n            {\n                mn[col] = matrix[col] / scale[0];\n                mn[col + 4] = matrix[col + 4] / scale[1];\n                mn[col + 8] = matrix[col + 8] / scale[2];\n            }\n            var rotation = quat.create();\n            mat4.getRotation(rotation, mn);\n            quat.normalize(rotation, rotation);\n\n            const alongNegativeZ = vec3.fromValues(0, 0, -1);\n            vec3.transformQuat(uLight.direction, alongNegativeZ, rotation);\n\n            var translation = vec3.fromValues(0, 0, 0);\n            mat4.getTranslation(translation, matrix);\n            uLight.position = translation;\n        }\n\n        uLight.range = this.range;\n        uLight.color = jsToGl(this.color);\n        uLight.intensity = this.intensity;\n\n        uLight.innerConeCos = Math.cos(this.innerConeAngle);\n        uLight.outerConeCos = Math.cos(this.outerConeAngle);\n\n        switch(this.type)\n        {\n        case \"spot\":\n            uLight.type = Type_Spot;\n            break;\n        case \"point\":\n            uLight.type = Type_Point;\n            break;\n        case \"directional\":\n        default:\n            uLight.type = Type_Directional;\n            break;\n        }\n\n        return uLight;\n    }\n}\n\nconst Type_Directional = 0;\nconst Type_Point = 1;\nconst Type_Spot = 2;\n\nclass UniformLight extends UniformStruct\n{\n    constructor()\n    {\n        super();\n\n        const defaultDirection = vec3.fromValues(-0.7399, -0.6428, -0.1983);\n        this.direction = defaultDirection;\n        this.range = -1;\n\n        this.color = jsToGl([1, 1, 1]);\n        this.intensity = 1;\n\n        this.position = jsToGl([0, 0, 0]);\n        this.innerConeCos = 0.0;\n\n        this.outerConeCos = Math.PI / 4;\n        this.type = Type_Directional;\n        this.padding1 = 0.0;\n        this.padding2 = 0.0;\n    }\n}\n\nexport { gltfLight };\n","import { jsToGl } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\nimport { GL } from \"../Renderer/webgl\";\n\n// https://github.com/KhronosGroup/glTF/blob/khr_ktx2_ibl/extensions/2.0/Khronos/KHR_lights_image_based/schema/imageBasedLight.schema.json\n\nclass ImageBasedLight extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.rotation = jsToGl([0, 0, 0, 1]);\n        this.brightnessFactor = 1;\n        this.brightnessOffset = 0;\n        this.specularEnvironmentTexture = undefined;\n        this.diffuseEnvironmentTexture = undefined;\n        this.sheenEnvironmentTexture = undefined;\n\n        // non-gltf\n        this.levelCount = 1;\n    }\n\n    fromJson(jsonIBL)\n    {\n        super.fromJson(jsonIBL);\n\n        if(jsonIBL.extensions !== undefined)\n        {\n            this.fromJsonExtensions(jsonIBL.extensions);\n        }\n    }\n\n    fromJsonExtensions(extensions)\n    {\n        if (extensions.KHR_materials_sheen !== undefined)\n        {\n            this.sheenEnvironmentTexture = extensions.KHR_materials_sheen.sheenEnvironmentTexture;\n        }\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        if (this.diffuseEnvironmentTexture !== undefined)\n        {\n            const textureObject = gltf.textures[this.diffuseEnvironmentTexture];\n            textureObject.type = GL.TEXTURE_CUBE_MAP;\n        }\n        if (this.specularEnvironmentTexture !== undefined)\n        {\n            const textureObject = gltf.textures[this.specularEnvironmentTexture];\n            textureObject.type = GL.TEXTURE_CUBE_MAP;\n\n            const imageObject = gltf.images[textureObject.source];\n            this.levelCount = imageObject.image.levelCount;\n        }\n        if(this.sheenEnvironmentTexture !== undefined)\n        {\n            const textureObject = gltf.textures[this.sheenEnvironmentTexture];\n            textureObject.type = GL.TEXTURE_CUBE_MAP;\n\n            const imageObject = gltf.images[textureObject.source];\n            if (this.levelCount !== imageObject.image.levelCount)\n            {\n                console.error(\"Specular and sheen do not have same level count\");\n            }\n        }\n    }\n}\n\nexport { ImageBasedLight };\n","import { fromKeys, initGlForMembers } from './utils.js';\nimport { GL } from '../Renderer/webgl.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfTexture extends GltfObject\n{\n    constructor(sampler = undefined, source = undefined, type = GL.TEXTURE_2D, texture = undefined)\n    {\n        super();\n        this.sampler = sampler; // index to gltfSampler, default sampler ?\n        this.source = source; // index to gltfImage\n\n        // non gltf\n        this.glTexture = texture;\n        this.type = type;\n        this.initialized = false;\n        this.mipLevelCount = 0;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        if (this.sampler === undefined)\n        {\n            this.sampler = gltf.samplers.length - 1;\n        }\n\n        initGlForMembers(this, gltf, webGlContext);\n    }\n\n    fromJson(jsonTexture)\n    {\n        super.fromJson(jsonTexture);\n        if (jsonTexture.extensions !== undefined &&\n            jsonTexture.extensions.KHR_texture_basisu !== undefined &&\n            jsonTexture.extensions.KHR_texture_basisu.source !== undefined)\n        {\n            this.source = jsonTexture.extensions.KHR_texture_basisu.source;\n        }\n    }\n\n    destroy()\n    {\n        if (this.glTexture !== undefined)\n        {\n            // TODO: this breaks the dependency direction\n            WebGl.context.deleteTexture(this.glTexture);\n        }\n\n        this.glTexture = undefined;\n    }\n}\n\nclass gltfTextureInfo\n{\n    constructor(index = undefined, texCoord = 0, linear = true, samplerName = \"\", generateMips = true) // linear by default\n    {\n        this.index = index; // reference to gltfTexture\n        this.texCoord = texCoord; // which UV set to use\n        this.linear = linear;\n        this.samplerName = samplerName;\n        this.strength = 1.0; // occlusion\n        this.scale = 1.0; // normal\n        this.generateMips = generateMips;\n\n        this.extensions = undefined;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        initGlForMembers(this, gltf, webGlContext);\n    }\n\n    fromJson(jsonTextureInfo)\n    {\n        fromKeys(this, jsonTextureInfo);\n    }\n}\n\nexport { gltfTexture, gltfTextureInfo };\n","import { mat3, vec3, vec4 } from 'gl-matrix';\nimport { gltfTextureInfo } from './texture.js';\nimport { jsToGl, initGlForMembers } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfMaterial extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.name = undefined;\n        this.pbrMetallicRoughness = undefined;\n        this.normalTexture = undefined;\n        this.occlusionTexture = undefined;\n        this.emissiveTexture = undefined;\n        this.emissiveFactor = vec3.fromValues(0, 0, 0);\n        this.alphaMode = \"OPAQUE\";\n        this.alphaCutoff = 0.5;\n        this.doubleSided = false;\n\n        // non gltf properties\n        this.type = \"unlit\";\n        this.textures = [];\n        this.properties = new Map();\n        this.defines = [];\n    }\n\n    static createDefault()\n    {\n        const defaultMaterial = new gltfMaterial();\n        defaultMaterial.type = \"MR\";\n        defaultMaterial.name = \"Default Material\";\n        defaultMaterial.defines.push(\"MATERIAL_METALLICROUGHNESS 1\");\n        const baseColorFactor = vec4.fromValues(1, 1, 1, 1);\n        const metallicFactor = 1;\n        const roughnessFactor = 1;\n        defaultMaterial.properties.set(\"u_BaseColorFactor\", baseColorFactor);\n        defaultMaterial.properties.set(\"u_MetallicFactor\", metallicFactor);\n        defaultMaterial.properties.set(\"u_RoughnessFactor\", roughnessFactor);\n\n        return defaultMaterial;\n    }\n\n    getShaderIdentifier()\n    {\n        switch (this.type)\n        {\n        default:\n        case \"SG\": // fall through till we sparate shaders\n        case \"MR\": return \"pbr.frag\";\n            //case \"SG\": return \"specular-glossiness.frag\" ;\n        }\n    }\n\n    getDefines()\n    {\n        return this.defines;\n    }\n\n    getProperties()\n    {\n        return this.properties;\n    }\n\n    getTextures()\n    {\n        return this.textures;\n    }\n\n    parseTextureInfoExtensions(textureInfo, textureKey)\n    {\n        if(textureInfo.extensions === undefined)\n        {\n            return;\n        }\n\n        if(textureInfo.extensions.KHR_texture_transform !== undefined)\n        {\n            const uvTransform = textureInfo.extensions.KHR_texture_transform;\n\n            // override uvset\n            if(uvTransform.texCoord !== undefined)\n            {\n                textureInfo.texCoord = uvTransform.texCoord;\n            }\n\n            let rotation = mat3.create();\n            let scale = mat3.create();\n            let translation = mat3.create();\n\n            if(uvTransform.rotation !== undefined)\n            {\n                const s =  Math.sin(uvTransform.rotation);\n                const c =  Math.cos(uvTransform.rotation);\n\n                rotation = jsToGl([\n                    c, s, 0.0,\n                    -s, c, 0.0,\n                    0.0, 0.0, 1.0]);\n            }\n\n            if(uvTransform.scale !== undefined)\n            {\n                scale = jsToGl([uvTransform.scale[0], 0, 0, 0, uvTransform.scale[1], 0, 0, 0, 1]);\n            }\n\n            if(uvTransform.offset !== undefined)\n            {\n                translation = jsToGl([1, 0, uvTransform.offset[0], 0, 1, uvTransform.offset[1], 0, 0, 1]);\n            }\n\n            let uvMatrix = mat3.create();\n            mat3.multiply(uvMatrix, rotation, scale);\n            mat3.multiply(uvMatrix, uvMatrix, translation);\n\n            this.defines.push(\"HAS_\" + textureKey.toUpperCase() + \"_UV_TRANSFORM 1\");\n            this.properties.set(\"u_\" + textureKey + \"UVTransform\", uvMatrix);\n        }\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        if (this.normalTexture !== undefined)\n        {\n            this.normalTexture.samplerName = \"u_NormalSampler\";\n            this.parseTextureInfoExtensions(this.normalTexture, \"Normal\");\n            this.textures.push(this.normalTexture);\n            this.defines.push(\"HAS_NORMAL_MAP 1\");\n            this.properties.set(\"u_NormalScale\", this.normalTexture.scale);\n            this.properties.set(\"u_NormalUVSet\", this.normalTexture.texCoord);\n        }\n\n        if (this.occlusionTexture !== undefined)\n        {\n            this.occlusionTexture.samplerName = \"u_OcclusionSampler\";\n            this.parseTextureInfoExtensions(this.occlusionTexture, \"Occlusion\");\n            this.textures.push(this.occlusionTexture);\n            this.defines.push(\"HAS_OCCLUSION_MAP 1\");\n            this.properties.set(\"u_OcclusionStrength\", this.occlusionTexture.strength);\n            this.properties.set(\"u_OcclusionUVSet\", this.occlusionTexture.texCoord);\n        }\n\n        this.properties.set(\"u_EmissiveFactor\", this.emissiveFactor);\n        if (this.emissiveTexture !== undefined)\n        {\n            this.emissiveTexture.samplerName = \"u_EmissiveSampler\";\n            this.parseTextureInfoExtensions(this.emissiveTexture, \"Emissive\");\n            this.textures.push(this.emissiveTexture);\n            this.defines.push(\"HAS_EMISSIVE_MAP 1\");\n            this.properties.set(\"u_EmissiveUVSet\", this.emissiveTexture.texCoord);\n        }\n\n        if (this.baseColorTexture !== undefined)\n        {\n            this.baseColorTexture.samplerName = \"u_BaseColorSampler\";\n            this.parseTextureInfoExtensions(this.baseColorTexture, \"BaseColor\");\n            this.textures.push(this.baseColorTexture);\n            this.defines.push(\"HAS_BASE_COLOR_MAP 1\");\n            this.properties.set(\"u_BaseColorUVSet\", this.baseColorTexture.texCoord);\n        }\n\n        if (this.metallicRoughnessTexture !== undefined)\n        {\n            this.metallicRoughnessTexture.samplerName = \"u_MetallicRoughnessSampler\";\n            this.parseTextureInfoExtensions(this.metallicRoughnessTexture, \"MetallicRoughness\");\n            this.textures.push(this.metallicRoughnessTexture);\n            this.defines.push(\"HAS_METALLIC_ROUGHNESS_MAP 1\");\n            this.properties.set(\"u_MetallicRoughnessUVSet\", this.metallicRoughnessTexture.texCoord);\n        }\n\n        if (this.diffuseTexture !== undefined)\n        {\n            this.diffuseTexture.samplerName = \"u_DiffuseSampler\";\n            this.parseTextureInfoExtensions(this.diffuseTexture, \"Diffuse\");\n            this.textures.push(this.diffuseTexture);\n            this.defines.push(\"HAS_DIFFUSE_MAP 1\");\n            this.properties.set(\"u_DiffuseUVSet\", this.diffuseTexture.texCoord);\n        }\n\n        if (this.specularGlossinessTexture !== undefined)\n        {\n            this.specularGlossinessTexture.samplerName = \"u_SpecularGlossinessSampler\";\n            this.parseTextureInfoExtensions(this.specularGlossinessTexture, \"SpecularGlossiness\");\n            this.textures.push(this.specularGlossinessTexture);\n            this.defines.push(\"HAS_SPECULAR_GLOSSINESS_MAP 1\");\n            this.properties.set(\"u_SpecularGlossinessUVSet\", this.specularGlossinessTexture.texCoord);\n        }\n\n        if(this.alphaMode === 'MASK') // only set cutoff value for mask material\n        {\n            this.defines.push(\"ALPHAMODE_MASK 1\");\n            this.properties.set(\"u_AlphaCutoff\", this.alphaCutoff);\n        }\n        else if (this.alphaMode === 'OPAQUE')\n        {\n            this.defines.push(\"ALPHAMODE_OPAQUE 1\");\n        }\n\n        if (this.pbrMetallicRoughness !== undefined && this.type !== \"SG\")\n        {\n            this.defines.push(\"MATERIAL_METALLICROUGHNESS 1\");\n\n            let baseColorFactor = vec4.fromValues(1, 1, 1, 1);\n            let metallicFactor = 1;\n            let roughnessFactor = 1;\n\n            if (this.pbrMetallicRoughness.baseColorFactor !== undefined)\n            {\n                baseColorFactor = jsToGl(this.pbrMetallicRoughness.baseColorFactor);\n            }\n\n            if (this.pbrMetallicRoughness.metallicFactor !== undefined)\n            {\n                metallicFactor = this.pbrMetallicRoughness.metallicFactor;\n            }\n\n            if (this.pbrMetallicRoughness.roughnessFactor !== undefined)\n            {\n                roughnessFactor = this.pbrMetallicRoughness.roughnessFactor;\n            }\n\n            this.properties.set(\"u_BaseColorFactor\", baseColorFactor);\n            this.properties.set(\"u_MetallicFactor\", metallicFactor);\n            this.properties.set(\"u_RoughnessFactor\", roughnessFactor);\n        }\n\n        if (this.extensions !== undefined)\n        {\n            if (this.extensions.KHR_materials_unlit !== undefined)\n            {\n                this.defines.push(\"MATERIAL_UNLIT 1\");\n            }\n\n            if (this.extensions.KHR_materials_pbrSpecularGlossiness !== undefined)\n            {\n                this.defines.push(\"MATERIAL_SPECULARGLOSSINESS 1\");\n\n                let diffuseFactor = vec4.fromValues(1, 1, 1, 1);\n                let specularFactor = vec3.fromValues(1, 1, 1);\n                let glossinessFactor = 1;\n\n                if (this.extensions.KHR_materials_pbrSpecularGlossiness.diffuseFactor !== undefined)\n                {\n                    diffuseFactor = jsToGl(this.extensions.KHR_materials_pbrSpecularGlossiness.diffuseFactor);\n                }\n\n                if (this.extensions.KHR_materials_pbrSpecularGlossiness.specularFactor !== undefined)\n                {\n                    specularFactor = jsToGl(this.extensions.KHR_materials_pbrSpecularGlossiness.specularFactor);\n                }\n\n                if (this.extensions.KHR_materials_pbrSpecularGlossiness.glossinessFactor !== undefined)\n                {\n                    glossinessFactor = this.extensions.KHR_materials_pbrSpecularGlossiness.glossinessFactor;\n                }\n\n                this.properties.set(\"u_DiffuseFactor\", diffuseFactor);\n                this.properties.set(\"u_SpecularFactor\", specularFactor);\n                this.properties.set(\"u_GlossinessFactor\", glossinessFactor);\n            }\n\n            // Clearcoat is part of the default metallic-roughness shader\n            if(this.extensions.KHR_materials_clearcoat !== undefined)\n            {\n                let clearcoatFactor = 0.0;\n                let clearcoatRoughnessFactor = 0.0;\n\n                this.defines.push(\"MATERIAL_CLEARCOAT 1\");\n\n                if(this.extensions.KHR_materials_clearcoat.clearcoatFactor !== undefined)\n                {\n                    clearcoatFactor = this.extensions.KHR_materials_clearcoat.clearcoatFactor;\n                }\n                if(this.extensions.KHR_materials_clearcoat.clearcoatRoughnessFactor !== undefined)\n                {\n                    clearcoatRoughnessFactor = this.extensions.KHR_materials_clearcoat.clearcoatRoughnessFactor;\n                }\n\n                if (this.clearcoatTexture !== undefined)\n                {\n                    this.clearcoatTexture.samplerName = \"u_ClearcoatSampler\";\n                    this.parseTextureInfoExtensions(this.clearcoatTexture, \"Clearcoat\");\n                    this.textures.push(this.clearcoatTexture);\n                    this.defines.push(\"HAS_CLEARCOAT_TEXTURE_MAP 1\");\n                    this.properties.set(\"u_ClearcoatUVSet\", this.clearcoatTexture.texCoord);\n                }\n                if (this.clearcoatRoughnessTexture !== undefined)\n                {\n                    this.clearcoatRoughnessTexture.samplerName = \"u_ClearcoatRoughnessSampler\";\n                    this.parseTextureInfoExtensions(this.clearcoatRoughnessTexture, \"ClearcoatRoughness\");\n                    this.textures.push(this.clearcoatRoughnessTexture);\n                    this.defines.push(\"HAS_CLEARCOAT_ROUGHNESS_MAP 1\");\n                    this.properties.set(\"u_ClearcoatRoughnessUVSet\", this.clearcoatRoughnessTexture.texCoord);\n                }\n                if (this.clearcoatNormalTexture !== undefined)\n                {\n                    this.clearcoatNormalTexture.samplerName = \"u_ClearcoatNormalSampler\";\n                    this.parseTextureInfoExtensions(this.clearcoatNormalTexture, \"ClearcoatNormal\");\n                    this.textures.push(this.clearcoatNormalTexture);\n                    this.defines.push(\"HAS_CLEARCOAT_NORMAL_MAP 1\");\n                    this.properties.set(\"u_ClearcoatNormalUVSet\", this.clearcoatNormalTexture.texCoord);\n                }\n                this.properties.set(\"u_ClearcoatFactor\", clearcoatFactor);\n                this.properties.set(\"u_ClearcoatRoughnessFactor\", clearcoatRoughnessFactor);\n            }\n\n            // Sheen material extension\n            // https://github.com/sebavan/glTF/tree/KHR_materials_sheen/extensions/2.0/Khronos/KHR_materials_sheen\n            if(this.extensions.KHR_materials_sheen !== undefined)\n            {\n                let sheenRoughnessFactor = 0.0;\n                let sheenColorFactor =  vec3.fromValues(1.0, 1.0, 1.0);\n\n                this.defines.push(\"MATERIAL_SHEEN 1\");\n\n                if(this.extensions.KHR_materials_sheen.sheenRoughnessFactor !== undefined)\n                {\n                    sheenRoughnessFactor = this.extensions.KHR_materials_sheen.sheenRoughnessFactor;\n                }\n                if(this.extensions.KHR_materials_sheen.sheenColorFactor !== undefined)\n                {\n                    sheenColorFactor = jsToGl(this.extensions.KHR_materials_sheen.sheenColorFactor);\n                }\n                if (this.sheenRoughnessTexture !== undefined)\n                {\n                    this.sheenRoughnessTexture.samplerName = \"u_sheenRoughnessSampler\";\n                    this.parseTextureInfoExtensions(this.sheenRoughnessTexture, \"SheenRoughness\");\n                    this.textures.push(this.sheenRoughnessTexture);\n                    this.defines.push(\"HAS_SHEEN_ROUGHNESS_MAP 1\");\n                    this.properties.set(\"u_SheenRoughnessUVSet\", this.sheenRoughnessTexture.texCoord);\n                }\n                if (this.sheenColorTexture !== undefined)\n                {\n                    this.sheenColorTexture.samplerName = \"u_SheenColorSampler\";\n                    this.parseTextureInfoExtensions(this.sheenColorTexture, \"SheenColor\");\n                    this.textures.push(this.sheenColorTexture);\n                    this.defines.push(\"HAS_SHEEN_COLOR_MAP 1\");\n                    this.properties.set(\"u_SheenColorUVSet\", this.sheenColorTexture.texCoord);\n                }\n\n                this.properties.set(\"u_SheenRoughnessFactor\", sheenRoughnessFactor);\n                this.properties.set(\"u_SheenColorFactor\", sheenColorFactor);\n            }\n\n            // KHR Extension: Transmission\n            if (this.extensions.KHR_materials_transmission !== undefined)\n            {\n                let transmissionFactor = 0.0;\n\n                this.defines.push(\"MATERIAL_TRANSMISSION 1\");\n\n                if (transmissionFactor !== undefined)\n                {\n                    transmissionFactor = this.extensions.KHR_materials_transmission.transmissionFactor;\n                }\n                if (this.transmissionTexture !== undefined)\n                {\n                    this.transmissionTexture.samplerName = \"u_TransmissionSampler\";\n                    this.parseTextureInfoExtensions(this.transmissionTexture, \"Transmission\");\n                    this.textures.push(this.transmissionTexture);\n                    this.defines.push(\"HAS_TRANSMISSION_MAP 1\");\n                    this.properties.set(\"u_TransmissionUVSet\", this.transmissionTexture.texCoord);\n                }\n\n                this.properties.set(\"u_TransmissionFactor\", transmissionFactor);\n            }\n        }\n\n        initGlForMembers(this, gltf, webGlContext);\n    }\n\n    fromJson(jsonMaterial)\n    {\n        super.fromJson(jsonMaterial);\n\n        if (jsonMaterial.emissiveFactor !== undefined)\n        {\n            this.emissiveFactor = jsToGl(jsonMaterial.emissiveFactor);\n        }\n\n        if (jsonMaterial.normalTexture !== undefined)\n        {\n            const normalTexture = new gltfTextureInfo();\n            normalTexture.fromJson(jsonMaterial.normalTexture);\n            this.normalTexture = normalTexture;\n        }\n\n        if (jsonMaterial.occlusionTexture !== undefined)\n        {\n            const occlusionTexture = new gltfTextureInfo();\n            occlusionTexture.fromJson(jsonMaterial.occlusionTexture);\n            this.occlusionTexture = occlusionTexture;\n        }\n\n        if (jsonMaterial.emissiveTexture !== undefined)\n        {\n            const emissiveTexture = new gltfTextureInfo(undefined, 0, false);\n            emissiveTexture.fromJson(jsonMaterial.emissiveTexture);\n            this.emissiveTexture = emissiveTexture;\n        }\n\n        if(jsonMaterial.extensions !== undefined)\n        {\n            this.fromJsonMaterialExtensions(jsonMaterial.extensions);\n        }\n\n        if (jsonMaterial.pbrMetallicRoughness !== undefined && this.type !== \"SG\")\n        {\n            this.type = \"MR\";\n            this.fromJsonMetallicRoughness(jsonMaterial.pbrMetallicRoughness);\n        }\n    }\n\n    fromJsonMaterialExtensions(jsonExtensions)\n    {\n        if (jsonExtensions.KHR_materials_pbrSpecularGlossiness !== undefined)\n        {\n            this.type = \"SG\";\n            this.fromJsonSpecularGlossiness(jsonExtensions.KHR_materials_pbrSpecularGlossiness);\n        }\n\n        if(jsonExtensions.KHR_materials_unlit !== undefined)\n        {\n            this.type = \"unlit\";\n        }\n\n        if(jsonExtensions.KHR_materials_clearcoat !== undefined)\n        {\n            this.fromJsonClearcoat(jsonExtensions.KHR_materials_clearcoat);\n        }\n\n        if(jsonExtensions.KHR_materials_sheen !== undefined)\n        {\n            this.fromJsonSheen(jsonExtensions.KHR_materials_sheen);\n        }\n\n        if(jsonExtensions.KHR_materials_transmission !== undefined)\n        {\n            this.fromJsonTransmission(jsonExtensions.KHR_materials_transmission);\n        }\n    }\n\n    fromJsonMetallicRoughness(jsonMetallicRoughness)\n    {\n        if (jsonMetallicRoughness.baseColorTexture !== undefined)\n        {\n            const baseColorTexture = new gltfTextureInfo(undefined, 0, false);\n            baseColorTexture.fromJson(jsonMetallicRoughness.baseColorTexture);\n            this.baseColorTexture = baseColorTexture;\n        }\n\n        if (jsonMetallicRoughness.metallicRoughnessTexture !== undefined)\n        {\n            const metallicRoughnessTexture = new gltfTextureInfo();\n            metallicRoughnessTexture.fromJson(jsonMetallicRoughness.metallicRoughnessTexture);\n            this.metallicRoughnessTexture = metallicRoughnessTexture;\n        }\n    }\n\n    fromJsonSpecularGlossiness(jsonSpecularGlossiness)\n    {\n        if (jsonSpecularGlossiness.diffuseTexture !== undefined)\n        {\n            const diffuseTexture = new gltfTextureInfo(undefined, 0, false);\n            diffuseTexture.fromJson(jsonSpecularGlossiness.diffuseTexture);\n            this.diffuseTexture = diffuseTexture;\n        }\n\n        if (jsonSpecularGlossiness.specularGlossinessTexture !== undefined)\n        {\n            const specularGlossinessTexture = new gltfTextureInfo();\n            specularGlossinessTexture.fromJson(jsonSpecularGlossiness.specularGlossinessTexture);\n            this.specularGlossinessTexture = specularGlossinessTexture;\n        }\n    }\n\n    fromJsonClearcoat(jsonClearcoat)\n    {\n        if(jsonClearcoat.clearcoatTexture !== undefined)\n        {\n            const clearcoatTexture = new gltfTextureInfo();\n            clearcoatTexture.fromJson(jsonClearcoat.clearcoatTexture);\n            this.clearcoatTexture = clearcoatTexture;\n        }\n\n        if(jsonClearcoat.clearcoatRoughnessTexture !== undefined)\n        {\n            const clearcoatRoughnessTexture =  new gltfTextureInfo();\n            clearcoatRoughnessTexture.fromJson(jsonClearcoat.clearcoatRoughnessTexture);\n            this.clearcoatRoughnessTexture = clearcoatRoughnessTexture;\n        }\n\n        if(jsonClearcoat.clearcoatNormalTexture !== undefined)\n        {\n            const clearcoatNormalTexture =  new gltfTextureInfo();\n            clearcoatNormalTexture.fromJson(jsonClearcoat.clearcoatNormalTexture);\n            this.clearcoatNormalTexture = clearcoatNormalTexture;\n        }\n    }\n\n    fromJsonSheen(jsonSheen)\n    {\n        if(jsonSheen.sheenColorTexture !== undefined)\n        {\n            const sheenColorTexture = new gltfTextureInfo();\n            sheenColorTexture.fromJson(jsonSheen.sheenColorTexture);\n            this.sheenColorTexture = sheenColorTexture;\n        }\n        if(jsonSheen.sheenRoughnessTexture !== undefined)\n        {\n            const sheenRoughnessTexture = new gltfTextureInfo();\n            sheenRoughnessTexture.fromJson(jsonSheen.sheenRoughnessTexture);\n            this.sheenRoughnessTexture = sheenRoughnessTexture;\n        }\n    }\n\n    fromJsonTransmission(jsonTransmission)\n    {\n        if(jsonTransmission.transmissionTexture !== undefined)\n        {\n            const transmissionTexture = new gltfTextureInfo();\n            transmissionTexture.fromJson(jsonTransmission.transmissionTexture);\n            this.transmissionTexture = transmissionTexture;\n        }\n    }\n}\n\nexport { gltfMaterial };\n","class DracoDecoder {\n\n    constructor(dracoLib) {\n        if (!DracoDecoder.instance && dracoLib === undefined)\n        {\n            if (DracoDecoderModule === undefined)\n            {\n                console.error('Failed to initalize DracoDecoder: draco library undefined');\n                return undefined;\n            }\n            else\n            {\n                dracoLib = DracoDecoderModule;\n            }\n        }\n        if (!DracoDecoder.instance)\n        {\n            DracoDecoder.instance = this;\n            this.module = null;\n\n            this.initializingPromise = new Promise(resolve => {\n                let dracoDecoderType = {};\n                dracoDecoderType['onModuleLoaded'] = dracoDecoderModule => {\n                    this.module = dracoDecoderModule;\n                    resolve();\n                };\n                dracoLib(dracoDecoderType);\n            });\n        }\n        return DracoDecoder.instance;\n    }\n\n    async ready() {\n        await this.initializingPromise;\n        Object.freeze(DracoDecoder.instance);\n    }\n\n}\n\nexport { DracoDecoder };\n","import { initGlForMembers } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\nimport { gltfBuffer } from './buffer.js';\nimport { gltfBufferView } from './buffer_view.js';\nimport { DracoDecoder } from '../ResourceLoader/draco.js';\nimport { GL  } from '../Renderer/webgl.js';\n\nclass gltfPrimitive extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.attributes = [];\n        this.targets = [];\n        this.indices = undefined;\n        this.material = undefined;\n        this.mode = GL.TRIANGLES;\n\n        // non gltf\n        this.glAttributes = [];\n        this.defines = [];\n        this.skip = true;\n        this.hasWeights = false;\n        this.hasJoints = false;\n        this.hasNormals = false;\n        this.hasTangents = false;\n        this.hasTexcoord = false;\n        this.hasColor = false;\n\n        // The primitive centroid is used for depth sorting.\n        this.centroid = undefined;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        // Use the default glTF material.\n        if (this.material === undefined)\n        {\n            this.material = gltf.materials.length - 1;\n        }\n\n        initGlForMembers(this, gltf, webGlContext);\n\n        const maxAttributes = webGlContext.getParameter(GL.MAX_VERTEX_ATTRIBS);\n\n        // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\n        if (this.extensions !== undefined)\n        {\n            if (this.extensions.KHR_draco_mesh_compression !== undefined)\n            {\n                const dracoDecoder = new DracoDecoder();\n                if (dracoDecoder !== undefined && Object.isFrozen(dracoDecoder))\n                {\n                    let dracoGeometry = this.decodeDracoBufferToIntermediate(\n                        this.extensions.KHR_draco_mesh_compression, gltf);\n                    this.copyDataFromDecodedGeometry(gltf, dracoGeometry, this.attributes);\n                }\n                else\n                {\n                    console.warn('Failed to load draco compressed mesh: DracoDecoder not initialized');\n                }\n            }\n        }\n\n        // VERTEX ATTRIBUTES\n        for (const attribute of Object.keys(this.attributes))\n        {\n            if(this.glAttributes.length >= maxAttributes)\n            {\n                console.error(\"To many vertex attributes for this primitive, skipping \" + attribute);\n                break;\n            }\n\n            const idx = this.attributes[attribute];\n            switch (attribute)\n            {\n            case \"POSITION\":\n                this.skip = false;\n                this.glAttributes.push({ attribute: attribute, name: \"a_Position\", accessor: idx });\n                break;\n            case \"NORMAL\":\n                this.hasNormals = true;\n                this.defines.push(\"HAS_NORMALS 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Normal\", accessor: idx });\n                break;\n            case \"TANGENT\":\n                this.hasTangents = true;\n                this.defines.push(\"HAS_TANGENTS 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Tangent\", accessor: idx });\n                break;\n            case \"TEXCOORD_0\":\n                this.hasTexcoord = true;\n                this.defines.push(\"HAS_UV_SET1 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_UV1\", accessor: idx });\n                break;\n            case \"TEXCOORD_1\":\n                this.hasTexcoord = true;\n                this.defines.push(\"HAS_UV_SET2 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_UV2\", accessor: idx });\n                break;\n            case \"COLOR_0\":\n                this.hasColor = true;\n                const accessor = gltf.accessors[idx];\n                this.defines.push(\"HAS_VERTEX_COLOR_\" + accessor.type + \" 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Color\", accessor: idx });\n                break;\n            case \"JOINTS_0\":\n                this.hasJoints = true;\n                this.defines.push(\"HAS_JOINT_SET1 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Joint1\", accessor: idx });\n                break;\n            case \"WEIGHTS_0\":\n                this.hasWeights = true;\n                this.defines.push(\"HAS_WEIGHT_SET1 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Weight1\", accessor: idx });\n                break;\n            case \"JOINTS_1\":\n                this.hasJoints = true;\n                this.defines.push(\"HAS_JOINT_SET2 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Joint2\", accessor: idx });\n                break;\n            case \"WEIGHTS_1\":\n                this.hasWeights = true;\n                this.defines.push(\"HAS_WEIGHT_SET2 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Weight2\", accessor: idx });\n                break;\n            default:\n                console.log(\"Unknown attribute: \" + attribute);\n            }\n        }\n\n        // MORPH TARGETS\n        if (this.targets !== undefined)\n        {\n            let i = 0;\n            for (const target of this.targets)\n            {\n                if(this.glAttributes.length + 3 > maxAttributes)\n                {\n                    console.error(\"To many vertex attributes for this primitive, skipping target \" + i);\n                    break;\n                }\n\n                for (const attribute of Object.keys(target))\n                {\n                    const idx = target[attribute];\n\n                    switch (attribute)\n                    {\n                    case \"POSITION\":\n                        this.defines.push(\"HAS_TARGET_POSITION\" + i + \" 1\");\n                        this.glAttributes.push({ attribute: attribute, name: \"a_Target_Position\" + i, accessor: idx });\n                        break;\n                    case \"NORMAL\":\n                        this.defines.push(\"HAS_TARGET_NORMAL\" + i + \" 1\");\n                        this.glAttributes.push({ attribute: attribute, name: \"a_Target_Normal\" + i, accessor: idx });\n                        break;\n                    case \"TANGENT\":\n                        this.defines.push(\"HAS_TARGET_TANGENT\" + i + \" 1\");\n                        this.glAttributes.push({ attribute: attribute, name: \"a_Target_Tangent\" + i, accessor: idx });\n                        break;\n                    }\n                }\n\n                ++i;\n            }\n        }\n    }\n\n    getShaderIdentifier()\n    {\n        return \"primitive.vert\";\n    }\n\n    getDefines()\n    {\n        return this.defines;\n    }\n\n    setCentroid(centroid)\n    {\n        this.centroid = centroid;\n    }\n\n    fromJson(jsonPrimitive)\n    {\n        super.fromJson(jsonPrimitive);\n\n        if(jsonPrimitive.extensions !== undefined)\n        {\n            this.fromJsonPrimitiveExtensions(jsonPrimitive.extensions);\n        }\n    }\n\n    fromJsonPrimitiveExtensions(jsonExtensions)\n    {\n        if(jsonExtensions.KHR_materials_variants !== undefined)\n        {\n            this.fromJsonVariants(jsonExtensions.KHR_materials_variants);\n        }\n    }\n\n    fromJsonVariants(jsonVariants)\n    {\n        if(jsonVariants.mappings !== undefined)\n        {\n            this.mappings = jsonVariants.mappings;\n        }\n    }\n\n    copyDataFromDecodedGeometry(gltf, dracoGeometry, primitiveAttributes)\n    {\n        // indices\n        let indexBuffer = dracoGeometry.index.array;\n        this.loadBufferIntoGltf(indexBuffer, gltf, this.indices, 34963,\n            \"index buffer view\");\n\n        // Position\n        if(dracoGeometry.attributes.POSITION !== undefined)\n        {\n            let positionBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.POSITION.array,\n                dracoGeometry.attributes.POSITION.componentType);\n            this.loadBufferIntoGltf(positionBuffer, gltf, primitiveAttributes[\"POSITION\"], 34962,\n                \"position buffer view\");\n        }\n\n        // Normal\n        if(dracoGeometry.attributes.NORMAL !== undefined)\n        {\n            let normalBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.NORMAL.array,\n                dracoGeometry.attributes.NORMAL.componentType);\n            this.loadBufferIntoGltf(normalBuffer, gltf, primitiveAttributes[\"NORMAL\"], 34962,\n                \"normal buffer view\");\n        }\n\n        // TEXCOORD_0\n        if(dracoGeometry.attributes.TEXCOORD_0 !== undefined)\n        {\n            let uvBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.TEXCOORD_0.array,\n                dracoGeometry.attributes.TEXCOORD_0.componentType);\n            this.loadBufferIntoGltf(uvBuffer, gltf, primitiveAttributes[\"TEXCOORD_0\"], 34962,\n                \"TEXCOORD_0 buffer view\");\n        }\n\n        // TEXCOORD_1\n        if(dracoGeometry.attributes.TEXCOORD_1 !== undefined)\n        {\n            let uvBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.TEXCOORD_1.array,\n                dracoGeometry.attributes.TEXCOORD_1.componentType);\n            this.loadBufferIntoGltf(uvBuffer, gltf, primitiveAttributes[\"TEXCOORD_1\"], 34962,\n                \"TEXCOORD_1 buffer view\");\n        }\n\n        // Tangent\n        if(dracoGeometry.attributes.TANGENT !== undefined)\n        {\n            let tangentBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.TANGENT.array,\n                dracoGeometry.attributes.TANGENT.componentType);\n            this.loadBufferIntoGltf(tangentBuffer, gltf, primitiveAttributes[\"TANGENT\"], 34962,\n                \"Tangent buffer view\");\n        }\n\n        // Color\n        if(dracoGeometry.attributes.COLOR_0 !== undefined)\n        {\n            let colorBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.COLOR_0.array,\n                dracoGeometry.attributes.COLOR_0.componentType);\n            this.loadBufferIntoGltf(colorBuffer, gltf, primitiveAttributes[\"COLOR_0\"], 34962,\n                \"color buffer view\");\n        }\n\n        // JOINTS_0\n        if(dracoGeometry.attributes.JOINTS_0 !== undefined)\n        {\n            let jointsBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.JOINTS_0.array,\n                dracoGeometry.attributes.JOINTS_0.componentType);\n            this.loadBufferIntoGltf(jointsBuffer, gltf, primitiveAttributes[\"JOINTS_0\"], 34963,\n                \"JOINTS_0 buffer view\");\n        }\n\n        // WEIGHTS_0\n        if(dracoGeometry.attributes.WEIGHTS_0 !== undefined)\n        {\n            let weightsBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.WEIGHTS_0.array,\n                dracoGeometry.attributes.WEIGHTS_0.componentType);\n            this.loadBufferIntoGltf(weightsBuffer, gltf, primitiveAttributes[\"WEIGHTS_0\"], 34963,\n                \"WEIGHTS_0 buffer view\");\n        }\n\n        // JOINTS_1\n        if(dracoGeometry.attributes.JOINTS_1 !== undefined)\n        {\n            let jointsBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.JOINTS_1.array,\n                dracoGeometry.attributes.JOINTS_1.componentType);\n            this.loadBufferIntoGltf(jointsBuffer, gltf, primitiveAttributes[\"JOINTS_1\"], 34963,\n                \"JOINTS_1 buffer view\");\n        }\n\n        // WEIGHTS_1\n        if(dracoGeometry.attributes.WEIGHTS_1 !== undefined)\n        {\n            let weightsBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.WEIGHTS_1.array,\n                dracoGeometry.attributes.WEIGHTS_1.componentType);\n            this.loadBufferIntoGltf(weightsBuffer, gltf, primitiveAttributes[\"WEIGHTS_1\"], 34963,\n                \"WEIGHTS_1 buffer view\");\n        }\n    }\n\n    loadBufferIntoGltf(buffer, gltf, gltfAccessorIndex, gltfBufferViewTarget, gltfBufferViewName)\n    {\n        const gltfBufferObj = new gltfBuffer();\n        gltfBufferObj.byteLength = buffer.byteLength;\n        gltfBufferObj.buffer = buffer;\n        gltf.buffers.push(gltfBufferObj);\n\n        const gltfBufferViewObj = new gltfBufferView();\n        gltfBufferViewObj.buffer = gltf.buffers.length - 1;\n        gltfBufferViewObj.byteLength = buffer.byteLength;\n        if(gltfBufferViewName !== undefined)\n        {\n            gltfBufferViewObj.name = gltfBufferViewName;\n        }\n        gltfBufferViewObj.target = gltfBufferViewTarget;\n        gltf.bufferViews.push(gltfBufferViewObj);\n\n        gltf.accessors[gltfAccessorIndex].byteOffset = 0;\n        gltf.accessors[gltfAccessorIndex].bufferView = gltf.bufferViews.length - 1;\n    }\n\n    loadArrayIntoArrayBuffer(arrayData, componentType)\n    {\n        let arrayBuffer;\n        switch (componentType)\n        {\n        case \"Int8Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length);\n            let int8Array = new Int8Array(arrayBuffer);\n            int8Array.set(arrayData);\n            break;\n        case \"Uint8Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length);\n            let uint8Array = new Uint8Array(arrayBuffer);\n            uint8Array.set(arrayData);\n            break;\n        case \"Int16Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length * 2);\n            let int16Array = new Int16Array(arrayBuffer);\n            int16Array.set(arrayData);\n            break;\n        case \"Uint16Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length * 2);\n            let uint16Array = new Uint16Array(arrayBuffer);\n            uint16Array.set(arrayData);\n            break;\n        case \"Int32Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length * 4);\n            let int32Array = new Int32Array(arrayBuffer);\n            int32Array.set(arrayData);\n            break;\n        case \"Uint32Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length * 4);\n            let uint32Array = new Uint32Array(arrayBuffer);\n            uint32Array.set(arrayData);\n            break;\n        default:\n        case \"Float32Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length * 4);\n            let floatArray = new Float32Array(arrayBuffer);\n            floatArray.set(arrayData);\n            break;\n        }\n\n\n        return arrayBuffer;\n    }\n\n    decodeDracoBufferToIntermediate(dracoExtension, gltf)\n    {\n        let dracoBufferViewIDX = dracoExtension.bufferView;\n\n        const origGltfDrBufViewObj = gltf.bufferViews[dracoBufferViewIDX];\n        const origGltfDracoBuffer = gltf.buffers[origGltfDrBufViewObj.buffer];\n\n        const totalBuffer = new Int8Array( origGltfDracoBuffer.buffer );\n        const actualBuffer = totalBuffer.slice(origGltfDrBufViewObj.byteOffset,\n            origGltfDrBufViewObj.byteOffset + origGltfDrBufViewObj.byteLength);\n\n        // decode draco buffer to geometry intermediate\n        let dracoDecoder = new DracoDecoder();\n        let draco = dracoDecoder.module;\n        let decoder = new draco.Decoder();\n        let decoderBuffer = new draco.DecoderBuffer();\n        decoderBuffer.Init(actualBuffer, origGltfDrBufViewObj.byteLength);\n        let geometry = this.decodeGeometry( draco, decoder, decoderBuffer, dracoExtension.attributes, gltf );\n\n        draco.destroy( decoderBuffer );\n\n        return geometry;\n    }\n\n    getDracoArrayTypeFromComponentType(componentType)\n    {\n        switch (componentType)\n        {\n        case GL.BYTE:\n            return \"Int8Array\";\n        case GL.UNSIGNED_BYTE:\n            return \"Uint8Array\";\n        case GL.SHORT:\n            return \"Int16Array\";\n        case GL.UNSIGNED_SHORT:\n            return \"Uint16Array\";\n        case GL.INT:\n            return \"Int32Array\";\n        case GL.UNSIGNED_INT:\n            return \"Uint32Array\";\n        case GL.FLOAT:\n            return \"Float32Array\";\n        default:\n            return \"Float32Array\";\n        }\n    }\n\n    decodeGeometry(draco, decoder, decoderBuffer, gltfDracoAttributes, gltf) {\n        let dracoGeometry;\n        let decodingStatus;\n\n        // decode mesh in draco decoder\n        let geometryType = decoder.GetEncodedGeometryType( decoderBuffer );\n        if ( geometryType === draco.TRIANGULAR_MESH ) {\n            dracoGeometry = new draco.Mesh();\n            decodingStatus = decoder.DecodeBufferToMesh( decoderBuffer, dracoGeometry );\n        }\n        else\n        {\n            throw new Error( 'DRACOLoader: Unexpected geometry type.' );\n        }\n\n        if ( ! decodingStatus.ok() || dracoGeometry.ptr === 0 ) {\n            throw new Error( 'DRACOLoader: Decoding failed: ' + decodingStatus.error_msg() );\n        }\n\n        let geometry = { index: null, attributes: {} };\n        let vertexCount = dracoGeometry.num_points();\n\n        // Gather all vertex attributes.\n        for(let dracoAttr in gltfDracoAttributes)\n        {\n            let componentType = GL.BYTE;\n            let accessotVertexCount;\n            // find gltf accessor for this draco attribute\n            for (const [key, value] of Object.entries(this.attributes))\n            {\n                if(key === dracoAttr)\n                {\n                    componentType = gltf.accessors[value].componentType;\n                    accessotVertexCount = gltf.accessors[value].count;\n                    break;\n                }\n            }\n\n            // check if vertex count matches\n            if(vertexCount !== accessotVertexCount)\n            {\n                throw new Error(`DRACOLoader: Accessor vertex count ${accessotVertexCount} does not match draco decoder vertex count  ${vertexCount}`);\n            }\n            componentType = this.getDracoArrayTypeFromComponentType(componentType);\n\n            let dracoAttribute = decoder.GetAttributeByUniqueId( dracoGeometry, gltfDracoAttributes[dracoAttr]);\n            var tmpObj = this.decodeAttribute( draco, decoder,\n                dracoGeometry, dracoAttr, dracoAttribute, componentType);\n            geometry.attributes[tmpObj.name] = tmpObj;\n        }\n\n        // Add index buffer\n        if ( geometryType === draco.TRIANGULAR_MESH ) {\n\n            // Generate mesh faces.\n            let numFaces = dracoGeometry.num_faces();\n            let numIndices = numFaces * 3;\n            let dataSize = numIndices * 4;\n            let ptr = draco._malloc( dataSize );\n            decoder.GetTrianglesUInt32Array( dracoGeometry, dataSize, ptr );\n            let index = new Uint32Array( draco.HEAPU32.buffer, ptr, numIndices ).slice();\n            draco._free( ptr );\n\n            geometry.index = { array: index, itemSize: 1 };\n\n        }\n\n        draco.destroy( dracoGeometry );\n        return geometry;\n    }\n\n    decodeAttribute( draco, decoder, dracoGeometry, attributeName, attribute, attributeType) {\n        let numComponents = attribute.num_components();\n        let numPoints = dracoGeometry.num_points();\n        let numValues = numPoints * numComponents;\n\n        let ptr;\n        let array;\n\n        let dataSize;\n        switch ( attributeType ) {\n        case \"Float32Array\":\n            dataSize = numValues * 4;\n            ptr = draco._malloc( dataSize );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_FLOAT32, dataSize, ptr );\n            array = new Float32Array( draco.HEAPF32.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Int8Array\":\n            ptr = draco._malloc( numValues );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_INT8, numValues, ptr );\n            array = new Int8Array( draco.HEAP8.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Int16Array\":\n            dataSize = numValues * 2;\n            ptr = draco._malloc( dataSize );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_INT16, dataSize, ptr );\n            array = new Int16Array( draco.HEAP16.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Int32Array\":\n            dataSize = numValues * 4;\n            ptr = draco._malloc( dataSize );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_INT32, dataSize, ptr );\n            array = new Int32Array( draco.HEAP32.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Uint8Array\":\n            ptr = draco._malloc( numValues );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_UINT8, numValues, ptr );\n            array = new Uint8Array( draco.HEAPU8.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Uint16Array\":\n            dataSize = numValues * 2;\n            ptr = draco._malloc( dataSize );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_UINT16, dataSize, ptr );\n            array = new Uint16Array( draco.HEAPU16.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Uint32Array\":\n            dataSize = numValues * 4;\n            ptr = draco._malloc( dataSize );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_UINT32, dataSize, ptr );\n            array = new Uint32Array( draco.HEAPU32.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        default:\n            throw new Error( 'DRACOLoader: Unexpected attribute type.' );\n        }\n\n        return {\n            name: attributeName,\n            array: array,\n            itemSize: numComponents,\n            componentType: attributeType\n        };\n\n    }\n}\n\nexport { gltfPrimitive };\n\n","import { gltfPrimitive } from './primitive.js';\nimport { objectsFromJsons } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfMesh extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.primitives = [];\n        this.name = undefined;\n        this.weights = [];\n    }\n\n    fromJson(jsonMesh)\n    {\n        super.fromJson(jsonMesh);\n\n        if (jsonMesh.name !== undefined)\n        {\n            this.name = jsonMesh.name;\n        }\n\n        this.primitives = objectsFromJsons(jsonMesh.primitives, gltfPrimitive);\n\n        if(jsonMesh.weights !== undefined)\n        {\n            this.weights = jsonMesh.weights;\n        }\n    }\n}\n\nexport { gltfMesh };\n","import { mat4, quat } from 'gl-matrix';\nimport { jsToGl } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\n// contain:\n// transform\n// child indices (reference to scene array of nodes)\n\nclass gltfNode extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.camera = undefined;\n        this.children = [];\n        this.matrix = undefined;\n        this.rotation = jsToGl([0, 0, 0, 1]);\n        this.scale = jsToGl([1, 1, 1]);\n        this.translation = jsToGl([0, 0, 0]);\n        this.name = undefined;\n        this.mesh = undefined;\n        this.skin = undefined;\n\n        // non gltf\n        this.worldTransform = mat4.create();\n        this.inverseWorldTransform = mat4.create();\n        this.normalMatrix = mat4.create();\n        this.light = undefined;\n        this.changed = true;\n    }\n\n    initGl()\n    {\n        if (this.matrix !== undefined)\n        {\n            this.applyMatrix(this.matrix);\n        }\n        else\n        {\n            if (this.scale !== undefined)\n            {\n                this.scale = jsToGl(this.scale);\n            }\n\n            if (this.rotation !== undefined)\n            {\n                this.rotation = jsToGl(this.rotation);\n            }\n\n            if (this.translation !== undefined)\n            {\n                this.translation = jsToGl(this.translation);\n            }\n        }\n        this.changed = true;\n    }\n\n    applyMatrix(matrixData)\n    {\n        this.matrix = jsToGl(matrixData);\n\n        mat4.getScaling(this.scale, this.matrix);\n\n        // To extract a correct rotation, the scaling component must be eliminated.\n        const mn = mat4.create();\n        for(const col of [0, 1, 2])\n        {\n            mn[col] = this.matrix[col] / this.scale[0];\n            mn[col + 4] = this.matrix[col + 4] / this.scale[1];\n            mn[col + 8] = this.matrix[col + 8] / this.scale[2];\n        }\n        mat4.getRotation(this.rotation, mn);\n        quat.normalize(this.rotation, this.rotation);\n\n        mat4.getTranslation(this.translation, this.matrix);\n\n        this.changed = true;\n    }\n\n    // vec3\n    applyTranslation(translation)\n    {\n        this.translation = translation;\n        this.changed = true;\n    }\n\n    // quat\n    applyRotation(rotation)\n    {\n        this.rotation = rotation;\n        this.changed = true;\n    }\n\n    // vec3\n    applyScale(scale)\n    {\n        this.scale = scale;\n        this.changed = true;\n    }\n\n    resetTransform()\n    {\n        this.rotation = jsToGl([0, 0, 0, 1]);\n        this.scale = jsToGl([1, 1, 1]);\n        this.translation = jsToGl([0, 0, 0]);\n        this.changed = true;\n    }\n\n    getLocalTransform()\n    {\n        if(this.transform === undefined || this.changed)\n        {\n            this.transform = mat4.create();\n            mat4.fromRotationTranslationScale(this.transform, this.rotation, this.translation, this.scale);\n            this.changed = false;\n        }\n\n        return mat4.clone(this.transform);\n    }\n}\n\nexport { gltfNode };\n","import { GltfObject } from './gltf_object.js';\nimport { GL } from '../Renderer/webgl.js';\n\nclass gltfSampler extends GltfObject\n{\n    constructor(\n        magFilter = GL.LINEAR,\n        minFilter = GL.LINEAR_MIPMAP_LINEAR,\n        wrapS = GL.REPEAT,\n        wrapT = GL.REPEAT)\n    {\n        super();\n        this.magFilter = magFilter;\n        this.minFilter = minFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.name = undefined;\n    }\n\n    static createDefault()\n    {\n        return new gltfSampler();\n    }\n}\n\nexport { gltfSampler };\n","import { mat4 } from 'gl-matrix';\nimport { GltfObject } from './gltf_object';\n\nclass gltfScene extends GltfObject\n{\n    constructor(nodes = [], name = undefined)\n    {\n        super();\n        this.nodes = nodes;\n        this.name = name;\n\n        // non gltf\n        this.imageBasedLight = undefined;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        super.initGl(gltf, webGlContext);\n\n        if (this.extensions !== undefined &&\n            this.extensions.KHR_lights_image_based !== undefined)\n        {\n            const index = this.extensions.KHR_lights_image_based.imageBasedLight;\n            this.imageBasedLight = gltf.imageBasedLights[index];\n        }\n    }\n\n    applyTransformHierarchy(gltf, rootTransform = mat4.create())\n    {\n        function applyTransform(gltf, node, parentTransform)\n        {\n            mat4.multiply(node.worldTransform, parentTransform, node.getLocalTransform());\n            mat4.invert(node.inverseWorldTransform, node.worldTransform);\n            mat4.transpose(node.normalMatrix, node.inverseWorldTransform);\n\n            for (const child of node.children)\n            {\n                applyTransform(gltf, gltf.nodes[child], node.worldTransform);\n            }\n        }\n\n        for (const node of this.nodes)\n        {\n            applyTransform(gltf, gltf.nodes[node], rootTransform);\n        }\n    }\n\n    gatherNodes(gltf)\n    {\n        const nodes = [];\n\n        function gatherNode(nodeIndex)\n        {\n            const node = gltf.nodes[nodeIndex];\n            nodes.push(node);\n\n            // recurse into children\n            for(const child of node.children)\n            {\n                gatherNode(child);\n            }\n        }\n\n        for (const node of this.nodes)\n        {\n            gatherNode(node);\n        }\n\n        return nodes;\n    }\n\n    includesNode(gltf, nodeIndex)\n    {\n        let children = [...this.nodes];\n        while(children.length > 0)\n        {\n            const childIndex = children.pop();\n\n            if (childIndex === nodeIndex)\n            {\n                return true;\n            }\n\n            children = children.concat(gltf.nodes[childIndex].children);\n        }\n\n        return false;\n    }\n}\n\nexport { gltfScene };\n","import { GltfObject } from \"./gltf_object\";\n\nclass gltfAsset extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.copyright = undefined;\n        this.generator = undefined;\n        this.version = undefined;\n        this.minVersion = undefined;\n    }\n}\n\nexport { gltfAsset as gltfAsset };\n","import { GltfObject } from './gltf_object.js';\n\nclass gltfAnimationChannel extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.target = {node: undefined, path: undefined};\n        this.sampler = undefined;\n    }\n}\n\nconst InterpolationPath =\n{\n    TRANSLATION: \"translation\",\n    ROTATION: \"rotation\",\n    SCALE: \"scale\",\n    WEIGHTS: \"weights\"\n};\n\nexport { gltfAnimationChannel, InterpolationPath };\n","import { GltfObject } from './gltf_object.js';\n\nclass gltfAnimationSampler extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.input = undefined;\n        this.interpolation = undefined;\n        this.output = undefined;\n    }\n}\n\nconst InterpolationModes =\n{\n    LINEAR: \"LINEAR\",\n    STEP: \"STEP\",\n    CUBICSPLINE: \"CUBICSPLINE\"\n};\n\nexport { gltfAnimationSampler, InterpolationModes };\n","import { InterpolationModes } from './animation_sampler.js';\nimport { InterpolationPath } from './channel.js';\nimport { clamp, jsToGlSlice } from './utils.js';\nimport { quat, glMatrix } from 'gl-matrix';\n\nclass gltfInterpolator\n{\n    constructor()\n    {\n        this.prevKey = 0;\n        this.prevT = 0.0;\n    }\n\n    slerpQuat(q1, q2, t)\n    {\n        const qn1 = quat.create();\n        const qn2 = quat.create();\n\n        quat.normalize(qn1, q1);\n        quat.normalize(qn2, q2);\n\n        const quatResult = quat.create();\n\n        quat.slerp(quatResult, qn1, qn2, t);\n        quat.normalize(quatResult, quatResult);\n\n        return quatResult;\n    }\n\n    step(prevKey, output, stride)\n    {\n        const result = new glMatrix.ARRAY_TYPE(stride);\n\n        for(let i = 0; i < stride; ++i)\n        {\n            result[i] = output[prevKey * stride + i];\n        }\n\n        return result;\n    }\n\n    linear(prevKey, nextKey, output, t, stride)\n    {\n        const result = new glMatrix.ARRAY_TYPE(stride);\n\n        for(let i = 0; i < stride; ++i)\n        {\n            result[i] = output[prevKey * stride + i] * (1-t) + output[nextKey * stride + i] * t;\n        }\n\n        return result;\n    }\n\n    cubicSpline(prevKey, nextKey, output, keyDelta, t, stride)\n    {\n        // stride: Count of components (4 in a quaternion).\n        // Scale by 3, because each output entry consist of two tangents and one data-point.\n        const prevIndex = prevKey * stride * 3;\n        const nextIndex = nextKey * stride * 3;\n        const A = 0;\n        const V = 1 * stride;\n        const B = 2 * stride;\n\n        const result = new glMatrix.ARRAY_TYPE(stride);\n        const tSq = t ** 2;\n        const tCub = t ** 3;\n\n        // We assume that the components in output are laid out like this: in-tangent, point, out-tangent.\n        // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#appendix-c-spline-interpolation\n        for(let i = 0; i < stride; ++i)\n        {\n            const v0 = output[prevIndex + i + V];\n            const a = keyDelta * output[nextIndex + i + A];\n            const b = keyDelta * output[prevIndex + i + B];\n            const v1 = output[nextIndex + i + V];\n\n            result[i] = ((2*tCub - 3*tSq + 1) * v0) + ((tCub - 2*tSq + t) * b) + ((-2*tCub + 3*tSq) * v1) + ((tCub - tSq) * a);\n        }\n\n        return result;\n    }\n\n    resetKey()\n    {\n        this.prevKey = 0;\n    }\n\n    interpolate(gltf, channel, sampler, t, stride, maxTime)\n    {\n        const input = gltf.accessors[sampler.input].getDeinterlacedView(gltf);\n        const output = gltf.accessors[sampler.output].getDeinterlacedView(gltf);\n\n        if(output.length === stride) // no interpolation for single keyFrame animations\n        {\n            return jsToGlSlice(output, 0, stride);\n        }\n\n        // Wrap t around, so the animation loops.\n        // Make sure that t is never earlier than the first keyframe and never later then the last keyframe.\n        t = t % maxTime;\n        t = clamp(t, input[0], input[input.length - 1]);\n\n        if (this.prevT > t)\n        {\n            this.prevKey = 0;\n        }\n\n        this.prevT = t;\n\n        // Find next keyframe: min{ t of input | t > prevKey }\n        let nextKey = null;\n        for (let i = this.prevKey; i < input.length; ++i)\n        {\n            if (t <= input[i])\n            {\n                nextKey = clamp(i, 1, input.length - 1);\n                break;\n            }\n        }\n        this.prevKey = clamp(nextKey - 1, 0, nextKey);\n\n        const keyDelta = input[nextKey] - input[this.prevKey];\n\n        // Normalize t: [t0, t1] -> [0, 1]\n        const tn = (t - input[this.prevKey]) / keyDelta;\n\n        if(channel.target.path === InterpolationPath.ROTATION)\n        {\n\n            if(InterpolationModes.CUBICSPLINE === sampler.interpolation)\n            {\n                // GLTF requires cubic spline interpolation for quaternions.\n                // https://github.com/KhronosGroup/glTF/issues/1386\n                const result = this.cubicSpline(this.prevKey, nextKey, output, keyDelta, tn, 4);\n                quat.normalize(result, result);\n                return result;\n            }\n            else if(sampler.interpolation === InterpolationModes.LINEAR)\n            {\n                const q0 = this.getQuat(output, this.prevKey);\n                const q1 = this.getQuat(output, nextKey);\n                return this.slerpQuat(q0, q1, tn);\n            }\n            else if(sampler.interpolation === InterpolationModes.STEP)\n            {\n                return this.getQuat(output, this.prevKey);\n            }\n\n        }\n\n        switch(sampler.interpolation)\n        {\n        case InterpolationModes.STEP:\n            return this.step(this.prevKey, output, stride);\n        case InterpolationModes.CUBICSPLINE:\n            return this.cubicSpline(this.prevKey, nextKey, output, keyDelta, tn, stride);\n        default:\n            return this.linear(this.prevKey, nextKey, output, tn, stride);\n        }\n    }\n\n    getQuat(output, index)\n    {\n        const x = output[4 * index];\n        const y = output[4 * index + 1];\n        const z = output[4 * index + 2];\n        const w = output[4 * index + 3];\n        return quat.fromValues(x, y, z, w);\n    }\n}\n\nexport { gltfInterpolator };\n","import { GltfObject } from './gltf_object.js';\nimport { objectsFromJsons } from './utils.js';\nimport { gltfAnimationChannel, InterpolationPath } from './channel.js';\nimport { gltfAnimationSampler } from './animation_sampler.js';\nimport { gltfInterpolator } from './interpolator.js';\n\nclass gltfAnimation extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.channels = [];\n        this.samplers = [];\n        this.name = '';\n\n        // not gltf\n        this.interpolators = [];\n        this.maxTime = 0;\n    }\n\n    fromJson(jsonAnimation)\n    {\n        super.fromJson(jsonAnimation);\n\n        this.channels = objectsFromJsons(jsonAnimation.channels, gltfAnimationChannel);\n        this.samplers = objectsFromJsons(jsonAnimation.samplers, gltfAnimationSampler);\n        this.name = jsonAnimation.name;\n\n        if(this.channels === undefined)\n        {\n            console.error(\"No channel data found for skin\");\n            return;\n        }\n\n        for(let i = 0; i < this.channels.length; ++i)\n        {\n            this.interpolators.push(new gltfInterpolator());\n        }\n    }\n\n    advance(gltf, totalTime)\n    {\n        if(this.channels === undefined)\n        {\n            return;\n        }\n\n        if(this.maxTime == 0)\n        {\n            for(let i = 0; i < this.channels.length; ++i)\n            {\n                const channel = this.channels[i];\n                const sampler = this.samplers[channel.sampler];\n                const input = gltf.accessors[sampler.input].getDeinterlacedView(gltf);\n                const max = input[input.length - 1];\n                if(max > this.maxTime)\n                {\n                    this.maxTime = max;\n                }\n            }\n        }\n\n        for(let i = 0; i < this.interpolators.length; ++i)\n        {\n            const channel = this.channels[i];\n            const sampler = this.samplers[channel.sampler];\n            const interpolator = this.interpolators[i];\n\n            const node = gltf.nodes[channel.target.node];\n\n            switch(channel.target.path)\n            {\n            case InterpolationPath.TRANSLATION:\n                node.applyTranslation(interpolator.interpolate(gltf, channel, sampler, totalTime, 3, this.maxTime));\n                break;\n            case InterpolationPath.ROTATION:\n                node.applyRotation(interpolator.interpolate(gltf, channel, sampler, totalTime, 4, this.maxTime));\n                break;\n            case InterpolationPath.SCALE:\n                node.applyScale(interpolator.interpolate(gltf, channel, sampler, totalTime, 3, this.maxTime));\n                break;\n            case InterpolationPath.WEIGHTS:\n            {\n                const mesh = gltf.meshes[node.mesh];\n                mesh.weights = interpolator.interpolate(gltf, channel, sampler, totalTime, mesh.weights.length, this.maxTime);\n                break;\n            }\n            }\n        }\n    }\n}\n\nexport { gltfAnimation };\n","import { jsToGlSlice } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\nimport { mat4 } from 'gl-matrix';\n\nclass gltfSkin extends GltfObject\n{\n    constructor()\n    {\n        super();\n\n        this.name = \"\";\n        this.inverseBindMatrices = undefined;\n        this.joints = [];\n        this.skeleton = undefined;\n\n        // not gltf\n        this.jointMatrices = [];\n        this.jointNormalMatrices = [];\n    }\n\n    computeJoints(gltf, parentNode)\n    {\n        const ibmAccessor = gltf.accessors[this.inverseBindMatrices].getDeinterlacedView(gltf);\n        this.jointMatrices = [];\n        this.jointNormalMatrices = [];\n\n        let i = 0;\n        for(const joint of this.joints)\n        {\n            const node = gltf.nodes[joint];\n\n            let jointMatrix = mat4.create();\n            let ibm = jsToGlSlice(ibmAccessor, i++ * 16, 16);\n            mat4.mul(jointMatrix, node.worldTransform, ibm);\n            mat4.mul(jointMatrix, parentNode.inverseWorldTransform, jointMatrix);\n            this.jointMatrices.push(jointMatrix);\n\n            let normalMatrix = mat4.create();\n            mat4.invert(normalMatrix, jointMatrix);\n            mat4.transpose(normalMatrix, normalMatrix);\n            this.jointNormalMatrices.push(normalMatrix);\n        }\n    }\n}\n\nexport { gltfSkin };\n","import { GltfObject } from './gltf_object.js';\n\nclass gltfVariant extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.name = undefined;\n    }\n\n    fromJson(jsonVariant)\n    {\n        if(jsonVariant.name !== undefined)\n        {\n            this.name = jsonVariant.name;\n        }\n    }\n}\n\nexport { gltfVariant as gltfVariant };\n","import { gltfAccessor } from './accessor.js';\nimport { gltfBuffer } from './buffer.js';\nimport { gltfBufferView } from './buffer_view.js';\nimport { gltfCamera } from './camera.js';\nimport { gltfImage } from './image.js';\nimport { gltfLight } from './light.js';\nimport { ImageBasedLight } from './image_based_light.js';\nimport { gltfMaterial } from './material.js';\nimport { gltfMesh } from './mesh.js';\nimport { gltfNode } from './node.js';\nimport { gltfSampler } from './sampler.js';\nimport { gltfScene } from './scene.js';\nimport { gltfTexture } from './texture.js';\nimport { initGlForMembers, objectsFromJsons, objectFromJson } from './utils';\nimport { gltfAsset } from './asset.js';\nimport { GltfObject } from './gltf_object.js';\nimport { gltfAnimation } from './animation.js';\nimport { gltfSkin } from './skin.js';\nimport { gltfVariant } from './variant.js';\n\nclass glTF extends GltfObject\n{\n    constructor(file)\n    {\n        super();\n        this.asset = undefined;\n        this.accessors = [];\n        this.nodes = [];\n        this.scene = undefined; // the default scene to show.\n        this.scenes = [];\n        this.cameras = [];\n        this.lights = [];\n        this.imageBasedLights = [];\n        this.textures = [];\n        this.images = [];\n        this.samplers = [];\n        this.meshes = [];\n        this.buffers = [];\n        this.bufferViews = [];\n        this.materials = [];\n        this.animations = [];\n        this.skins = [];\n        this.path = file;\n    }\n\n    initGl(webGlContext)\n    {\n        initGlForMembers(this, this, webGlContext);\n    }\n\n    fromJson(json)\n    {\n        super.fromJson(json);\n\n        this.asset = objectFromJson(json.asset, gltfAsset);\n        this.cameras = objectsFromJsons(json.cameras, gltfCamera);\n        this.accessors = objectsFromJsons(json.accessors, gltfAccessor);\n        this.meshes = objectsFromJsons(json.meshes, gltfMesh);\n        this.samplers = objectsFromJsons(json.samplers, gltfSampler);\n        this.materials = objectsFromJsons(json.materials, gltfMaterial);\n        this.buffers = objectsFromJsons(json.buffers, gltfBuffer);\n        this.bufferViews = objectsFromJsons(json.bufferViews, gltfBufferView);\n        this.scenes = objectsFromJsons(json.scenes, gltfScene);\n        this.textures = objectsFromJsons(json.textures, gltfTexture);\n        this.nodes = objectsFromJsons(json.nodes, gltfNode);\n        this.lights = objectsFromJsons(getJsonLightsFromExtensions(json.extensions), gltfLight);\n        this.imageBasedLights = objectsFromJsons(getJsonIBLsFromExtensions(json.extensions), ImageBasedLight);\n        this.images = objectsFromJsons(json.images, gltfImage);\n        this.animations = objectsFromJsons(json.animations, gltfAnimation);\n        this.skins = objectsFromJsons(json.skins, gltfSkin);\n        this.variants = objectsFromJsons(getJsonVariantsFromExtension(json.extensions), gltfVariant);\n        this.variants = enforceVariantsUniqueness(this.variants);\n\n        this.materials.push(gltfMaterial.createDefault());\n        this.samplers.push(gltfSampler.createDefault());\n\n        if (json.scenes !== undefined)\n        {\n            if (json.scene === undefined && json.scenes.length > 0)\n            {\n                this.scene = 0;\n            }\n            else\n            {\n                this.scene = json.scene;\n            }\n        }\n    }\n}\n\nfunction getJsonLightsFromExtensions(extensions)\n{\n    if (extensions === undefined)\n    {\n        return [];\n    }\n    if (extensions.KHR_lights_punctual === undefined)\n    {\n        return [];\n    }\n    return extensions.KHR_lights_punctual.lights;\n}\n\nfunction getJsonIBLsFromExtensions(extensions)\n{\n    if (extensions === undefined)\n    {\n        return [];\n    }\n    if (extensions.KHR_lights_image_based === undefined)\n    {\n        return [];\n    }\n    return extensions.KHR_lights_image_based.imageBasedLights;\n}\n\nfunction getJsonVariantsFromExtension(extensions)\n{\n    if (extensions === undefined)\n    {\n        return [];\n    }\n    if (extensions.KHR_materials_variants === undefined)\n    {\n        return [];\n    }\n    return extensions.KHR_materials_variants.variants;\n}\n\nfunction enforceVariantsUniqueness(variants)\n{\n    for(let i=0;i<variants.length;i++)\n    {\n        const name = variants[i].name;\n        for(let j=i+1;j<variants.length;j++)\n        {\n            if(variants[j].name == name)\n            {\n                variants[j].name += \"0\";  // Add random character to duplicates\n            }\n        }\n    }\n\n\n    return variants;\n}\n\nexport { glTF };\n","class GlbParser\n{\n    constructor(data)\n    {\n        this.data = data;\n        this.glbHeaderInts = 3;\n        this.glbChunkHeaderInts = 2;\n        this.glbMagic = 0x46546C67;\n        this.glbVersion = 2;\n        this.jsonChunkType = 0x4E4F534A;\n        this.binaryChunkType = 0x004E4942;\n    }\n\n    extractGlbData()\n    {\n        const glbInfo = this.getCheckedGlbInfo();\n        if (glbInfo === undefined)\n        {\n            return undefined;\n        }\n\n        let json = undefined;\n        let buffers = [];\n        const chunkInfos = this.getAllChunkInfos();\n        for (let chunkInfo of chunkInfos)\n        {\n            if (chunkInfo.type == this.jsonChunkType && !json)\n            {\n                json = this.getJsonFromChunk(chunkInfo);\n            }\n            else if (chunkInfo.type == this.binaryChunkType)\n            {\n                buffers.push(this.getBufferFromChunk(chunkInfo));\n            }\n        }\n\n        return { json: json, buffers: buffers };\n    }\n\n    getCheckedGlbInfo()\n    {\n        const header = new Uint32Array(this.data, 0, this.glbHeaderInts);\n        const magic = header[0];\n        const version = header[1];\n        const length = header[2];\n\n        if (!this.checkEquality(magic, this.glbMagic, \"glb magic\") ||\n            !this.checkEquality(version, this.glbVersion, \"glb header version\") ||\n            !this.checkEquality(length, this.data.byteLength, \"glb byte length\"))\n        {\n            return undefined;\n        }\n\n        return { \"magic\": magic, \"version\": version, \"length\": length };\n    }\n\n    getAllChunkInfos()\n    {\n        let infos = [];\n        let chunkStart = this.glbHeaderInts * 4;\n        while (chunkStart < this.data.byteLength)\n        {\n            const chunkInfo = this.getChunkInfo(chunkStart);\n            infos.push(chunkInfo);\n            chunkStart += chunkInfo.length + this.glbChunkHeaderInts * 4;\n        }\n        return infos;\n    }\n\n    getChunkInfo(headerStart)\n    {\n        const header = new Uint32Array(this.data, headerStart, this.glbChunkHeaderInts);\n        const chunkStart = headerStart + this.glbChunkHeaderInts * 4;\n        const chunkLength = header[0];\n        const chunkType = header[1];\n        return { \"start\": chunkStart, \"length\": chunkLength, \"type\": chunkType };\n    }\n\n    getJsonFromChunk(chunkInfo)\n    {\n        const chunkLength = chunkInfo.length;\n        const jsonStart = (this.glbHeaderInts + this.glbChunkHeaderInts) * 4;\n        const jsonSlice = new Uint8Array(this.data, jsonStart, chunkLength);\n        const stringBuffer = new TextDecoder(\"utf-8\").decode(jsonSlice);\n        return JSON.parse(stringBuffer);\n    }\n\n    getBufferFromChunk(chunkInfo)\n    {\n        return this.data.slice(chunkInfo.start, chunkInfo.start + chunkInfo.length);\n    }\n\n    checkEquality(actual, expected, name)\n    {\n        if (actual == expected)\n        {\n            return true;\n        }\n\n        console.error(\"Found invalid/unsupported \" + name + \", expected: \" + expected + \", but was: \" + actual);\n        return false;\n    }\n}\n\nexport { GlbParser };\n","\nclass gltfLoader\n{\n    static async load(gltf, webGlContext, appendix = undefined)\n    {\n        const buffers = gltfLoader.getBuffers(appendix);\n        const additionalFiles = gltfLoader.getAdditionalFiles(appendix);\n\n        const buffersPromise = gltfLoader.loadBuffers(gltf, buffers, additionalFiles);\n\n        await buffersPromise; // images might be stored in the buffers\n        const imagesPromise = gltfLoader.loadImages(gltf, additionalFiles);\n\n        return await Promise.all([buffersPromise, imagesPromise])\n            .then(() => gltf.initGl(webGlContext));\n    }\n\n    static unload(gltf)\n    {\n        for (let image of gltf.images)\n        {\n            image.image = undefined;\n        }\n        gltf.images = [];\n\n        for (let texture of gltf.textures)\n        {\n            texture.destroy();\n        }\n        gltf.textures = [];\n\n        for (let accessor of gltf.accessors)\n        {\n            accessor.destroy();\n        }\n        gltf.accessors = [];\n    }\n\n    static getBuffers(appendix)\n    {\n        return gltfLoader.getTypedAppendix(appendix, ArrayBuffer);\n    }\n\n    static getAdditionalFiles(appendix)\n    {\n        if(typeof(File) !== 'undefined')\n        {\n            return gltfLoader.getTypedAppendix(appendix, File);\n        }\n        else\n        {\n            return;\n        }\n    }\n\n    static getTypedAppendix(appendix, Type)\n    {\n        if (appendix && appendix.length > 0)\n        {\n            if (appendix[0] instanceof Type)\n            {\n                return appendix;\n            }\n        }\n    }\n\n    static loadBuffers(gltf, buffers, additionalFiles)\n    {\n        const promises = [];\n        if (buffers)\n        {\n            const count = Math.min(buffers.length, gltf.buffers.length);\n            for (let i = 0; i < count; ++i)\n            {\n                gltf.buffers[i].buffer = buffers[i];\n            }\n        }\n        else\n        {\n            for (const buffer of gltf.buffers)\n            {\n                promises.push(buffer.load(gltf, additionalFiles));\n            }\n        }\n        return Promise.all(promises);\n    }\n\n    static loadImages(gltf, additionalFiles)\n    {\n        const imagePromises = [];\n        for (let image of gltf.images)\n        {\n            imagePromises.push(image.load(gltf, additionalFiles));\n        }\n        return Promise.all(imagePromises);\n    }\n}\n\nexport { gltfLoader };\n","import { ShaderCache } from './Renderer/shader_cache.js';\n\n\nimport iblFiltering from './shaders/ibl_filtering.frag';\nimport panoramaToCubeMap from './shaders/panorama_to_cubemap.frag';\nimport debugOutput from './shaders/debug.frag';\nimport fullscreenShader from './shaders/fullscreen.vert';\n\n\n// How to use:\n// set canvas/context in constructor\n// init(input: panorama image)\n// filterAll()\n// fetch texture IDs\n\nclass iblSampler\n{\n    constructor(view)\n    {\n\n        this.gl = view.context;\n\n        this.textureSize = 256;\n        this.sampleCount = 64;\n        this.lodBias = 0.0;\n        this.mipmapCount = undefined;\n\n\n        this.lambertianTextureID = undefined;\n        this.ggxTextureID = undefined;\n        this.sheenTextureID = undefined;\n\n\n        this.inputTextureID = undefined;\n        this.cubemapTextureID = undefined;\n        this.framebuffer = undefined;\n\n        const shaderSources = new Map();\n\n        shaderSources.set(\"fullscreen.vert\", fullscreenShader);\n        shaderSources.set(\"panorama_to_cubemap.frag\", panoramaToCubeMap);\n        shaderSources.set(\"ibl_filtering.frag\", iblFiltering);\n        shaderSources.set(\"debug.frag\", debugOutput);\n\n        this.shaderCache = new ShaderCache(shaderSources, view.renderer.webGl);\n\n\n    }\n\n    /////////////////////////////////////////////////////////////////////\n\n\n    loadTextureHDR(image)\n    {\n\n        var texture = this.gl.createTexture();\n\n        this.gl.bindTexture( this.gl.TEXTURE_2D,  texture);\n\n        var internalFormat = this.gl.RGB32F;\n        var format = this.gl.RGB;\n        var type = this.gl.FLOAT;\n        var data = undefined;\n\n        if (image.dataFloat instanceof Float32Array && typeof(this.gl.RGB32F) !== 'undefined')\n        {\n            internalFormat = this.gl.RGB32F;\n            format = this.gl.RGB;\n            type = this.gl.FLOAT;\n            data = image.dataFloat;\n        }\n        else if(image.dataFloat instanceof Float32Array)\n        {\n            // workaround for node-gles not supporting RGB32F\n            internalFormat = this.gl.RGBA32F;\n            format = this.gl.RGBA;\n            type = this.gl.FLOAT;\n\n            const numPixels = image.dataFloat.length / 3;\n            data = new Float32Array(numPixels * 4);\n            for(let i = 0; i < numPixels; ++i)\n            {\n                // copy the pixels and padd the alpha channel\n                data[i] = image.dataFloat[i];\n                data[i+1] = image.dataFloat[i+1];\n                data[i+2] = image.dataFloat[i+2];\n                data[i+3] = 0;\n            }\n        }\n        else if (typeof(Image) !== 'undefined' && image instanceof Image)\n        {\n            internalFormat = this.gl.RGBA;\n            format = this.gl.RGBA;\n            type = this.gl.UNSIGNED_BYTE;\n            data = image;\n        }\n        else\n        {\n            console.error(\"loadTextureHDR failed, unsupported HDR image\");\n            return;\n        }\n\n\n        this.gl.texImage2D(\n            this.gl.TEXTURE_2D,\n            0, //level\n            internalFormat,\n            image.width,\n            image.height,\n            0, //border\n            format,\n            type,\n            data);\n\n        this.gl.texParameteri( this.gl.TEXTURE_2D,  this.gl.TEXTURE_WRAP_S,  this.gl.MIRRORED_REPEAT);\n        this.gl.texParameteri( this.gl.TEXTURE_2D,  this.gl.TEXTURE_WRAP_T,  this.gl.MIRRORED_REPEAT);\n        this.gl.texParameteri( this.gl.TEXTURE_2D,  this.gl.TEXTURE_MIN_FILTER,  this.gl.LINEAR);\n        this.gl.texParameteri( this.gl.TEXTURE_2D,  this.gl.TEXTURE_MAG_FILTER,  this.gl.LINEAR);\n\n        return texture;\n    }\n\n\n\n    createCubemapTexture(withMipmaps)\n    {\n        var targetTexture =  this.gl.createTexture();\n        this.gl.bindTexture( this.gl.TEXTURE_CUBE_MAP, targetTexture);\n\n\n        // define size and format of level 0\n        const level = 0;\n        const internalFormat = this.use8bit ? this.gl.RGBA8 : this.gl.RGBA32F;\n        const border = 0;\n        const format = this.gl.RGBA;\n        const type = this.use8bit ? this.gl.UNSIGNED_BYTE : this.gl.FLOAT;\n        const data = null;\n\n        for(var i = 0; i < 6; ++i)\n        {\n            this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level, internalFormat,\n                this.textureSize, this.textureSize, border,\n                format, type, data);\n\n        }\n\n        if(withMipmaps)\n        {\n            this.gl.texParameteri( this.gl.TEXTURE_CUBE_MAP,  this.gl.TEXTURE_MIN_FILTER,  this.gl.LINEAR_MIPMAP_LINEAR);\n        }\n        else\n        {\n            this.gl.texParameteri( this.gl.TEXTURE_CUBE_MAP,  this.gl.TEXTURE_MIN_FILTER,  this.gl.LINEAR);\n        }\n\n        this.gl.texParameteri( this.gl.TEXTURE_CUBE_MAP,  this.gl.TEXTURE_MAG_FILTER,  this.gl.LINEAR);\n        this.gl.texParameteri( this.gl.TEXTURE_CUBE_MAP,  this.gl.TEXTURE_WRAP_S,  this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri( this.gl.TEXTURE_CUBE_MAP,  this.gl.TEXTURE_WRAP_T,  this.gl.CLAMP_TO_EDGE);\n\n        return targetTexture;\n    }\n\n    init(panoramaImage)\n    {\n        if (!this.gl.getExtension('EXT_color_buffer_float'))\n        {\n            this.use8bit = true;\n        }\n\n        this.inputTextureID = this.loadTextureHDR(panoramaImage);\n\n        this.cubemapTextureID = this.createCubemapTexture(true);\n\n        this.framebuffer = this.gl.createFramebuffer();\n\n        this.lambertianTextureID = this.createCubemapTexture(false);\n        this.ggxTextureID = this.createCubemapTexture(true);\n        this.sheenTextureID = this.createCubemapTexture(true);\n\n\n        this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.ggxTextureID);\n        this.gl.generateMipmap(this.gl.TEXTURE_CUBE_MAP);\n\n        this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.sheenTextureID);\n        this.gl.generateMipmap(this.gl.TEXTURE_CUBE_MAP);\n\n        this.mipmapLevels = Math.floor(Math.log2(this.textureSize))+1;\n    }\n\n    filterAll()\n    {\n        this.panoramaToCubeMap();\n        this.cubeMapToLambertian();\n        this.cubeMapToGGX();\n        this.cubeMapToSheen();\n\n        this.gl.bindFramebuffer(  this.gl.FRAMEBUFFER, null);\n    }\n\n\n\n\n    panoramaToCubeMap()\n    {\n        for(var i = 0; i < 6; ++i)\n        {\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer);\n            var side = i;\n            this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_CUBE_MAP_POSITIVE_X+side, this.cubemapTextureID, 0);\n\n            this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.cubemapTextureID);\n\n            this.gl.viewport(0, 0,  this.textureSize,  this.textureSize);\n\n            this.gl.clearColor(1.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT| this.gl.DEPTH_BUFFER_BIT);\n\n            const vertexHash = this.shaderCache.selectShader(\"fullscreen.vert\", []);\n            const fragmentHash = this.shaderCache.selectShader(\"panorama_to_cubemap.frag\", []);\n\n            var shader = this.shaderCache.getShaderProgram(fragmentHash, vertexHash);\n            this.gl.useProgram(shader.program);\n\n            //  TEXTURE0 = active.\n            this.gl.activeTexture(this.gl.TEXTURE0+0);\n\n            // Bind texture ID to active texture\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.inputTextureID);\n\n            // map shader uniform to texture unit (TEXTURE0)\n            const location = this.gl.getUniformLocation(shader.program,\"u_panorama\");\n            this.gl.uniform1i(location, this.gl.TEXTURE0+0); // texture unit 0 (TEXTURE0)\n\n            shader.updateUniform(\"u_currentFace\", i);\n\n            //fullscreen triangle\n            this.gl.drawArrays(this.gl.TRIANGLES, 0, 3);\n        }\n\n        this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.cubemapTextureID);\n        this.gl.generateMipmap(this.gl.TEXTURE_CUBE_MAP);\n\n    }\n\n\n    applyFilter(\n        distribution,\n        roughness,\n        targetMipLevel,\n        targetTexture)\n    {\n        var currentTextureSize =  this.textureSize>>(targetMipLevel);\n\n        for(var i = 0; i < 6; ++i)\n        {\n\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer);\n            var side = i;\n            this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_CUBE_MAP_POSITIVE_X+side, targetTexture, targetMipLevel);\n\n            this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, targetTexture);\n\n            this.gl.viewport(0, 0, currentTextureSize, currentTextureSize);\n\n            this.gl.clearColor(1.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT| this.gl.DEPTH_BUFFER_BIT);\n\n\n            const vertexHash = this.shaderCache.selectShader(\"fullscreen.vert\", []);\n            const fragmentHash = this.shaderCache.selectShader(\"ibl_filtering.frag\", []);\n\n            var shader = this.shaderCache.getShaderProgram(fragmentHash, vertexHash);\n            this.gl.useProgram(shader.program);\n\n\n            //  TEXTURE0 = active.\n            this.gl.activeTexture(this.gl.TEXTURE0+0);\n\n            // Bind texture ID to active texture\n            this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.cubemapTextureID);\n\n            // map shader uniform to texture unit (TEXTURE0)\n            const location = this.gl.getUniformLocation(shader.program,\"u_cubemapTexture\");\n            this.gl.uniform1i(location, 0); // texture unit 0\n\n\n            shader.updateUniform(\"u_roughness\", roughness);\n            shader.updateUniform(\"u_sampleCount\", this.sampleCount)\n            shader.updateUniform(\"u_width\", this.textureSize);\n            shader.updateUniform(\"u_lodBias\", this.lodBias);\n            shader.updateUniform(\"u_distribution\", distribution);\n            shader.updateUniform(\"u_currentFace\", i);\n\n\n            //fullscreen triangle\n            this.gl.drawArrays(this.gl.TRIANGLES, 0, 3);\n\n        }\n\n    }\n\n    cubeMapToLambertian()\n    {\n        this.applyFilter(\n            0,\n            0.0,\n            0,\n            this.lambertianTextureID);\n    }\n\n\n    cubeMapToGGX()\n    {\n        for(var currentMipLevel = 0; currentMipLevel < this.mipmapLevels; ++currentMipLevel)\n        {\n            const roughness =  (currentMipLevel) /  (this.mipmapLevels - 1);\n            this.applyFilter(\n                1,\n                roughness,\n                currentMipLevel,\n                this.ggxTextureID);\n        }\n    }\n\n    cubeMapToSheen()\n    {\n        for(var currentMipLevel = 0; currentMipLevel < this.mipmapLevels; ++currentMipLevel)\n        {\n            const roughness =  (currentMipLevel) /  (this.mipmapLevels - 1);\n            this.applyFilter(\n                2,\n                roughness,\n                currentMipLevel,\n                this.sheenTextureID);\n        }\n    }\n\n\n    destroy()\n    {\n        this.shaderCache.destroy();\n    }\n}\n\nexport { iblSampler };\n","class KtxDecoder {\n\n    constructor (context, externalKtxlib) {\n        this.gl = context;\n        this.libktx = null;\n        if (context !== undefined)\n        {\n            if (externalKtxlib === undefined && LIBKTX !== undefined)\n            {\n                externalKtxlib = LIBKTX;\n            }\n            if (externalKtxlib !== undefined)\n            {\n                this.initializied = this.init(context, externalKtxlib);\n            }\n            else\n            {\n                console.error('Failed to initalize KTXDecoder: ktx library undefined');\n                return undefined;\n            }\n        }\n        else\n        {\n            console.error('Failed to initalize KTXDecoder: WebGL context undefined');\n            return undefined;\n        }\n    }\n\n    async init(context, externalKtxlib) {\n        this.libktx = await externalKtxlib({preinitializedWebGLContext: context});\n        this.libktx.GL.makeContextCurrent(this.libktx.GL.createContext(null, { majorVersion: 2.0 }));\n    }\n\n    transcode(ktexture) {\n        if (ktexture.needsTranscoding) {\n            let format;\n\n            let astcSupported = false;\n            let etcSupported = false;\n            let dxtSupported = false;\n            let pvrtcSupported = false;\n\n            astcSupported = !!this.gl.getExtension('WEBGL_compressed_texture_astc');\n            etcSupported = !!this.gl.getExtension('WEBGL_compressed_texture_etc1');\n            dxtSupported = !!this.gl.getExtension('WEBGL_compressed_texture_s3tc');\n            pvrtcSupported = !!(this.gl.getExtension('WEBGL_compressed_texture_pvrtc')) || !!(this.gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'));\n\n            if (astcSupported) {\n                format = this.libktx.TranscodeTarget.ASTC_4x4_RGBA;\n            } else if (dxtSupported) {\n                format = this.libktx.TranscodeTarget.BC1_OR_3;\n            } else if (pvrtcSupported) {\n                format = this.libktx.TranscodeTarget.PVRTC1_4_RGBA;\n            } else if (etcSupported) {\n                format = this.libktx.TranscodeTarget.ETC;\n            } else {\n                format = this.libktx.TranscodeTarget.RGBA8888;\n            }\n            if (ktexture.transcodeBasis(format, 0) != this.libktx.ErrorCode.SUCCESS) {\n                console.warn('Texture transcode failed. See console for details.');\n            }\n        }\n    }\n\n    async loadKtxFromUri(uri) {\n        await this.initializied;\n        const response = await fetch(uri);\n        const data = new Uint8Array(await response.arrayBuffer());\n        const texture = new this.libktx.ktxTexture(data);\n        this.transcode(texture);\n        let uploadResult = texture.glUpload();\n        uploadResult.texture.levels = Math.log2(texture.baseWidth);\n        return uploadResult.texture;\n    }\n\n    async loadKtxFromBuffer(data) {\n        await this.initializied;\n        const texture = new this.libktx.ktxTexture(data);\n        this.transcode(texture);\n        const uploadResult = texture.glUpload();\n        return uploadResult.texture;\n    }\n}\n\nexport { KtxDecoder };\n","/**\n * hdrpng.js - Original code from Enki https://enkimute.github.io/hdrpng.js/\n *\n * Refactored and simplified.\n */\n\nimport { gltfImage } from \"../gltf/image\";\n\nfunction _rgbeToFloat(buffer)\n{\n    const length = buffer.byteLength >> 2;\n    const result = new Float32Array(length * 3);\n\n    for (let i = 0; i < length; i++)\n    {\n        const s = Math.pow(2, buffer[i * 4 + 3] - (128 + 8));\n\n        result[i * 3] = buffer[i * 4] * s;\n        result[i * 3 + 1] = buffer[i * 4 + 1] * s;\n        result[i * 3 + 2] = buffer[i * 4 + 2] * s;\n    }\n    return result;\n}\n\nasync function loadHDR(buffer)\n{\n    let header = '';\n    let pos = 0;\n    const d8 = buffer;\n    let format = undefined;\n    // read header.\n    while (!header.match(/\\n\\n[^\\n]+\\n/g)) header += String.fromCharCode(d8[pos++]);\n    // check format.\n    format = header.match(/FORMAT=(.*)$/m)[1];\n    if (format != '32-bit_rle_rgbe') return console.warn('unknown format : ' + format), this.onerror();\n    // parse resolution\n    const rez = header.split(/\\n/).reverse()[1].split(' '), width = rez[3] * 1, height = rez[1] * 1;\n    // Create image.\n    const img = new Uint8Array(width * height * 4)\n    let ipos = 0;\n    // Read all scanlines\n    for (let j = 0; j < height; j++)\n    {\n        const scanline = [];\n\n        const rgbe = d8.slice(pos, pos += 4);\n        const isNewRLE = (rgbe[0] == 2 && rgbe[1] == 2 && rgbe[2] == ((width >> 8) & 0xFF) && rgbe[3] == (width & 0xFF));\n\n        if (isNewRLE && (width >= 8) && (width < 32768))\n        {\n            for (let i = 0; i < 4; i++)\n            {\n                let ptr = i * width;\n                const ptr_end = (i + 1) * width;\n                let buf = undefined;\n                let count = undefined;\n                while (ptr < ptr_end)\n                {\n                    buf = d8.slice(pos, pos += 2);\n                    if (buf[0] > 128)\n                    {\n                        count = buf[0] - 128;\n                        while (count-- > 0) scanline[ptr++] = buf[1];\n                    }\n                    else\n                    {\n                        count = buf[0] - 1;\n                        scanline[ptr++] = buf[1];\n                        while (count-- > 0) scanline[ptr++] = d8[pos++];\n                    }\n                }\n            }\n\n            for (let i = 0; i < width; i++)\n            {\n                img[ipos++] = scanline[i + 0 * width];\n                img[ipos++] = scanline[i + 1 * width];\n                img[ipos++] = scanline[i + 2 * width];\n                img[ipos++] = scanline[i + 3 * width];\n            }\n        }\n        else\n        {\n            pos -= 4;\n\n            for (const i = 0; i < width; i++)\n            {\n                rgbe = d8.slice(pos, pos += 4);\n\n                img[ipos++] = rgbe[0];\n                img[ipos++] = rgbe[1];\n                img[ipos++] = rgbe[2];\n                img[ipos++] = rgbe[3];\n            }\n        }\n    }\n\n    const imageFloatBuffer = _rgbeToFloat(img);\n\n    return {\n        dataFloat: imageFloatBuffer,\n        width: width,\n        height: height\n    };\n}\n\nexport { loadHDR };\n","import { GltfState } from '../GltfState/gltf_state.js';\nimport { gltfRenderer } from '../Renderer/renderer.js';\nimport { GL } from '../Renderer/webgl.js';\n\nclass GltfView\n{\n    constructor(context, ui)\n    {\n        this.ui = ui;\n        this.context = context;\n        this.renderer = new gltfRenderer(this.context);\n    }\n\n    createState()\n    {\n        return new GltfState();\n    }\n\n    updateCanvas(canvas)\n    {\n        if(this.ui !== undefined)\n        {\n            canvas.width = window.innerWidth - this.ui.getBoundingClientRect().width;\n        }\n        else\n        {\n            canvas.width = canvas.clientWidth;\n        }\n        canvas.height = canvas.clientHeight;\n    }\n    \n    updateViewport(width, height)\n    {\n        this.renderer.resize(width, height);\n    }\n    \n    renderFrame(state)\n    {\n\n        this.renderer.clearFrame(state.renderingParameters.clearColor);\n\n        if(state.gltf === undefined)\n        {\n            return;\n        }\n\n        const scene = state.gltf.scenes[state.sceneIndex];\n\n        scene.applyTransformHierarchy(state.gltf);\n\n        this.renderer.drawScene(state, scene);\n    }\n    animate(state)\n    {\n        if(state.gltf === undefined)\n        {\n            return;\n        }\n\n        if(state.gltf.animations !== undefined && state.animationIndices !== undefined && !state.animationTimer.paused)\n        {\n            const t = state.animationTimer.elapsedSec();\n\n            const animations = state.animationIndices.map(index => {\n                return state.gltf.animations[index];\n            }).filter(animation => animation !== undefined);\n\n            for(const animation of animations)\n            {\n                animation.advance(state.gltf, t);\n            }\n        }\n    }\n\n    // gatherStatistics collects information about the GltfState such as the number of rendererd meshes or triangles\n    gatherStatistics(state)\n    {\n        if(state.gltf === undefined)\n        {\n            return;\n        }\n\n        // gather information from the active scene\n        const scene = state.gltf.scenes[state.sceneIndex];\n        const nodes = scene.gatherNodes(state.gltf);\n        const activeMeshes = nodes.filter(node => node.mesh !== undefined).map(node => state.gltf.meshes[node.mesh]);\n        const activePrimitives = activeMeshes\n            .reduce((acc, mesh) => acc.concat(mesh.primitives), [])\n            .filter(primitive => primitive.material !== undefined);\n        const activeMaterials = [... new Set(activePrimitives.map(primitive => state.gltf.materials[primitive.material]))];\n        const opaqueMaterials = activeMaterials.filter(material => material.alphaMode !== \"BLEND\");\n        const transparentMaterials = activeMaterials.filter(material => material.alphaMode === \"BLEND\");\n        const faceCount = activePrimitives\n            .map(primitive => {\n                const verticesCount = state.gltf.accessors[primitive.indices].count;\n                if (verticesCount === 0)\n                {\n                    return 0;\n                }\n\n                // convert vertex count to point, line or triangle count\n                switch (primitive.mode) {\n                case GL.POINTS:\n                    return verticesCount;\n                case GL.LINES:\n                    return verticesCount / 2;\n                case GL.LINE_LOOP:\n                    return verticesCount;\n                case GL.LINE_STRIP:\n                    return verticesCount - 1;\n                case GL.TRIANGLES:\n                    return verticesCount / 3;\n                case GL.TRIANGLE_STRIP:\n                case GL.TRIANGLE_FAN:\n                    return verticesCount - 2;\n                }\n            })\n            .reduce((acc, faceCount) => acc += faceCount);\n\n        // assemble statistics object\n        return {\n            meshCount: activeMeshes.length,\n            faceCount: faceCount,\n            opaqueMaterialsCount: opaqueMaterials.length,\n            transparentMaterialsCount: transparentMaterials.length\n        };\n    }\n\n    async startRendering(state, canvas)\n    {\n        const update = () =>\n        {\n            this.animate(state);\n            this.updateCanvas(canvas);\n            this.updateViewport(canvas.width, canvas.height);\n            this.renderFrame(state);\n            window.requestAnimationFrame(update);\n        };\n\n        // After this start executing render loop.\n        window.requestAnimationFrame(update);\n    }\n}\n\nexport { GltfView };\n","\nimport  axios from 'axios';\nimport { glTF } from '../gltf/gltf.js';\nimport { getIsGlb, getContainingFolder } from '../gltf/utils.js';\nimport { GlbParser } from './glb_parser.js';\nimport { gltfLoader } from \"./loader.js\";\nimport { gltfImage, ImageMimeType } from \"../gltf/image.js\";\nimport { gltfTexture, gltfTextureInfo } from '../gltf/texture.js';\nimport { gltfSampler } from '../gltf/sampler.js';\nimport { GL } from '../Renderer/webgl.js';\nimport { iblSampler } from '../ibl_sampler.js';\n\n\nimport { AsyncFileReader } from './async_file_reader.js';\n\nimport { DracoDecoder } from './draco.js';\nimport { KtxDecoder } from './ktx.js';\n\nimport { loadHDR } from '../libs/hdrpng.js';\n\nfunction initKtxLib(view, ktxlib)\n{\n    view.ktxDecoder = new KtxDecoder(view.context,ktxlib);\n}\n\nasync function initDracoLib(dracolib)\n{\n    const dracoDecoder = new DracoDecoder(dracolib);\n    if (dracoDecoder !== undefined)\n    {\n        await dracoDecoder.ready();\n    }\n}\n\nasync function loadGltf(file, view, additionalFiles)\n{\n    let isGlb = undefined;\n    let buffers = undefined;\n    let json = undefined;\n    let data = undefined;\n    let filename = \"\";\n    if(typeof file === \"string\")\n    {\n        isGlb = getIsGlb(file);\n        let response = await axios.get(file, { responseType: isGlb ? \"arraybuffer\" : \"json\" });\n        json = response.data;\n        data = response.data;\n        filename = file;\n    }\n    else if(file instanceof ArrayBuffer)\n    {\n        isGlb = additionalFiles === undefined;\n        if (isGlb)\n        {\n            data = file;\n        }\n        else\n        {\n            // TODO\n        }\n    }\n    else if(typeof(File) !== 'undefined' && file instanceof File)\n    {\n        let fileContent = file;\n        filename = file.name;\n        isGlb = getIsGlb(filename);\n        if (isGlb)\n        {\n            data = await AsyncFileReader.readAsArrayBuffer(fileContent);\n        }\n        else\n        {\n            data = await AsyncFileReader.readAsText(fileContent);\n            json = JSON.parse(data);\n            buffers = additionalFiles;\n        }\n    }\n    else\n    {\n        console.error(\"Passed invalid type to loadGltf \" + typeof(file));\n    }\n\n    if (isGlb)\n    {\n        const glbParser = new GlbParser(data);\n        const glb = glbParser.extractGlbData();\n        json = glb.json;\n        buffers = glb.buffers;\n    }\n\n    const gltf = new glTF(filename);\n    gltf.ktxDecoder = view.ktxDecoder;\n    //Make sure draco decoder instance is ready\n    gltf.fromJson(json);\n\n    // because the gltf image paths are not relative\n    // to the gltf, we have to resolve all image paths before that\n    for (const image of gltf.images)\n    {\n        image.resolveRelativePath(getContainingFolder(gltf.path));\n    }\n\n    await gltfLoader.load(gltf, view.context, buffers);\n\n    return gltf;\n}\n\n\nasync function loadEnvironment(file, view)\n{\n    let image = undefined;\n    if (typeof file === \"string\")\n    {\n        let response = await axios.get(file, { responseType: \"arraybuffer\" });\n\n        image = await loadHDR(new Uint8Array(response.data));\n    }\n    else if(file instanceof ArrayBuffer)\n    {\n        image = await loadHDR(new Uint8Array(file));\n    }\n    else\n    {\n        const imageData = await AsyncFileReader.readAsArrayBuffer(file).catch( () => {\n            console.error(\"Could not load image with FileReader\");\n        });\n        image = await loadHDR(new Uint8Array(imageData));\n    }\n    return loadEnvironmentFromImage(image, view);\n}\n\n\nasync function loadEnvironmentFromImage(imageHDR, view)\n{\n    // The environment uses the same type of samplers, textures and images as used in the glTF class\n    // so we just use it as a template\n    const environment = new glTF();\n\n    //\n    // Prepare samplers.\n    //\n\n    let samplerIdx = environment.samplers.length;\n\n    environment.samplers.push(new gltfSampler(GL.LINEAR, GL.LINEAR, GL.CLAMP_TO_EDGE, GL.CLAMP_TO_EDGE, \"DiffuseCubeMapSampler\"));\n    const diffuseCubeSamplerIdx = samplerIdx++;\n\n    environment.samplers.push(new gltfSampler(GL.LINEAR, GL.LINEAR_MIPMAP_LINEAR, GL.CLAMP_TO_EDGE, GL.CLAMP_TO_EDGE, \"SpecularCubeMapSampler\"));\n    const specularCubeSamplerIdx = samplerIdx++;\n\n    environment.samplers.push(new gltfSampler(GL.LINEAR, GL.LINEAR_MIPMAP_LINEAR, GL.CLAMP_TO_EDGE, GL.CLAMP_TO_EDGE, \"SheenCubeMapSampler\"));\n    const sheenCubeSamplerIdx = samplerIdx++;\n\n    environment.samplers.push(new gltfSampler(GL.LINEAR, GL.LINEAR, GL.CLAMP_TO_EDGE, GL.CLAMP_TO_EDGE, \"LUTSampler\"));\n    const lutSamplerIdx = samplerIdx++;\n\n    //\n    // Prepare images and textures.\n    //\n\n    let imageIdx = environment.images.length;\n\n    let environmentFiltering = new iblSampler(view);\n\n    environmentFiltering.init(imageHDR);\n    environmentFiltering.filterAll();\n\n    // Diffuse\n\n    const diffuseGltfImage = new gltfImage(\n        undefined,\n        GL.TEXTURE_CUBE_MAP,\n        0,\n        undefined,\n        \"Diffuse\",\n        ImageMimeType.GLTEXTURE,\n        environmentFiltering.lambertianTextureID\n        );\n\n    environment.images.push(diffuseGltfImage);\n\n    const diffuseTexture = new gltfTexture(\n        diffuseCubeSamplerIdx,\n        [imageIdx++],\n        GL.TEXTURE_CUBE_MAP,\n        environmentFiltering.lambertianTextureID);\n\n    environment.textures.push(diffuseTexture);\n\n    environment.diffuseEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.diffuseEnvMap.generateMips = false;\n\n\n\n    // Specular\n    const specularGltfImage = new gltfImage(\n        undefined,\n        GL.TEXTURE_CUBE_MAP,\n        0,\n        undefined,\n        \"Specular\",\n        ImageMimeType.GLTEXTURE,\n        environmentFiltering.ggxTextureID\n        );\n\n    environment.images.push(specularGltfImage);\n\n    const specularTexture = new gltfTexture(\n        specularCubeSamplerIdx,\n        [imageIdx++],\n        GL.TEXTURE_CUBE_MAP,\n        environmentFiltering.ggxTextureID);\n\n    environment.textures.push(specularTexture);\n\n    environment.specularEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.specularEnvMap.generateMips = false;\n\n\n    // Sheen\n    const sheenGltfImage = new gltfImage(\n        undefined,\n        GL.TEXTURE_CUBE_MAP,\n        0,\n        undefined,\n        \"Sheen\",\n        ImageMimeType.GLTEXTURE,\n        environmentFiltering.ggxTextureID\n        );\n\n    environment.images.push(sheenGltfImage);\n\n    const sheenTexture = new gltfTexture(\n        sheenCubeSamplerIdx,\n        [imageIdx++],\n        GL.TEXTURE_CUBE_MAP,\n        environmentFiltering.sheenTextureID);\n\n    environment.textures.push(sheenTexture);\n\n    environment.sheenEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.sheenEnvMap.generateMips = false;\n\n/*\n    // Diffuse\n\n    const lambertian = new gltfImage(filteredEnvironmentsDirectoryPath + \"/lambertian/diffuse.ktx2\", GL.TEXTURE_CUBE_MAP);\n    lambertian.mimeType = ImageMimeType.KTX2;\n    environment.images.push(lambertian);\n    environment.textures.push(new gltfTexture(diffuseCubeSamplerIdx, [imageIdx++], GL.TEXTURE_CUBE_MAP));\n    environment.diffuseEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.diffuseEnvMap.generateMips = false;\n\n    // Specular\n\n    const specular = new gltfImage(filteredEnvironmentsDirectoryPath + \"/ggx/specular.ktx2\", GL.TEXTURE_CUBE_MAP);\n    specular.mimeType = ImageMimeType.KTX2;\n    environment.images.push(specular);\n    environment.textures.push(new gltfTexture(specularCubeSamplerIdx, [imageIdx++], GL.TEXTURE_CUBE_MAP));\n    environment.specularEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.specularEnvMap.generateMips = false;\n\n    const specularImage = environment.images[environment.textures[environment.textures.length - 1].source];\n\n    // Sheen\n\n    const sheen = new gltfImage(filteredEnvironmentsDirectoryPath + \"/charlie/sheen.ktx2\", GL.TEXTURE_CUBE_MAP);\n    sheen.mimeType = ImageMimeType.KTX2;\n    environment.images.push(sheen);\n    environment.textures.push(new gltfTexture(sheenCubeSamplerIdx, [imageIdx++], GL.TEXTURE_CUBE_MAP));\n    environment.sheenEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.sheenEnvMap.generateMips = false;*/\n\n    //\n    // Look Up Tables.\n    //\n\n    // GGX\n\n    environment.images.push(new gltfImage(\"assets/images/lut_ggx.png\", GL.TEXTURE_2D));\n    environment.textures.push(new gltfTexture(lutSamplerIdx, [imageIdx++], GL.TEXTURE_2D));\n\n    environment.lut = new gltfTextureInfo(environment.textures.length - 1);\n    environment.lut.generateMips = false;\n\n    // Sheen\n    // Charlie\n\n    environment.images.push(new gltfImage(\"assets/images/lut_charlie.png\", GL.TEXTURE_2D));\n    environment.textures.push(new gltfTexture(lutSamplerIdx, [imageIdx++], GL.TEXTURE_2D));\n\n    environment.sheenLUT = new gltfTextureInfo(environment.textures.length - 1);\n    environment.sheenLUT.generateMips = false;\n\n    // Sheen E LUT\n\n    environment.images.push(new gltfImage(\"assets/images/lut_sheen_E.png\", GL.TEXTURE_2D));\n    environment.textures.push(new gltfTexture(lutSamplerIdx, [imageIdx++], GL.TEXTURE_2D));\n\n    environment.sheenELUT = new gltfTextureInfo(environment.textures.length - 1);\n    environment.sheenELUT.generateMips = false;\n\n    await gltfLoader.loadImages(environment);\n\n    environment.initGl(view.context);\n\n    environment.mipCount = environmentFiltering.mipmapLevels;\n\n    return environment;\n}\n\nexport { loadGltf, loadEnvironment, initKtxLib, initDracoLib};\n"],"names":["jsToGl","array","tensor","glMatrix","ARRAY_TYPE","length","i","jsToGlSlice","offset","stride","initGlForMembers","gltfObj","gltf","webGlContext","name","Object","keys","member","undefined","initGl","Array","isArray","element","objectsFromJsons","jsonObjects","GltfType","objects","jsonObject","push","objectFromJson","object","fromJson","fromKeys","target","jsonObj","ignore","k","find","elem","replace","stringHash","str","seed","Math","imul","charCodeAt","clamp","number","min","max","getIsGlb","filename","getExtension","split","toLowerCase","getContainingFolder","filePath","substring","lastIndexOf","UniformStruct","AnimationTimer","[object Object]","this","startTime","paused","fixedTime","pausedTime","Date","getTime","unpause","pause","timeInSec","GltfObject","extensions","extras","json","gltfCamera","type","znear","zfar","yfov","PI","aspectRatio","xmag","ymag","nodeIndex","super","node","cameraIndex","nodes","camera","cameras","console","error","jsonCamera","perspective","orthographic","drawables","drawable","modelView","mat4","create","multiply","getViewMatrix","worldTransform","pos","vec3","transformMat4","clone","primitive","centroid","depth","filter","a","sort","b","projection","view","position","getPosition","getLookAtTarget","lookAt","fromValues","lookDirection","getLookDirection","add","getNode","getTranslation","direction","rotation","getRotation","transformQuat","quat","getExtentsFromAccessor","accessor","outMin","outMax","boxMin","boxMax","center","scale","centerToSurface","sub","radius","VecZero","UserCamera","up","xRot","yRot","zoom","zoomFactor","rotateSpeed","panSpeed","sceneExtents","toLocalRotation","fitCameraPlanesToExtents","sceneIndex","fitViewToScene","value","x","y","yMax","left","longestDistance","distance","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","nodeIndices","scenes","slice","pop","concat","children","mesh","meshes","primitives","attribute","glAttributes","accessors","assetMin","assetMax","getSceneExtents","fitCameraTargetToExtents","fitZoomToExtents","fitPanSpeedToScene","vector","rotateX","rotateY","maxAxisLength","getFittingZoom","zNear","zFar","axisLength","xfov","yZoom","tan","xZoom","isPowerOf2","n","AsyncFileReader","path","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsArrayBuffer","readAsText","readAsDataURL","ImageMimeType","GL","gltfWebGl","context","webglExtensions","extension","warn","loc","textureInfo","texSlot","gltfTex","textures","index","image","images","source","mimeType","glTexture","initialized","createTexture","activeTexture","TEXTURE0","bindTexture","uniform1i","gltfSampler","samplers","sampler","pixelStorei","UNPACK_FLIP_Y_WEBGL","internalformat","linear","RGBA","SRGB8_ALPHA8","texImage2D","miplevel","UNSIGNED_BYTE","generateMips","shouldGenerateMips","setSampler","minFilter","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","generateMipmap","accessorIndex","gltfAccessor","glBuffer","createBuffer","data","getTypedView","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","attributeLocation","bufferView","gltfBufferView","bufferViews","ARRAY_BUFFER","vertexAttribPointer","getComponentCount","componentType","normalized","byteStride","enableVertexAttribArray","shaderIdentifier","isVert","shaderSource","shader","createShader","VERTEX_SHADER","FRAGMENT_SHADER","compileShader","getShaderParameter","COMPILE_STATUS","info","messages","getShaderInfoLog","message","matches","match","lineNumber","parseInt","lines","Error","vertex","fragment","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","gltfSamplerObj","generateMipmaps","texParameteri","TEXTURE_WRAP_S","wrapS","TEXTURE_WRAP_T","wrapT","CLAMP_TO_EDGE","NEAREST","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","magFilter","supports_EXT_texture_filter_anisotropic","texParameterf","anisotropy","maxAnisotropy","gltfImage","uri","TEXTURE_2D","basePath","startsWith","substr","additionalFiles","setImageFromBufferView","setImageFromFiles","setImageFromUri","url","Image","addEventListener","src","crossOrigin","ktxDecoder","loadKtxFromUri","loadHTMLImage","catch","buffer","buffers","Uint8Array","byteOffset","byteLength","loadKtxFromBuffer","jpeg.decode","useTArray","png.decode","blob","Blob","objectURL","URL","createObjectURL","files","foundFile","file","fullPath","arrayBuffer","imageData","width","height","ToneMaps","NONE","ACES_FAST","ACES","DebugOutput","METALLIC","ROUGHNESS","NORMAL","WORLDSPACENORMAL","GEOMETRYNORMAL","TANGENT","BITANGENT","BASECOLOR","OCCLUSION","EMISSIVE","DIFFUSE","SPECULAR","CLEARCOAT","SHEEN","TRANSMISSION","ALPHA","F0","GltfState","environment","renderingParameters","morphing","skinning","clearColor","exposure","usePunctual","useIBL","toneMap","debugOutput","environmentBackground","environmentRotation","userCamera","animationIndices","animationTimer","variant","gltfShader","hash","gl","uniforms","Map","attributes","unknownAttributes","unknownUniforms","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","set","attribCount","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","deleteProgram","get","log","uniform","objectName","updateUniformStruct","updateUniformArray","updateUniformValue","arrayName","uniformName","updateUniform","flat","apply","from","structName","memberNames","memberName","FLOAT","Float32Array","uniform1fv","uniform1f","FLOAT_VEC2","uniform2fv","FLOAT_VEC3","uniform3fv","FLOAT_VEC4","uniform4fv","INT","Uint32Array","Int32Array","uniform1iv","INT_VEC2","uniform2iv","INT_VEC3","uniform3iv","INT_VEC4","uniform4iv","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","ShaderCache","sources","shaders","programs","key","changed","includeName","includeSource","pattern","includes","entries","deleteShader","clear","destroy","permutationDefines","endsWith","defines","define","vertexShaderHash","fragmentShaderHash","hash1","hash2","linkedProg","gltfRenderer","currentWidth","currentHeight","webGl","opaqueRenderTexture","opaqueFramebuffer","opaqueDepthTexture","opaqueFramebufferWidth","opaqueFramebufferHeight","shaderSources","shaderCache","loadWebGlExtensions","visibleLights","viewMatrix","projMatrix","viewProjectionMatrix","currentCameraPosition","init","UNPACK_COLORSPACE_CONVERSION_WEBGL","enable","DEPTH_TEST","depthFunc","LEQUAL","colorMask","clearDepth","DEPTH_COMPONENT16","DEPTH_COMPONENT","UNSIGNED_SHORT","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","viewport","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","state","scene","currentCamera","getProjectionMatrix","getVisibleLights","gatherNodes","skin","updateSkin","reduce","acc","map","material","opaqueDrawables","materials","alphaMode","KHR_materials_transmission","transparentDrawables","sortPrimitivesByDepth","drawPrimitive","transmissionDrawables","transmissionSampleTexture","skip","mappings","idx","variants","obj","indexOf","materialIdx","forEach","vertDefines","pushVertParameterDefines","getDefines","fragDefines","pushFragParameterDefines","fragmentHash","selectShader","getShaderIdentifier","vertexHash","getShaderProgram","useProgram","applyLights","normalMatrix","updateAnimationUniforms","determinant","frontFace","CW","CCW","doubleSided","disable","CULL_FACE","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","blendEquation","FUNC_ADD","drawIndexed","indices","setIndices","vertexCount","count","location","getAttributeLocation","enableAttribute","val","getProperties","samplerName","setTexture","textureCount","applyEnvironmentMap","sheenELUT","uniform2i","indexAccessor","drawElements","mode","drawArrays","disableVertexAttribArray","lights","light","includesNode","skins","computeJoints","parameters","hasWeights","hasJoints","jointMatrices","targets","weights","hasNormals","jointNormalMatrices","uniformLights","toUniform","texSlotOffset","diffuseEnvMap","specularEnvMap","lut","sheenEnvMap","sheenLUT","mipCount","rotMatrix4","rotMatrix3","mat3","fromMat4","fn","thisArg","args","arguments","toString","prototype","call","isUndefined","isObject","isPlainObject","getPrototypeOf","isFunction","l","hasOwnProperty","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","assignValue","extend","bind","trim","stripBOM","content","encode","encodeURIComponent","params","paramsSerializer","serializedParams","utils","parts","v","toISOString","JSON","stringify","join","hashmarkIndex","InterceptorManager","handlers","use","fulfilled","rejected","eject","id","h","headers","fns","__CANCEL__","normalizedName","toUpperCase","config","code","request","response","isAxiosError","toJSON","description","fileName","columnNumber","stack","enhanceError","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","remove","now","ignoreDuplicateOf","originURL","msie","test","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hostname","port","pathname","charAt","requestURL","parsed","requestData","requestHeaders","XMLHttpRequest","auth","username","password","unescape","Authorization","btoa","baseURL","requestedURL","relativeURL","combineURLs","open","method","buildURL","timeout","onreadystatechange","readyState","status","responseURL","responseHeaders","getAllResponseHeaders","line","responseType","responseText","statusText","validateStatus","createError","settle","onabort","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","isURLSameOrigin","xsrfCookieName","cookies","xsrfHeaderName","setRequestHeader","e","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","adapter","defaults","process","require$$0","transformRequest","normalizeHeaderName","transformResponse","parse","maxContentLength","maxBodyLength","common","Accept","throwIfCancellationRequested","throwIfRequested","transformData","reason","isCancel","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","mergeDeepProperties","prop","axiosKeys","otherKeys","Axios","instanceConfig","interceptors","mergeConfig","chain","dispatchRequest","interceptor","unshift","shift","getUri","Cancel","CancelToken","executor","TypeError","resolvePromise","token","c","createInstance","defaultConfig","instance","axios","require$$1","require$$2","all","promises","spread","callback","arr","payload","sparse","typedView","filteredView","componentSize","getComponentSize","componentCount","arrayLength","BYTE","Int8Array","SHORT","Int16Array","Uint16Array","UNSIGNED_INT","applySparse","dv","DataView","func","floor","indicesBufferView","indicesBuffer","indicesByteOffset","indicesComponentSize","indicesComponentCount","indicesArrayLength","indicesTypedView","valuesBufferView","values","valuesBuffer","valuesByteOffset","valuesComponentSize","valuesComponentCount","valuesArrayLength","valuesTypedView","CompononentCount","WebGl","deleteBuffer","gltfBuffer","self","setBufferFromFiles","sefBufferFromUri","onloadend","event","gltfLight","color","intensity","innerConeAngle","outerConeAngle","range","nodeExtensions","lightsExtension","KHR_lights_punctual","lightIndex","jsonLight","spot","uLight","UniformLight","matrix","getScaling","mn","col","normalize","alongNegativeZ","translation","innerConeCos","cos","outerConeCos","Type_Spot","Type_Point","Type_Directional","defaultDirection","padding1","padding2","ImageBasedLight","brightnessFactor","brightnessOffset","specularEnvironmentTexture","diffuseEnvironmentTexture","sheenEnvironmentTexture","levelCount","jsonIBL","fromJsonExtensions","KHR_materials_sheen","TEXTURE_CUBE_MAP","textureObject","imageObject","gltfTexture","texture","mipLevelCount","jsonTexture","KHR_texture_basisu","deleteTexture","gltfTextureInfo","texCoord","strength","jsonTextureInfo","gltfMaterial","pbrMetallicRoughness","normalTexture","occlusionTexture","emissiveTexture","emissiveFactor","alphaCutoff","properties","defaultMaterial","baseColorFactor","vec4","textureKey","KHR_texture_transform","uvTransform","s","sin","uvMatrix","parseTextureInfoExtensions","baseColorTexture","metallicRoughnessTexture","diffuseTexture","specularGlossinessTexture","metallicFactor","roughnessFactor","KHR_materials_unlit","KHR_materials_pbrSpecularGlossiness","diffuseFactor","specularFactor","glossinessFactor","KHR_materials_clearcoat","clearcoatFactor","clearcoatRoughnessFactor","clearcoatTexture","clearcoatRoughnessTexture","clearcoatNormalTexture","sheenRoughnessFactor","sheenColorFactor","sheenRoughnessTexture","sheenColorTexture","transmissionFactor","transmissionTexture","jsonMaterial","fromJsonMaterialExtensions","fromJsonMetallicRoughness","jsonExtensions","fromJsonSpecularGlossiness","fromJsonClearcoat","fromJsonSheen","fromJsonTransmission","jsonMetallicRoughness","jsonSpecularGlossiness","jsonClearcoat","jsonSheen","jsonTransmission","DracoDecoder","dracoLib","DracoDecoderModule","module","initializingPromise","dracoDecoderType","dracoDecoderModule","freeze","gltfPrimitive","TRIANGLES","hasTangents","hasTexcoord","hasColor","maxAttributes","getParameter","MAX_VERTEX_ATTRIBS","KHR_draco_mesh_compression","dracoDecoder","isFrozen","dracoGeometry","decodeDracoBufferToIntermediate","copyDataFromDecodedGeometry","jsonPrimitive","fromJsonPrimitiveExtensions","KHR_materials_variants","fromJsonVariants","jsonVariants","primitiveAttributes","indexBuffer","loadBufferIntoGltf","POSITION","positionBuffer","loadArrayIntoArrayBuffer","normalBuffer","TEXCOORD_0","uvBuffer","TEXCOORD_1","tangentBuffer","COLOR_0","colorBuffer","JOINTS_0","jointsBuffer","WEIGHTS_0","weightsBuffer","JOINTS_1","WEIGHTS_1","gltfAccessorIndex","gltfBufferViewTarget","gltfBufferViewName","gltfBufferObj","gltfBufferViewObj","arrayData","dracoExtension","dracoBufferViewIDX","origGltfDrBufViewObj","origGltfDracoBuffer","actualBuffer","draco","decoder","Decoder","decoderBuffer","DecoderBuffer","Init","geometry","decodeGeometry","gltfDracoAttributes","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","ok","ptr","error_msg","num_points","dracoAttr","accessotVertexCount","getDracoArrayTypeFromComponentType","dracoAttribute","GetAttributeByUniqueId","tmpObj","decodeAttribute","numIndices","num_faces","dataSize","_malloc","GetTrianglesUInt32Array","HEAPU32","_free","itemSize","attributeName","attributeType","numComponents","num_components","numValues","GetAttributeDataArrayForAllPoints","DT_FLOAT32","HEAPF32","DT_INT8","HEAP8","DT_INT16","HEAP16","DT_INT32","HEAP32","DT_UINT8","HEAPU8","DT_UINT16","HEAPU16","DT_UINT32","gltfMesh","jsonMesh","gltfNode","inverseWorldTransform","applyMatrix","matrixData","transform","fromRotationTranslationScale","REPEAT","gltfScene","imageBasedLight","KHR_lights_image_based","imageBasedLights","rootTransform","applyTransform","parentTransform","getLocalTransform","invert","transpose","child","gatherNode","childIndex","gltfAsset","copyright","generator","version","minVersion","gltfAnimationChannel","InterpolationPath","gltfAnimationSampler","input","interpolation","output","InterpolationModes","gltfInterpolator","prevKey","prevT","q1","q2","t","qn1","qn2","quatResult","slerp","nextKey","keyDelta","prevIndex","nextIndex","V","B","tSq","tCub","v0","v1","channel","maxTime","getDeinterlacedView","tn","cubicSpline","q0","getQuat","slerpQuat","step","z","w","gltfAnimation","channels","interpolators","jsonAnimation","totalTime","interpolator","applyTranslation","interpolate","applyRotation","applyScale","gltfSkin","inverseBindMatrices","joints","skeleton","parentNode","ibmAccessor","joint","jointMatrix","ibm","mul","gltfVariant","jsonVariant","glTF","asset","animations","getJsonLightsFromExtensions","getJsonIBLsFromExtensions","getJsonVariantsFromExtension","j","enforceVariantsUniqueness","createDefault","GlbParser","glbHeaderInts","glbChunkHeaderInts","glbMagic","glbVersion","jsonChunkType","binaryChunkType","getCheckedGlbInfo","chunkInfos","getAllChunkInfos","chunkInfo","getBufferFromChunk","getJsonFromChunk","header","magic","checkEquality","infos","chunkStart","getChunkInfo","headerStart","start","chunkLength","jsonStart","jsonSlice","stringBuffer","TextDecoder","decode","actual","expected","gltfLoader","appendix","getBuffers","getAdditionalFiles","buffersPromise","loadBuffers","imagesPromise","loadImages","getTypedAppendix","File","Type","load","imagePromises","iblSampler","textureSize","sampleCount","lodBias","mipmapCount","lambertianTextureID","ggxTextureID","sheenTextureID","inputTextureID","cubemapTextureID","framebuffer","renderer","internalFormat","RGB32F","format","RGB","dataFloat","RGBA32F","numPixels","MIRRORED_REPEAT","withMipmaps","targetTexture","use8bit","RGBA8","TEXTURE_CUBE_MAP_POSITIVE_X","panoramaImage","loadTextureHDR","createCubemapTexture","mipmapLevels","log2","panoramaToCubeMap","cubeMapToLambertian","cubeMapToGGX","cubeMapToSheen","side","distribution","roughness","targetMipLevel","currentTextureSize","applyFilter","currentMipLevel","KtxDecoder","externalKtxlib","libktx","LIBKTX","initializied","preinitializedWebGLContext","makeContextCurrent","createContext","majorVersion","ktexture","needsTranscoding","astcSupported","etcSupported","dxtSupported","pvrtcSupported","TranscodeTarget","ASTC_4x4_RGBA","BC1_OR_3","PVRTC1_4_RGBA","ETC","RGBA8888","transcodeBasis","ErrorCode","SUCCESS","fetch","ktxTexture","transcode","uploadResult","glUpload","levels","baseWidth","async","loadHDR","d8","String","fromCharCode","rez","reverse","img","ipos","scanline","rgbe","ptr_end","buf","pow","_rgbeToFloat","ui","canvas","innerWidth","getBoundingClientRect","clientWidth","clientHeight","resize","clearFrame","applyTransformHierarchy","drawScene","elapsedSec","animation","advance","activeMeshes","activePrimitives","activeMaterials","Set","opaqueMaterials","transparentMaterials","faceCount","verticesCount","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","meshCount","opaqueMaterialsCount","transparentMaterialsCount","update","animate","updateCanvas","updateViewport","renderFrame","requestAnimationFrame","positions","setCentroid","positionVectors","getFileName","dracolib","ready","ktxlib","imageHDR","samplerIdx","diffuseCubeSamplerIdx","specularCubeSamplerIdx","sheenCubeSamplerIdx","lutSamplerIdx","imageIdx","environmentFiltering","filterAll","diffuseGltfImage","specularGltfImage","specularTexture","sheenGltfImage","sheenTexture","loadEnvironmentFromImage","isGlb","fileContent","glb","extractGlbData","resolveRelativePath"],"mappings":"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"}