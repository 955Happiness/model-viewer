{"version":3,"file":"gltf-sample-viewer.module.js","sources":["../source/gltf/utils.js","../source/gltf/gltf_object.js","../source/gltf/camera.js","../source/gltf/gltf_utils.js","../source/gltf/user_camera.js","../source/gltf/math_utils.js","../source/ResourceLoader/async_file_reader.js","../source/gltf/image_mime_type.js","../source/Renderer/webgl.js","../source/gltf/image.js","../source/Renderer/rendering_parameters.js","../source/GltfState/gltf_state.js","../source/Renderer/shader.js","../source/Renderer/shader_cache.js","../source/Renderer/renderer.js","../source/GltfView/gltf_view.js","../source/node_modules/axios/lib/helpers/bind.js","../source/node_modules/axios/lib/utils.js","../source/node_modules/axios/lib/helpers/buildURL.js","../source/node_modules/axios/lib/core/InterceptorManager.js","../source/node_modules/axios/lib/core/transformData.js","../source/node_modules/axios/lib/cancel/isCancel.js","../source/node_modules/axios/lib/helpers/normalizeHeaderName.js","../source/node_modules/axios/lib/core/createError.js","../source/node_modules/axios/lib/core/enhanceError.js","../source/node_modules/axios/lib/helpers/cookies.js","../source/node_modules/axios/lib/helpers/parseHeaders.js","../source/node_modules/axios/lib/helpers/isURLSameOrigin.js","../source/node_modules/axios/lib/adapters/xhr.js","../source/node_modules/axios/lib/core/buildFullPath.js","../source/node_modules/axios/lib/helpers/isAbsoluteURL.js","../source/node_modules/axios/lib/helpers/combineURLs.js","../source/node_modules/axios/lib/core/settle.js","../source/node_modules/axios/lib/defaults.js","../source/node_modules/axios/lib/core/dispatchRequest.js","../source/node_modules/axios/lib/core/mergeConfig.js","../source/node_modules/axios/lib/core/Axios.js","../source/node_modules/axios/lib/cancel/Cancel.js","../source/node_modules/axios/lib/cancel/CancelToken.js","../source/node_modules/axios/lib/axios.js","../source/node_modules/axios/lib/helpers/spread.js","../source/node_modules/axios/lib/helpers/isAxiosError.js","../source/node_modules/axios/index.js","../source/gltf/accessor.js","../source/gltf/buffer.js","../source/gltf/buffer_view.js","../source/gltf/light.js","../source/gltf/image_based_light.js","../source/gltf/texture.js","../source/gltf/material.js","../source/ResourceLoader/draco.js","../source/gltf/primitive.js","../source/gltf/mesh.js","../source/gltf/node.js","../source/gltf/sampler.js","../source/gltf/scene.js","../source/gltf/asset.js","../source/gltf/channel.js","../source/gltf/animation_sampler.js","../source/gltf/interpolator.js","../source/gltf/animation.js","../source/gltf/skin.js","../source/gltf/variant.js","../source/gltf/gltf.js","../source/ResourceLoader/glb_parser.js","../source/ResourceLoader/loader.js","../source/ibl_sampler.js","../source/ResourceLoader/ktx.js","../source/libs/hdrpng.js","../source/ResourceLoader/resource_loader.js"],"sourcesContent":["import { glMatrix } from 'gl-matrix';\n\nfunction jsToGl(array)\n{\n    let tensor = new glMatrix.ARRAY_TYPE(array.length);\n\n    for (let i = 0; i < array.length; ++i)\n    {\n        tensor[i] = array[i];\n    }\n\n    return tensor;\n}\n\nfunction jsToGlSlice(array, offset, stride)\n{\n    let tensor = new glMatrix.ARRAY_TYPE(stride);\n\n    for (let i = 0; i < stride; ++i)\n    {\n        tensor[i] = array[offset + i];\n    }\n\n    return tensor;\n}\n\nfunction initGlForMembers(gltfObj, gltf, webGlContext)\n{\n    for (const name of Object.keys(gltfObj))\n    {\n        const member = gltfObj[name];\n\n        if (member === undefined)\n        {\n            continue;\n        }\n        if (member.initGl !== undefined)\n        {\n            member.initGl(gltf, webGlContext);\n        }\n        if (Array.isArray(member))\n        {\n            for (const element of member)\n            {\n                if (element !== null && element !== undefined && element.initGl !== undefined)\n                {\n                    element.initGl(gltf, webGlContext);\n                }\n            }\n        }\n    }\n}\n\nfunction objectsFromJsons(jsonObjects, GltfType)\n{\n    if (jsonObjects === undefined)\n    {\n        return [];\n    }\n\n    const objects = [];\n    for (const jsonObject of jsonObjects)\n    {\n        objects.push(objectFromJson(jsonObject, GltfType));\n    }\n    return objects;\n}\n\nfunction objectFromJson(jsonObject, GltfType)\n{\n    const object = new GltfType();\n    object.fromJson(jsonObject);\n    return object;\n}\n\nfunction fromKeys(target, jsonObj, ignore = [])\n{\n    for(let k of Object.keys(target))\n    {\n        if (ignore && ignore.find(function(elem){return elem == k;}) !== undefined)\n        {\n            continue; // skip\n        }\n        if (jsonObj[k] !== undefined)\n        {\n            let normalizedK = k.replace(\"^@\", \"\");\n            target[normalizedK] = jsonObj[k];\n        }\n    }\n}\n\nfunction fromParams(parameters, target, jsonObj)\n{\n    for (let p of parameters)\n    {\n        if(jsonObj[p] !== undefined)\n        {\n            target[p] = jsonObj[p];\n        }\n    }\n}\n\nfunction stringHash(str, seed = 0)\n{\n    for(var i = 0; i < str.length; ++i)\n    {\n        seed = Math.imul(31, seed) + str.charCodeAt(i) | 0;\n    }\n\n    return seed;\n}\n\nfunction combineHashes(hash1, hash2)\n{\n    return hash1 ^ (hash1 + 0x9e3779b9 + (hash2 << 6) + (hash2 >> 2));\n}\n\nfunction clamp(number, min, max)\n{\n    return Math.min(Math.max(number, min), max);\n}\n\nfunction getIsGlb(filename)\n{\n    return getExtension(filename) == \"glb\";\n}\n\nfunction getIsGltf(filename)\n{\n    return getExtension(filename) == \"gltf\";\n}\n\nfunction getIsHdr(filename)\n{\n    return getExtension(filename) == \"hdr\";\n}\n\nfunction getExtension(filename)\n{\n    const split = filename.toLowerCase().split(\".\");\n    if (split.length == 1)\n    {\n        return undefined;\n    }\n    return split[split.length - 1];\n}\n\nfunction getFileName(filePath)\n{\n    const split = filePath.split(\"/\");\n    return split[split.length - 1];\n}\n\nfunction getFileNameWithoutExtension(filePath)\n{\n    const filename = getFileName(filePath);\n    const index = filename.lastIndexOf(\".\");\n    return filename.slice(0, index);\n}\n\nfunction getContainingFolder(filePath)\n{\n    return filePath.substring(0, filePath.lastIndexOf(\"/\") + 1);\n}\n\nfunction combinePaths()\n{\n    const parts = Array.from(arguments);\n    return parts.join(\"/\");\n}\n\n// marker interface used to for parsing the uniforms\nclass UniformStruct { }\n\nclass Timer\n{\n    constructor()\n    {\n        this.startTime = undefined;\n        this.endTime = undefined;\n        this.seconds = undefined;\n    }\n\n    start()\n    {\n        this.startTime = new Date().getTime() / 1000;\n        this.endTime = undefined;\n        this.seconds = undefined;\n    }\n\n    stop()\n    {\n        this.endTime = new Date().getTime() / 1000;\n        this.seconds = this.endTime - this.startTime;\n    }\n}\n\nclass AnimationTimer\n{\n    constructor()\n    {\n        this.startTime = 0;\n        this.paused = true;\n        this.fixedTime = null;\n        this.pausedTime = 0;\n    }\n\n    elapsedSec()\n    {\n        if(this.paused)\n        {\n            return this.pausedTime / 1000;\n        }\n        else\n        {\n            return this.fixedTime || (new Date().getTime() - this.startTime) / 1000;\n        }\n    }\n\n    toggle()\n    {\n        if(this.paused)\n        {\n            this.unpause();\n        }\n        else\n        {\n            this.pause();\n        }\n    }\n\n    start()\n    {\n        this.startTime = new Date().getTime();\n        this.paused = false;\n    }\n\n    pause()\n    {\n        this.pausedTime = new Date().getTime() - this.startTime;\n        this.paused = true;\n    }\n\n    unpause()\n    {\n        this.startTime += new Date().getTime() - this.startTime - this.pausedTime;\n        this.paused = false;\n    }\n\n    reset()\n    {\n        if(!this.paused) {\n            // Animation is running.\n            this.startTime = new Date().getTime();\n        }\n        else {\n            this.startTime = 0;\n        }\n        this.pausedTime = 0;\n    }\n\n    setFixedTime(timeInSec)\n    {\n        this.paused = false;\n        this.fixedTime = timeInSec;\n    }\n}\n\nexport {\n    jsToGl,\n    jsToGlSlice,\n    objectsFromJsons,\n    objectFromJson,\n    fromKeys,\n    fromParams,\n    stringHash,\n    combineHashes,\n    clamp,\n    getIsGlb,\n    getIsGltf,\n    getIsHdr,\n    getExtension,\n    getFileName,\n    getFileNameWithoutExtension,\n    getContainingFolder,\n    combinePaths,\n    UniformStruct,\n    Timer,\n    AnimationTimer,\n    initGlForMembers\n};\n","import { initGlForMembers, fromKeys } from \"./utils\";\n\n// base class for all gltf objects\nclass GltfObject\n{\n    constructor()\n    {\n        this.extensions = undefined;\n        this.extras = undefined;\n    }\n\n    fromJson(json)\n    {\n        fromKeys(this, json);\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        initGlForMembers(this, gltf, webGlContext);\n    }\n}\n\nexport { GltfObject };\n","import { mat4, vec3, quat } from 'gl-matrix';\nimport { fromKeys } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfCamera extends GltfObject\n{\n    constructor(\n        type = \"perspective\",\n        znear = 0.01,\n        zfar = 10000.0,\n        yfov = 45.0 * Math.PI / 180.0,\n        aspectRatio = 16.0 / 9.0,\n        xmag = 1.0,\n        ymag = 1.0,\n        name = undefined,\n        nodeIndex = undefined)\n    {\n        super();\n        this.type = type;\n        this.znear = znear;\n        this.zfar = zfar;\n        this.yfov = yfov; // radians\n        this.xmag = xmag;\n        this.ymag = ymag;\n        this.aspectRatio = aspectRatio;\n        this.name = name;\n        this.node = nodeIndex;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        super.initGl(gltf, webGlContext);\n\n        let cameraIndex = undefined;\n        for (let i = 0; i < gltf.nodes.length; i++)\n        {\n            cameraIndex = gltf.nodes[i].camera;\n            if (cameraIndex === undefined)\n            {\n                continue;\n            }\n\n            if (gltf.cameras[cameraIndex] === this)\n            {\n                this.node = i;\n                break;\n            }\n        }\n\n        // cameraIndex stays undefined if camera is not assigned to any node\n        if(this.node === undefined && cameraIndex !== undefined)\n        {\n            console.error(\"Invalid node for camera \" + cameraIndex);\n        }\n    }\n\n    fromJson(jsonCamera)\n    {\n        this.name = name;\n        if(jsonCamera.perspective !== undefined)\n        {\n            this.type = \"perspective\";\n            fromKeys(this, jsonCamera.perspective);\n        }\n        else if(jsonCamera.orthographic !== undefined)\n        {\n            this.type = \"orthographic\";\n            fromKeys(this, jsonCamera.orthographic);\n        }\n    }\n\n    sortPrimitivesByDepth(gltf, drawables)\n    {\n        // Precompute the distances to avoid their computation during sorting.\n        for (const drawable of drawables)\n        {\n            const modelView = mat4.create();\n            mat4.multiply(modelView, this.getViewMatrix(gltf), drawable.node.worldTransform);\n\n            // Transform primitive centroid to find the primitive's depth.\n            const pos = vec3.transformMat4(vec3.create(), vec3.clone(drawable.primitive.centroid), modelView);\n\n            drawable.depth = pos[2];\n        }\n\n        // 1. Remove primitives that are behind the camera.\n        //    --> They will never be visible and it is cheap to discard them here.\n        // 2. Sort primitives so that the furthest nodes are rendered first.\n        //    This is required for correct transparency rendering.\n        return drawables\n            .filter((a) => a.depth <= 0)\n            .sort((a, b) => a.depth - b.depth);\n    }\n\n    getProjectionMatrix()\n    {\n        const projection = mat4.create();\n\n        if (this.type === \"perspective\")\n        {\n            mat4.perspective(projection, this.yfov, this.aspectRatio, this.znear, this.zfar);\n        }\n        else if (this.type === \"orthographic\")\n        {\n            projection[0]  = 1.0 / this.xmag;\n            projection[5]  = 1.0 / this.ymag;\n            projection[10] = 2.0 / (this.znear - this.zfar);\n            projection[14] = (this.zfar + this.znear) / (this.znear - this.zfar);\n        }\n\n        return projection;\n    }\n\n    getViewMatrix(gltf)\n    {\n        const view = mat4.create();\n        const position = this.getPosition(gltf);\n        const target = this.getLookAtTarget(gltf);\n        mat4.lookAt(view, position, target, vec3.fromValues(0, 1, 0));\n        return view;\n    }\n\n    getLookAtTarget(gltf)\n    {\n        const target = vec3.create();\n        const position = this.getPosition(gltf);\n        const lookDirection = this.getLookDirection(gltf);\n        vec3.add(target, lookDirection, position);\n        return target;\n    }\n\n    getPosition(gltf)\n    {\n        const position = vec3.create();\n        const node = this.getNode(gltf);\n        mat4.getTranslation(position, node.worldTransform);\n        return position;\n    }\n\n    getLookDirection(gltf)\n    {\n        const direction = vec3.create();\n        const rotation = this.getRotation(gltf);\n        vec3.transformQuat(direction, vec3.fromValues(0, 0, -1), rotation);\n        return direction;\n    }\n\n    getRotation(gltf)\n    {\n        const rotation = quat.create();\n        const node = this.getNode(gltf);\n        mat4.getRotation(rotation, node.worldTransform);\n        return rotation;\n    }\n\n    clone()\n    {\n        return new gltfCamera(\n            this.type,\n            this.znear,\n            this.zfar,\n            this.yfov,\n            this.aspectRatio,\n            this.xmag,\n            this.ymag,\n            this.name,\n            this.node);\n    }\n\n    getNode(gltf)\n    {\n        return gltf.nodes[this.node];\n    }\n}\n\nexport { gltfCamera };\n","import { vec3 } from 'gl-matrix';\nimport { jsToGl } from './utils.js';\n\nfunction getSceneExtents(gltf, sceneIndex, outMin, outMax)\n{\n    for (const i of [0, 1, 2])\n    {\n        outMin[i] = Number.POSITIVE_INFINITY;\n        outMax[i] = Number.NEGATIVE_INFINITY;\n    }\n\n    const scene = gltf.scenes[sceneIndex];\n\n    let nodeIndices = scene.nodes.slice();\n    while(nodeIndices.length > 0)\n    {\n        const node = gltf.nodes[nodeIndices.pop()];\n        nodeIndices = nodeIndices.concat(node.children);\n\n        if (node.mesh === undefined)\n        {\n            continue;\n        }\n\n        const mesh = gltf.meshes[node.mesh];\n        if (mesh.primitives === undefined)\n        {\n            continue;\n        }\n\n        for (const primitive of mesh.primitives)\n        {\n            const attribute = primitive.glAttributes.find(a => a.attribute == \"POSITION\");\n            if (attribute === undefined)\n            {\n                continue;\n            }\n\n            const accessor = gltf.accessors[attribute.accessor];\n            const assetMin = vec3.create();\n            const assetMax = vec3.create();\n            getExtentsFromAccessor(accessor, node.worldTransform, assetMin, assetMax);\n\n            for (const i of [0, 1, 2])\n            {\n                outMin[i] = Math.min(outMin[i], assetMin[i]);\n                outMax[i] = Math.max(outMax[i], assetMax[i]);\n            }\n        }\n    }\n}\n\nfunction getExtentsFromAccessor(accessor, worldTransform, outMin, outMax)\n{\n    const boxMin = vec3.create();\n    vec3.transformMat4(boxMin, jsToGl(accessor.min), worldTransform);\n\n    const boxMax = vec3.create();\n    vec3.transformMat4(boxMax, jsToGl(accessor.max), worldTransform);\n\n    const center = vec3.create();\n    vec3.add(center, boxMax, boxMin);\n    vec3.scale(center, center, 0.5);\n\n    const centerToSurface = vec3.create();\n    vec3.sub(centerToSurface, boxMax, center);\n\n    const radius = vec3.length(centerToSurface);\n\n    for (const i of [0, 1, 2])\n    {\n        outMin[i] = center[i] - radius;\n        outMax[i] = center[i] + radius;\n    }\n}\n\nfunction computePrimitiveCentroids(gltf)\n{\n    const meshes = gltf.nodes.filter(node => node.mesh !== undefined).map(node => gltf.meshes[node.mesh]);\n    const primitives = meshes.reduce((acc, mesh) => acc.concat(mesh.primitives), []);\n    for(const primitive of primitives) {\n\n        const positionsAccessor = gltf.accessors[primitive.attributes.POSITION];\n        const positions = positionsAccessor.getTypedView(gltf);\n\n        if(primitive.indices !== undefined)\n        {\n            // Primitive has indices.\n\n            const indicesAccessor = gltf.accessors[primitive.indices];\n\n            const indices = indicesAccessor.getTypedView(gltf);\n\n            const acc = new Float32Array(3);\n\n            for(let i = 0; i < indices.length; i++) {\n                const offset = 3 * indices[i];\n                acc[0] += positions[offset];\n                acc[1] += positions[offset + 1];\n                acc[2] += positions[offset + 2];\n            }\n\n            const centroid = new Float32Array([\n                acc[0] / indices.length,\n                acc[1] / indices.length,\n                acc[2] / indices.length,\n            ]);\n\n            primitive.setCentroid(centroid);\n        }\n        else\n        {\n            // Primitive does not have indices.\n\n            const acc = new Float32Array(3);\n\n            for(let i = 0; i < positions.length; i += 3) {\n                acc[0] += positions[i];\n                acc[1] += positions[i + 1];\n                acc[2] += positions[i + 2];\n            }\n\n            const positionVectors = positions.length / 3;\n\n            const centroid = new Float32Array([\n                acc[0] / positionVectors,\n                acc[1] / positionVectors,\n                acc[2] / positionVectors,\n            ]);\n\n            primitive.setCentroid(centroid);\n        }\n\n    }\n}\n\nexport { getSceneExtents, computePrimitiveCentroids };\n","import { vec3 } from 'gl-matrix';\nimport { gltfCamera } from './camera.js';\nimport { jsToGl, clamp } from './utils.js';\nimport { getSceneExtents } from './gltf_utils.js';\n\nconst VecZero = vec3.create();\nconst PanSpeedDenominator = 1200;\nconst MaxNearFarRatio = 10000;\n\nclass UserCamera extends gltfCamera\n{\n    constructor(\n        position = [0, 0, 0],\n        target = [0, 0,0],\n        up = [0, 1, 0],\n        xRot = 0,\n        yRot = 0,\n        zoom = 1)\n    {\n        super();\n\n        this.position = jsToGl(position);\n        this.target = jsToGl(target);\n        this.up = jsToGl(up);\n        this.xRot = xRot;\n        this.yRot = yRot;\n        this.zoom = zoom;\n        this.zoomFactor = 1.04;\n        this.rotateSpeed = 1 / 180;\n        this.panSpeed = 1;\n        this.sceneExtents = {\n            min: vec3.create(),\n            max: vec3.create()\n        };\n    }\n\n    updatePosition()\n    {\n        // calculate direction from focus to camera (assuming camera is at positive z)\n        // yRot rotates *around* x-axis, xRot rotates *around* y-axis\n        const direction = vec3.fromValues(0, 0, 1);\n        this.toLocalRotation(direction);\n\n        const position = vec3.create();\n        vec3.scale(position, direction, this.zoom);\n        vec3.add(position, position, this.target);\n\n        this.position = position;\n\n        this.fitCameraPlanesToExtents(this.sceneExtents.min, this.sceneExtents.max);\n    }\n\n    reset(gltf, sceneIndex)\n    {\n        this.xRot = 0;\n        this.yRot = 0;\n        this.fitViewToScene(gltf, sceneIndex, true);\n    }\n\n    zoomIn(value)\n    {\n        if (value > 0)\n        {\n            this.zoom *= this.zoomFactor;\n        }\n        else\n        {\n            this.zoom /= this.zoomFactor;\n        }\n    }\n\n    rotate(x, y)\n    {\n        const yMax = Math.PI / 2 - 0.01;\n        this.xRot += (x * this.rotateSpeed);\n        this.yRot += (y * this.rotateSpeed);\n        this.yRot = clamp(this.yRot, -yMax, yMax);\n    }\n\n    pan(x, y)\n    {\n        const left = vec3.fromValues(-1, 0, 0);\n        this.toLocalRotation(left);\n        vec3.scale(left, left, x * this.panSpeed);\n\n        const up = vec3.fromValues(0, 1, 0);\n        this.toLocalRotation(up);\n        vec3.scale(up, up, y * this.panSpeed);\n\n        vec3.add(this.target, this.target, up);\n        vec3.add(this.target, this.target, left);\n    }\n\n    fitPanSpeedToScene(min, max)\n    {\n        const longestDistance = vec3.distance(min, max);\n        this.panSpeed = longestDistance / PanSpeedDenominator;\n    }\n\n    fitViewToScene(gltf, sceneIndex)\n    {\n        getSceneExtents(gltf, sceneIndex, this.sceneExtents.min, this.sceneExtents.max);\n        this.fitCameraTargetToExtents(this.sceneExtents.min, this.sceneExtents.max);\n        this.fitZoomToExtents(this.sceneExtents.min, this.sceneExtents.max);\n        this.fitPanSpeedToScene(this.sceneExtents.min, this.sceneExtents.max);\n        this.fitCameraPlanesToExtents(this.sceneExtents.min, this.sceneExtents.max);\n    }\n\n    toLocalRotation(vector)\n    {\n        vec3.rotateX(vector, vector, VecZero, -this.yRot);\n        vec3.rotateY(vector, vector, VecZero, -this.xRot);\n    }\n\n    getLookAtTarget()\n    {\n        return this.target;\n    }\n\n    getPosition()\n    {\n        return this.position;\n    }\n\n    fitZoomToExtents(min, max)\n    {\n        const maxAxisLength = Math.max(max[0] - min[0], max[1] - min[1]);\n        this.zoom = this.getFittingZoom(maxAxisLength);\n    }\n\n    fitCameraTargetToExtents(min, max)\n    {\n        for (const i of [0, 1, 2])\n        {\n            this.target[i] = (max[i] + min[i]) / 2;\n        }\n    }\n\n    fitCameraPlanesToExtents(min, max)\n    {\n        // Manually increase scene extent just for the camera planes to avoid camera clipping in most situations.\n        const longestDistance = 10 * vec3.distance(min, max);\n        let zNear = this.zoom - (longestDistance * 0.6);\n        let zFar = this.zoom + (longestDistance * 0.6);\n\n        // minimum near plane value needs to depend on far plane value to avoid z fighting or too large near planes\n        zNear = Math.max(zNear, zFar / MaxNearFarRatio);\n\n        this.znear = zNear;\n        this.zfar = zFar;\n    }\n\n    getFittingZoom(axisLength)\n    {\n        const yfov = this.yfov;\n        const xfov = this.yfov * this.aspectRatio;\n\n        const yZoom = axisLength / 2 / Math.tan(yfov / 2);\n        const xZoom = axisLength / 2 / Math.tan(xfov / 2);\n\n        return Math.max(xZoom, yZoom);\n    }\n}\n\nexport { UserCamera };\n","function nearestPowerOf2(n)\n{\n    if (isPowerOf2(n))\n    {\n        return n;\n    }\n    return Math.pow(2.0, Math.round(Math.log(n) / Math.log(2.0)));\n}\n\nfunction isPowerOf2(n)\n{\n    return n && (n & (n - 1)) === 0;\n}\n\nfunction makeEven(n)\n{\n    if (n % 2 === 1)\n    {\n        return n + 1;\n    }\n    return n;\n}\n\nexport { nearestPowerOf2, isPowerOf2, makeEven };\n","class AsyncFileReader\n{\n    static async readAsArrayBuffer(path) {\n        return new Promise( (resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = reject;\n            reader.readAsArrayBuffer(path);\n        });\n    }\n\n    static async readAsText(path) {\n        return new Promise( (resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = reject;\n            reader.readAsText(path);\n        });\n    }\n\n    static async readAsDataURL(path) {\n        return new Promise( (resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = reject;\n            reader.readAsDataURL(path);\n        });\n    }\n}\n\nexport { AsyncFileReader };\n","const ImageMimeType = {JPEG: \"image/jpeg\", PNG: \"image/png\", HDR: \"image/vnd.radiance\", KTX2: \"image/ktx2\", GLTEXTURE: \"image/texture\"};\n\nexport { ImageMimeType };\n","import { ImageMimeType } from \"../gltf/image_mime_type.js\";\n\nlet GL = undefined;\n\nclass gltfWebGl\n{\n    constructor(context)\n    {\n        this.context = context;\n        if(GL === undefined)\n        {\n            GL = context;\n        }\n    }\n\n    loadWebGlExtensions(webglExtensions)\n    {\n        for (let extension of webglExtensions)\n        {\n            if (this.context.getExtension(extension) === null)\n            {\n                console.warn(\"Extension \" + extension + \" not supported!\");\n            }\n        }\n\n        // let EXT_texture_filter_anisotropic = this.context.getExtension(\"EXT_texture_filter_anisotropic\");\n\n        // if (EXT_texture_filter_anisotropic)\n        // {\n        //     this.context.anisotropy = EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT;\n        //     this.context.maxAnisotropy = this.context.getParameter(EXT_texture_filter_anisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n        //     this.context.supports_EXT_texture_filter_anisotropic = true;\n        // }\n        // else\n        // {\n        //     this.context.supports_EXT_texture_filter_anisotropic = false;\n        // }\n    }\n\n    setTexture(loc, gltf, textureInfo, texSlot)\n    {\n        if (loc === -1)\n        {\n            return false;\n        }\n\n        let gltfTex = gltf.textures[textureInfo.index];\n\n        if (gltfTex === undefined)\n        {\n            console.warn(\"Texture is undefined: \" + textureInfo.index);\n            return false;\n        }\n\n        const image = gltf.images[gltfTex.source];\n        if (image.mimeType === ImageMimeType.KTX2 ||\n            image.mimeType === ImageMimeType.GLTEXTURE)\n        {\n            gltfTex.glTexture = image.image;\n            gltfTex.initialized = true;\n        }\n\n        if (gltfTex.glTexture === undefined)\n        {\n            gltfTex.glTexture = this.context.createTexture();\n        }\n\n        this.context.activeTexture(GL.TEXTURE0 + texSlot);\n        this.context.bindTexture(gltfTex.type, gltfTex.glTexture);\n\n        this.context.uniform1i(loc, texSlot);\n\n        if (!gltfTex.initialized)\n        {\n            const gltfSampler = gltf.samplers[gltfTex.sampler];\n\n            if (gltfSampler === undefined)\n            {\n                console.warn(\"Sampler is undefined for texture: \" + textureInfo.index);\n                return false;\n            }\n\n            this.context.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL, false);\n\n            if (image === undefined)\n            {\n                console.warn(\"Image is undefined for texture: \" + gltfTex.source);\n                return false;\n            }\n            const internalformat = textureInfo.linear ? GL.RGBA : GL.SRGB8_ALPHA8;\n            this.context.texImage2D(image.type, image.miplevel, internalformat, GL.RGBA, GL.UNSIGNED_BYTE, image.image);\n            const generateMips = image.shouldGenerateMips();\n\n            this.setSampler(gltfSampler, gltfTex.type, generateMips);\n\n            if (textureInfo.generateMips && generateMips)\n            {\n                // Until this point, images can be assumed to be power of two.\n                switch (gltfSampler.minFilter)\n                {\n                case GL.NEAREST_MIPMAP_NEAREST:\n                case GL.NEAREST_MIPMAP_LINEAR:\n                case GL.LINEAR_MIPMAP_NEAREST:\n                case GL.LINEAR_MIPMAP_LINEAR:\n                    this.context.generateMipmap(gltfTex.type);\n                    break;\n                default:\n                    break;\n                }\n            }\n\n            gltfTex.initialized = true;\n        }\n\n        return gltfTex.initialized;\n    }\n\n    setIndices(gltf, accessorIndex)\n    {\n        let gltfAccessor = gltf.accessors[accessorIndex];\n\n        if (gltfAccessor.glBuffer === undefined)\n        {\n            gltfAccessor.glBuffer = this.context.createBuffer();\n\n            let data = gltfAccessor.getTypedView(gltf);\n\n            if (data === undefined)\n            {\n                return false;\n            }\n\n            this.context.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, gltfAccessor.glBuffer);\n            this.context.bufferData(GL.ELEMENT_ARRAY_BUFFER, data, GL.STATIC_DRAW);\n        }\n        else\n        {\n            this.context.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, gltfAccessor.glBuffer);\n        }\n\n        return true;\n    }\n\n    enableAttribute(gltf, attributeLocation, gltfAccessor)\n    {\n        if (attributeLocation === -1)\n        {\n            console.warn(\"Tried to access unknown attribute\");\n            return false;\n        }\n\n        if(gltfAccessor.bufferView === undefined)\n        {\n            console.warn(\"Tried to access undefined bufferview\");\n            return true;\n        }\n\n        let gltfBufferView = gltf.bufferViews[gltfAccessor.bufferView];\n\n        if (gltfAccessor.glBuffer === undefined)\n        {\n            gltfAccessor.glBuffer = this.context.createBuffer();\n\n            let data = gltfAccessor.getTypedView(gltf);\n\n            if (data === undefined)\n            {\n                return false;\n            }\n\n            this.context.bindBuffer(GL.ARRAY_BUFFER, gltfAccessor.glBuffer);\n            this.context.bufferData(GL.ARRAY_BUFFER, data, GL.STATIC_DRAW);\n        }\n        else\n        {\n            this.context.bindBuffer(GL.ARRAY_BUFFER, gltfAccessor.glBuffer);\n        }\n\n        this.context.vertexAttribPointer(attributeLocation, gltfAccessor.getComponentCount(gltfAccessor.type), gltfAccessor.componentType, gltfAccessor.normalized, gltfBufferView.byteStride, 0);\n        this.context.enableVertexAttribArray(attributeLocation);\n\n        return true;\n    }\n\n    compileShader(shaderIdentifier, isVert, shaderSource)\n    {\n        const shader = this.context.createShader(isVert ? GL.VERTEX_SHADER : GL.FRAGMENT_SHADER);\n        this.context.shaderSource(shader, shaderSource);\n        this.context.compileShader(shader);\n        const compiled = this.context.getShaderParameter(shader, GL.COMPILE_STATUS);\n\n        if (!compiled)\n        {\n            // output surrounding source code\n            let info = \"\";\n            const messages = this.context.getShaderInfoLog(shader).split(\"\\n\");\n            for(const message of messages)\n            {\n                info += message + \"\\n\";\n                const matches = message.match(/(?:(?:WARNING)|(?:ERROR)): [0-9]*:([0-9]*).*/i);\n                if (matches && matches.length > 1)\n                {\n                    const lineNumber = parseInt(matches[1]) - 1;\n                    const lines = shaderSource.split(\"\\n\");\n\n                    for(let i = Math.max(0, lineNumber - 2); i < Math.min(lines.length, lineNumber + 3); i++)\n                    {\n                        if (lineNumber === i)\n                        {\n                            info += \"->\";\n                        }\n                        info += \"\\t\" + lines[i] + \"\\n\";\n                    }\n                }\n            }\n\n            throw new Error(\"Could not compile WebGL program '\" + shaderIdentifier + \"'. \\n\\n\" + info);\n        }\n\n        return shader;\n    }\n\n    linkProgram(vertex, fragment)\n    {\n        let program = this.context.createProgram();\n        this.context.attachShader(program, vertex);\n        this.context.attachShader(program, fragment);\n        this.context.linkProgram(program);\n\n        if (!this.context.getProgramParameter(program, GL.LINK_STATUS))\n        {\n            var info = this.context.getProgramInfoLog(program);\n            throw new Error('Could not link WebGL program. \\n\\n' + info);\n        }\n\n        return program;\n    }\n\n    //https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n    setSampler(gltfSamplerObj, type, generateMipmaps) // TEXTURE_2D\n    {\n        if (generateMipmaps)\n        {\n            this.context.texParameteri(type, GL.TEXTURE_WRAP_S, gltfSamplerObj.wrapS);\n            this.context.texParameteri(type, GL.TEXTURE_WRAP_T, gltfSamplerObj.wrapT);\n        }\n        else\n        {\n            this.context.texParameteri(type, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\n            this.context.texParameteri(type, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\n        }\n\n        // If not mip-mapped, force to non-mip-mapped sampler.\n        if (!generateMipmaps && (gltfSamplerObj.minFilter != GL.NEAREST) && (gltfSamplerObj.minFilter != GL.LINEAR))\n        {\n            if ((gltfSamplerObj.minFilter == GL.NEAREST_MIPMAP_NEAREST) || (gltfSamplerObj.minFilter == GL.NEAREST_MIPMAP_LINEAR))\n            {\n                this.context.texParameteri(type, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\n            }\n            else\n            {\n                this.context.texParameteri(type, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\n            }\n        }\n        else\n        {\n            this.context.texParameteri(type, GL.TEXTURE_MIN_FILTER, gltfSamplerObj.minFilter);\n        }\n        this.context.texParameteri(type, GL.TEXTURE_MAG_FILTER, gltfSamplerObj.magFilter);\n\n        if (this.context.supports_EXT_texture_filter_anisotropic)\n        {\n            this.context.texParameterf(type, this.context.anisotropy, this.context.maxAnisotropy); // => 16xAF\n        }\n    }\n}\n\nexport { gltfWebGl, GL };\n","import { GltfObject } from './gltf_object.js';\nimport { isPowerOf2 } from './math_utils.js';\nimport { AsyncFileReader } from '../ResourceLoader/async_file_reader.js';\nimport { GL } from \"../Renderer/webgl\";\nimport { ImageMimeType } from \"./image_mime_type.js\";\nimport * as jpeg  from \"jpeg-js\";\nimport * as png from 'fast-png';\n\nclass gltfImage extends GltfObject\n{\n    constructor(\n        uri = undefined,\n        type = GL.TEXTURE_2D,\n        miplevel = 0,\n        bufferView = undefined,\n        name = undefined,\n        mimeType = ImageMimeType.JPEG,\n        image = undefined)\n    {\n        super();\n        this.uri = uri;\n        this.bufferView = bufferView;\n        this.mimeType = mimeType;\n        this.image = image; // javascript image\n        this.name = name;\n        this.type = type; // nonstandard\n        this.miplevel = miplevel; // nonstandard\n    }\n\n    resolveRelativePath(basePath)\n    {\n        if (this.uri !== undefined)\n        {\n            if (this.uri.startsWith('./'))\n            {\n                // Remove preceding './' from URI.\n                this.uri = this.uri.substr(2);\n            }\n            this.uri = basePath + this.uri;\n        }\n    }\n\n    async load(gltf, additionalFiles = undefined)\n    {\n        if (this.image !== undefined)\n        {\n            if (this.mimeType !== ImageMimeType.GLTEXTURE)\n            {\n                console.error(\"image has already been loaded\");\n            }\n            return;\n        }\n\n        if (!await this.setImageFromBufferView(gltf) &&\n            !await this.setImageFromFiles(additionalFiles, gltf) &&\n            !await this.setImageFromUri(gltf))\n        {\n            console.error(\"Was not able to resolve image with uri '%s'\", this.uri);\n            return;\n        }\n\n        return;\n    }\n\n    static loadHTMLImage(url)\n    {\n        return new Promise( (resolve, reject) => {\n            const image = new Image();\n            image.addEventListener('load', () => resolve(image) );\n            image.addEventListener('error', reject);\n            image.src = url;\n            image.crossOrigin = \"\";\n        });\n    }\n\n    async setImageFromUri(gltf)\n    {\n        if (this.uri === undefined)\n        {\n            return false;\n        }\n\n        if(this.mimeType === ImageMimeType.KTX2)\n        {\n            if (gltf.ktxDecoder !== undefined)\n            {\n                this.image = await gltf.ktxDecoder.loadKtxFromUri(this.uri);\n            }\n            else\n            {\n                console.warn('Loading of ktx images failed: KtxDecoder not initalized');\n            }\n        }\n        else if (typeof(Image) !== 'undefined' && (this.mimeType === ImageMimeType.JPEG || this.mimeType === ImageMimeType.PNG))\n        {\n            this.image = await gltfImage.loadHTMLImage(this.uri).catch( (error) => {\n                console.error(error);\n            });\n        }\n        else\n        {\n            console.error(\"Unsupported image type \" + this.mimeType);\n            return false;\n        }\n\n        return true;\n    }\n\n    async setImageFromBufferView(gltf)\n    {\n        const view = gltf.bufferViews[this.bufferView];\n        if (view === undefined)\n        {\n            return false;\n        }\n\n        const buffer = gltf.buffers[view.buffer].buffer;\n        const array = new Uint8Array(buffer, view.byteOffset, view.byteLength);\n        if (this.mimeType === ImageMimeType.KTX2)\n        {\n            if (gltf.ktxDecoder !== undefined)\n            {\n                this.image = await gltf.ktxDecoder.loadKtxFromBuffer(array);\n            }\n            else\n            {\n                console.warn('Loading of ktx images failed: KtxDecoder not initalized');\n            }\n        }\n        else if(typeof(Image) !== 'undefined' && (this.mimeType === ImageMimeType.JPEG || this.mimeType === ImageMimeType.PNG))\n        {\n            const blob = new Blob([array], { \"type\": this.mimeType });\n            const objectURL = URL.createObjectURL(blob);\n            this.image = await gltfImage.loadHTMLImage(objectURL).catch( () => {\n                console.error(\"Could not load image from buffer view\");\n            });\n        }\n        else if(this.mimeType === ImageMimeType.JPEG)\n        {\n            this.image = jpeg.decode(array, {useTArray: true});\n        }\n        else if(this.mimeType === ImageMimeType.PNG)\n        {\n            this.image = png.decode(array);\n        }\n        else\n        {\n            console.error(\"Unsupported image type \" + this.mimeType);\n            return false;\n        }\n\n        return true;\n    }\n\n    async setImageFromFiles(files, gltf)\n    {\n        if (this.uri === undefined || files === undefined)\n        {\n            return false;\n        }\n\n        let foundFile = files.find(function(file)\n        {\n            if (file.name === this.uri || file.fullPath === this.uri)\n            {\n                return true;\n            }\n        }, this);\n\n        if (foundFile === undefined)\n        {\n            return false;\n        }\n\n        if(this.mimeType === ImageMimeType.KTX2)\n        {\n            if (gltf.ktxDecoder !== undefined)\n            {\n                const data = new Uint8Array(await foundFile.arrayBuffer());\n                this.image = await gltf.ktxDecoder.loadKtxFromBuffer(data);\n            }\n            else\n            {\n                console.warn('Loading of ktx images failed: KtxDecoder not initalized');\n            }\n        }\n        else if (typeof(Image) !== 'undefined' && (this.mimeType === ImageMimeType.JPEG || this.mimeType === ImageMimeType.PNG))\n        {\n            const imageData = await AsyncFileReader.readAsDataURL(foundFile).catch( () => {\n                console.error(\"Could not load image with FileReader\");\n            });\n            this.image = await gltfImage.loadHTMLImage(imageData).catch( () => {\n                console.error(\"Could not create image from FileReader image data\");\n            });\n        }\n        else\n        {\n            console.error(\"Unsupported image type \" + this.mimeType);\n            return false;\n        }\n\n\n        return true;\n    }\n\n    shouldGenerateMips()\n    {\n        return (isPowerOf2(this.image.width) && isPowerOf2(this.image.height));\n    }\n}\n\nexport { gltfImage, ImageMimeType };\n\n","import { ImageMimeType } from \"../gltf/image\";\nimport { AnimationTimer } from \"../gltf/utils\";\n\nconst UserCameraIndex = \"orbit camera\";\n\nclass gltfRenderingParameters\n{\n    constructor(\n        environmentName = Object.keys(Environments)[0],\n        useIBL = true,\n        usePunctual = false,\n        exposure = 1.0,\n        clearColor = [50, 50, 50],\n        toneMap = ToneMaps.NONE,\n        debugOutput = DebugOutput.NONE)\n    {\n        this.environmentName = environmentName;\n        this.useIBL = useIBL;\n        this.usePunctual = usePunctual;\n        this.exposure = exposure;\n        this.clearColor = clearColor;\n        this.toneMap = toneMap;\n        this.debugOutput = debugOutput;\n        this.sceneIndex = 0;\n        this.cameraIndex = UserCameraIndex;\n        this.animationTimer = new AnimationTimer();\n        this.animationIndex = \"all\";\n        this.skinning = true;\n        this.morphing = true;\n    }\n\n    userCameraActive()\n    {\n        return this.cameraIndex === UserCameraIndex;\n    }\n}\n\nconst ToneMaps =\n{\n    NONE: \"None\",\n    ACES_FAST: \"ACES fast\",\n    ACES: \"ACES\"\n};\n\nconst DebugOutput =\n{\n    NONE: \"None\",\n    METALLIC: \"Metallic\",\n    ROUGHNESS: \"Roughness\",\n    NORMAL: \"Normal\",\n    WORLDSPACENORMAL: \"Worldspace Normal\",\n    GEOMETRYNORMAL: \"Geometry Normal\",\n    TANGENT: \"Tangent\",\n    BITANGENT: \"Bitangent\",\n    BASECOLOR: \"Base Color\",\n    OCCLUSION: \"Occlusion\",\n    EMISSIVE: \"Emissive\",\n    DIFFUSE: \"Diffuse\",\n    SPECULAR: \"Specular\",\n    CLEARCOAT: \"ClearCoat\",\n    SHEEN: \"Sheen\",\n    TRANSMISSION: \"Transmission\",\n    ALPHA: \"Alpha\",\n    F0: \"F0\"\n};\n\nconst Environments =\n{\n    \"Papermill Ruins E\": { folder: \"papermill\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Field\": { folder: \"field\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Courtyard of the Doge's palace\": { folder: \"doge2\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Pisa courtyard nearing sunset\": { folder: \"pisa\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Footprint Court\": { folder: \"footprint_court\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Helipad GoldenHour\": { folder: \"helipad\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Dining room of the Ennis-Brown House\": { folder: \"ennis\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Neutral\": { folder: \"neutral\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Directional\": { folder: \"directional\", mipLevel: 11, type: ImageMimeType.KTX2 },\n    \"Chromatic\": { folder: \"chromatic\", mipLevel: 11, type: ImageMimeType.KTX2 }\n};\n\nexport { UserCameraIndex, gltfRenderingParameters, Environments, ToneMaps, DebugOutput };\n","import { UserCamera } from '../gltf/user_camera.js';\nimport { ToneMaps, DebugOutput } from '../Renderer/rendering_parameters.js';\nimport { AnimationTimer } from '../gltf/utils.js';\n\nclass GltfState\n{\n    constructor()\n    {\n        this.gltf = undefined;\n        this.environment = undefined;\n        this.renderingParameters = {\n            morphing: true,\n            skinning: true,\n            clearColor: [58, 64, 74],\n            exposure: 1.0,\n            usePunctual: true,\n            useIBL: true,\n            toneMap: ToneMaps.LINEAR,\n            debugOutput: DebugOutput.NONE,\n            environmentBackground: false,\n            environmentRotation: 90.0 //+X = 0 +Z = 90 -X = 180 -Z = 270\n        };\n        this.userCamera = new UserCamera();\n        this.sceneIndex = 0;\n        this.cameraIndex = undefined;\n        this.animationIndices = [];\n        this.animationTimer = new AnimationTimer();\n        this.variant = undefined;\n    }\n}\n\nexport { GltfState };\n","import { UniformStruct } from '../gltf/utils.js';\nimport { GL } from './webgl.js';\n\nclass gltfShader\n{\n    constructor(program, hash, gl)\n    {\n        this.program = program;\n        this.hash = hash;\n        this.uniforms = new Map();\n        this.attributes = new Map();\n        this.unknownAttributes = [];\n        this.unknownUniforms = [];\n        this.gl = gl;\n\n        if(this.program !== undefined)\n        {\n            const uniformCount = this.gl.context.getProgramParameter(this.program, GL.ACTIVE_UNIFORMS);\n            for(let i = 0; i < uniformCount; ++i)\n            {\n                const info = this.gl.context.getActiveUniform(this.program, i);\n                const loc = this.gl.context.getUniformLocation(this.program, info.name);\n                this.uniforms.set(info.name, {type: info.type, loc: loc});\n            }\n\n            const attribCount = this.gl.context.getProgramParameter(this.program, GL.ACTIVE_ATTRIBUTES);\n            for(let i = 0; i < attribCount; ++i)\n            {\n                const info = this.gl.context.getActiveAttrib(this.program, i);\n                const loc = this.gl.context.getAttribLocation(this.program, info.name);\n                this.attributes.set(info.name, loc);\n            }\n        }\n    }\n\n    destroy()\n    {\n        if (this.program !== undefined)\n        {\n            this.deleteProgram(this.program);\n        }\n\n        this.program = undefined;\n    }\n\n    getAttributeLocation(name)\n    {\n        const loc = this.attributes.get(name);\n        if (loc === undefined)\n        {\n            if (this.unknownAttributes.find(n => n === name) === undefined)\n            {\n                console.log(\"Attribute '%s' does not exist\", name);\n                this.unknownAttributes.push(name);\n            }\n            return -1;\n        }\n        return loc;\n    }\n\n    getUniformLocation(name)\n    {\n        const uniform = this.uniforms.get(name);\n        if (uniform === undefined)\n        {\n            if (this.unknownUniforms.find(n => n === name) === undefined)\n            {\n                this.unknownUniforms.push(name);\n            }\n            return -1;\n        }\n        return uniform.loc;\n    }\n\n    updateUniform(objectName, object, log = true)\n    {\n        if (object instanceof UniformStruct)\n        {\n            this.updateUniformStruct(objectName, object, log);\n        }\n        else if (Array.isArray(object))\n        {\n            this.updateUniformArray(objectName, object, log);\n        }\n        else\n        {\n            this.updateUniformValue(objectName, object, log);\n        }\n    }\n\n    updateUniformArray(arrayName, array, log)\n    {\n        if(array[0] instanceof UniformStruct)\n        {\n            for (let i = 0; i < array.length; ++i)\n            {\n                let element = array[i];\n                let uniformName = arrayName + \"[\" + i + \"]\";\n                this.updateUniform(uniformName, element, log);\n            }\n        }else{\n            let uniformName = arrayName + \"[0]\";\n\n            let flat = [];\n\n            if(Array.isArray(array[0]) || array[0].length !== undefined)\n            {\n                for (let i = 0; i < array.length; ++i)\n                {\n                    flat.push.apply(flat, Array.from(array[i]));\n                }\n            }\n            else\n            {\n                flat = array;\n            }\n\n            if(flat.length === 0)\n            {\n                console.error(\"Failed to flatten uniform array \" + uniformName);\n                return;\n            }\n\n            this.updateUniformValue(uniformName, flat, log);\n        }\n    }\n\n    updateUniformStruct(structName, object, log)\n    {\n        let memberNames = Object.keys(object);\n        for (let memberName of memberNames)\n        {\n            let uniformName = structName + \".\" + memberName;\n            this.updateUniform(uniformName, object[memberName], log);\n        }\n    }\n\n    // upload the values of a uniform with the given name using type resolve to get correct function call\n    updateUniformValue(uniformName, value, log)\n    {\n        const uniform = this.uniforms.get(uniformName);\n\n        if(uniform !== undefined)\n        {\n            switch (uniform.type) {\n            case GL.FLOAT:\n            {\n                if(Array.isArray(value) || value instanceof Float32Array)\n                {\n                    this.gl.context.uniform1fv(uniform.loc, value);\n                }else{\n                    this.gl.context.uniform1f(uniform.loc, value);\n                }\n                break;\n            }\n            case GL.FLOAT_VEC2: this.gl.context.uniform2fv(uniform.loc, value); break;\n            case GL.FLOAT_VEC3: this.gl.context.uniform3fv(uniform.loc, value); break;\n            case GL.FLOAT_VEC4: this.gl.context.uniform4fv(uniform.loc, value); break;\n\n            case GL.INT:\n            {\n                if(Array.isArray(value) || value instanceof Uint32Array || value instanceof Int32Array)\n                {\n                    this.gl.context.uniform1iv(uniform.loc, value);\n                }else{\n                    this.gl.context.uniform1i(uniform.loc, value);\n                }\n                break;\n            }\n            case GL.INT_VEC2: this.gl.context.uniform2iv(uniform.loc, value); break;\n            case GL.INT_VEC3: this.gl.context.uniform3iv(uniform.loc, value); break;\n            case GL.INT_VEC4: this.gl.context.uniform4iv(uniform.loc, value); break;\n\n            case GL.FLOAT_MAT2: this.gl.context.uniformMatrix2fv(uniform.loc, false, value); break;\n            case GL.FLOAT_MAT3: this.gl.context.uniformMatrix3fv(uniform.loc, false, value); break;\n            case GL.FLOAT_MAT4: this.gl.context.uniformMatrix4fv(uniform.loc, false, value); break;\n            }\n        }\n        else if(log)\n        {\n            console.warn(\"Unkown uniform: \" + uniformName);\n        }\n    }\n}\n\nexport { gltfShader };\n","import { gltfShader } from './shader.js';\nimport { stringHash, combineHashes } from '../gltf/utils.js';\n\n// THis class generates and caches the shader source text for a given permutation\nclass ShaderCache\n{\n    constructor(sources, gl)\n    {\n        this.sources  = sources; // shader name -> source code\n        this.shaders  = new Map(); // name & permutations hashed -> compiled shader\n        this.programs = new Map(); // (vertex shader, fragment shader) -> program\n        this.gl = gl;\n\n        // resovle / expande sources (TODO: break include cycles)\n        for (let [key, src] of this.sources)\n        {\n            let changed = false;\n            for (let [includeName, includeSource] of this.sources)\n            {\n                //var pattern = RegExp(/#include</ + includeName + />/);\n                const pattern = \"#include <\" + includeName + \">\";\n\n                if(src.includes(pattern))\n                {\n                    // only replace the first occurance\n                    src = src.replace(pattern, includeSource);\n\n                    // remove the others\n                    while (src.includes(pattern))\n                    {\n                        src = src.replace(pattern, \"\");\n                    }\n\n                    changed = true;\n                }\n            }\n\n            if(changed)\n            {\n                this.sources.set(key, src);\n            }\n        }\n    }\n\n    destroy()\n    {\n        for (let [, shader] of this.shaders.entries())\n        {\n            this.gl.context.deleteShader(shader);\n            shader = undefined;\n        }\n\n        this.shaders.clear();\n\n        for (let [, program] of this.programs)\n        {\n            program.destroy();\n        }\n\n        this.programs.clear();\n    }\n\n    // example args: \"pbr.vert\", [\"NORMALS\", \"TANGENTS\"]\n    selectShader(shaderIdentifier, permutationDefines)\n    {\n        // first check shaders for the exact permutation\n        // if not present, check sources and compile it\n        // if not present, return null object\n\n        const src = this.sources.get(shaderIdentifier);\n        if(src === undefined)\n        {\n            console.log(\"Shader source for \" + shaderIdentifier + \" not found\");\n            return null;\n        }\n\n        const isVert = shaderIdentifier.endsWith(\".vert\");\n        let hash = stringHash(shaderIdentifier);\n\n        // console.log(shaderIdentifier);\n\n        let defines = \"#version 300 es\\n\";\n        for(let define of permutationDefines)\n        {\n            // console.log(define);\n            hash ^= stringHash(define);\n            defines += \"#define \" + define + \"\\n\";\n        }\n\n        let shader = this.shaders.get(hash);\n\n        if(shader === undefined)\n        {\n            // console.log(defines);\n            // compile this variant\n            shader = this.gl.compileShader(shaderIdentifier, isVert, defines + src);\n            this.shaders.set(hash, shader);\n        }\n\n        return hash;\n    }\n\n    getShaderProgram(vertexShaderHash, fragmentShaderHash)\n    {\n        const hash = combineHashes(vertexShaderHash, fragmentShaderHash);\n\n        let program = this.programs.get(hash);\n\n        if (program) // program already linked\n        {\n            return program;\n        }\n        else // link this shader program type!\n        {\n            let linkedProg = this.gl.linkProgram(this.shaders.get(vertexShaderHash), this.shaders.get(fragmentShaderHash));\n            if(linkedProg)\n            {\n                let program = new gltfShader(linkedProg, hash, this.gl);\n                this.programs.set(hash, program);\n                return program;\n            }\n        }\n\n        return undefined;\n    }\n}\n\nexport { ShaderCache };\n","import { mat4, mat3, vec3 } from 'gl-matrix';\nimport { ShaderCache } from './shader_cache.js';\nimport { ToneMaps, DebugOutput } from './rendering_parameters.js';\nimport { gltfWebGl, GL } from './webgl.js';\n\nimport pbrShader from './shaders/pbr.frag';\nimport brdfShader from './shaders/brdf.glsl';\nimport iblShader from './shaders/ibl.glsl';\nimport punctualShader from './shaders/punctual.glsl';\nimport primitiveShader from './shaders/primitive.vert';\nimport texturesShader from './shaders/textures.glsl';\nimport tonemappingShader from './shaders/tonemapping.glsl';\nimport shaderFunctions from './shaders/functions.glsl';\nimport animationShader from './shaders/animation.glsl';\n\nclass gltfRenderer\n{\n    constructor(context)\n    {\n        this.shader = undefined; // current shader\n\n        this.currentWidth = 0;\n        this.currentHeight = 0;\n\n        this.webGl = new gltfWebGl(context);\n\n        // create render target for non transmission materials\n        this.opaqueRenderTexture = 0;\n        this.opaqueFramebuffer = 0;\n        this.opaqueDepthTexture = 0;\n        this.opaqueFramebufferWidth = 1024;\n        this.opaqueFramebufferHeight = 1024;\n\n        const shaderSources = new Map();\n        shaderSources.set(\"primitive.vert\", primitiveShader);\n        shaderSources.set(\"pbr.frag\", pbrShader);\n        shaderSources.set(\"brdf.glsl\", brdfShader);\n        shaderSources.set(\"ibl.glsl\", iblShader);\n        shaderSources.set(\"punctual.glsl\", punctualShader);\n        shaderSources.set(\"tonemapping.glsl\", tonemappingShader);\n        shaderSources.set(\"textures.glsl\", texturesShader);\n        shaderSources.set(\"functions.glsl\", shaderFunctions);\n        shaderSources.set(\"animation.glsl\", animationShader);\n\n        this.shaderCache = new ShaderCache(shaderSources, this.webGl);\n\n        let requiredWebglExtensions = [\n            \"EXT_texture_filter_anisotropic\",\n            \"OES_texture_float_linear\"\n        ];\n\n        this.webGl.loadWebGlExtensions(requiredWebglExtensions);\n\n        this.visibleLights = [];\n\n        this.viewMatrix = mat4.create();\n        this.projMatrix = mat4.create();\n        this.viewProjectionMatrix = mat4.create();\n\n        this.currentCameraPosition = vec3.create();\n\n        this.init();\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    // Render glTF scene graph\n    /////////////////////////////////////////////////////////////////////\n\n    // app state\n    init()\n    {\n        const context = this.webGl.context;\n        context.pixelStorei(GL.UNPACK_COLORSPACE_CONVERSION_WEBGL, GL.NONE);\n        context.enable(GL.DEPTH_TEST);\n        context.depthFunc(GL.LEQUAL);\n        context.colorMask(true, true, true, true);\n        context.clearDepth(1.0);\n\n        this.opaqueRenderTexture = context.createTexture();\n        context.bindTexture(context.TEXTURE_2D, this.opaqueRenderTexture);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MIN_FILTER, context.LINEAR_MIPMAP_LINEAR);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_WRAP_S, context.CLAMP_TO_EDGE);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_WRAP_T, context.CLAMP_TO_EDGE);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MAG_FILTER, context.NEAREST);\n        context.texImage2D( context.TEXTURE_2D,\n                            0,\n                            context.RGBA,\n                            this.opaqueFramebufferWidth,\n                            this.opaqueFramebufferHeight,\n                            0,\n                            context.RGBA,\n                            context.UNSIGNED_BYTE,\n                            null);\n        context.bindTexture(context.TEXTURE_2D, null);\n\n        this.opaqueDepthTexture = context.createTexture();\n        context.bindTexture(context.TEXTURE_2D, this.opaqueDepthTexture);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MIN_FILTER, context.NEAREST);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_WRAP_S, context.CLAMP_TO_EDGE);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_WRAP_T, context.CLAMP_TO_EDGE);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MAG_FILTER, context.NEAREST);\n        context.texImage2D( context.TEXTURE_2D,\n                            0,\n                            context.DEPTH_COMPONENT16,\n                            this.opaqueFramebufferWidth,\n                            this.opaqueFramebufferHeight,\n                            0,\n                            context.DEPTH_COMPONENT,\n                            context.UNSIGNED_SHORT,\n                            null);\n        context.bindTexture(context.TEXTURE_2D, null);\n\n        this.opaqueFramebuffer = context.createFramebuffer();\n        context.bindFramebuffer(context.FRAMEBUFFER, this.opaqueFramebuffer);\n        context.framebufferTexture2D(context.FRAMEBUFFER, context.COLOR_ATTACHMENT0, context.TEXTURE_2D, this.opaqueRenderTexture, 0);\n        context.framebufferTexture2D(context.FRAMEBUFFER, context.DEPTH_ATTACHMENT, context.TEXTURE_2D, this.opaqueDepthTexture, 0);\n        context.viewport(0, 0, this.currentWidth, this.currentHeight);\n        context.bindFramebuffer(context.FRAMEBUFFER, null);\n\n    }\n\n    resize(width, height)\n    {\n        if (this.currentWidth !== width || this.currentHeight !== height)\n        {\n            this.currentHeight = height;\n            this.currentWidth = width;\n            this.webGl.context.viewport(0, 0, width, height);\n        }\n    }\n\n    // frame state\n    clearFrame(clearColor)\n    {\n        this.webGl.context.bindFramebuffer(this.webGl.context.FRAMEBUFFER, null);\n        this.webGl.context.clearColor(clearColor[0] / 255.0, clearColor[1] / 255.0, clearColor[2] / 255.0, 1.0);\n        this.webGl.context.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n        this.webGl.context.bindFramebuffer(this.webGl.context.FRAMEBUFFER, this.opaqueFramebuffer);\n        this.webGl.context.clearColor(clearColor[0] / 255.0, clearColor[1] / 255.0, clearColor[2] / 255.0, 1.0);\n        this.webGl.context.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n        this.webGl.context.bindFramebuffer(this.webGl.context.FRAMEBUFFER, null);\n    }\n\n    // render complete gltf scene with given camera\n    drawScene(state, scene)\n    {\n        let currentCamera = undefined;\n\n        if (state.cameraIndex === undefined)\n        {\n            currentCamera = state.userCamera;\n        }\n        else\n        {\n            currentCamera = state.gltf.cameras[state.cameraIndex].clone();\n        }\n\n        currentCamera.aspectRatio = this.currentWidth / this.currentHeight;\n\n        this.projMatrix = currentCamera.getProjectionMatrix();\n        this.viewMatrix = currentCamera.getViewMatrix(state.gltf);\n        this.currentCameraPosition = currentCamera.getPosition(state.gltf);\n\n        this.visibleLights = this.getVisibleLights(state.gltf, scene);\n\n        mat4.multiply(this.viewProjectionMatrix, this.projMatrix, this.viewMatrix);\n\n        const nodes = scene.gatherNodes(state.gltf);\n\n        // Update skins.\n        for (const node of nodes)\n        {\n            if (node.mesh !== undefined && node.skin !== undefined)\n            {\n                this.updateSkin(state, node);\n            }\n        }\n\n        // collect drawables by essentially zipping primitives (for geometry and material)\n        // and nodes for the transform\n        const drawables = nodes\n            .filter(node => node.mesh !== undefined)\n            .reduce((acc, node) => acc.concat(state.gltf.meshes[node.mesh].primitives.map( primitive => {\n                return  {node: node, primitive: primitive};\n            })), [])\n            .filter(({node, primitive}) => primitive.material !== undefined);\n\n        // opaque drawables don't need sorting\n        const opaqueDrawables = drawables\n            .filter(({node, primitive}) => state.gltf.materials[primitive.material].alphaMode !== \"BLEND\"\n                && (state.gltf.materials[primitive.material].extensions === undefined\n                    || state.gltf.materials[primitive.material].extensions.KHR_materials_transmission === undefined));\n\n        // transparent drawables need sorting before they can be drawn\n        let transparentDrawables = drawables\n            .filter(({node, primitive}) => state.gltf.materials[primitive.material].alphaMode === \"BLEND\"\n                && (state.gltf.materials[primitive.material].extensions === undefined\n                    || state.gltf.materials[primitive.material].extensions.KHR_materials_transmission === undefined));\n        transparentDrawables = currentCamera.sortPrimitivesByDepth(state.gltf, transparentDrawables);\n\n        // Render transmission sample texture\n        this.webGl.context.bindFramebuffer(this.webGl.context.FRAMEBUFFER, this.opaqueFramebuffer);\n\n        this.webGl.context.viewport(0, 0, this.opaqueFramebufferWidth, this.opaqueFramebufferHeight);\n        for (const drawable of opaqueDrawables)\n        {\n            this.drawPrimitive(state, drawable.primitive, drawable.node, this.viewProjectionMatrix);\n        }\n        for (const drawable of transparentDrawables)\n        {\n            this.drawPrimitive(state, drawable.primitive, drawable.node, this.viewProjectionMatrix);\n        }\n\n        //Reset Viewport\n        this.webGl.context.viewport(0, 0,  this.currentWidth, this.currentHeight);\n\n        //Create Framebuffer Mipmaps\n        this.webGl.context.bindTexture(this.webGl.context.TEXTURE_2D, this.opaqueRenderTexture);\n        this.webGl.context.generateMipmap(this.webGl.context.TEXTURE_2D);\n\n        // Render to canvas\n        this.webGl.context.bindFramebuffer(this.webGl.context.FRAMEBUFFER, null);\n        for (const drawable of opaqueDrawables)\n        {\n            this.drawPrimitive(state, drawable.primitive, drawable.node, this.viewProjectionMatrix);\n        }\n        for (const drawable of transparentDrawables)\n        {\n            this.drawPrimitive(state, drawable.primitive, drawable.node, this.viewProjectionMatrix);\n        }\n\n        // filter materials with transmission extension\n        let transmissionDrawables = drawables\n            .filter(({node, primitive}) => state.gltf.materials[primitive.material].extensions !== undefined\n                && state.gltf.materials[primitive.material].extensions.KHR_materials_transmission !== undefined);\n        transmissionDrawables = currentCamera.sortPrimitivesByDepth(state.gltf, transmissionDrawables);\n        for (const drawable of transmissionDrawables)\n        {\n            this.drawPrimitive(state, drawable.primitive, drawable.node, this.viewProjectionMatrix, this.opaqueRenderTexture);\n        }\n    }\n\n    // vertices with given material\n    drawPrimitive(state, primitive, node, viewProjectionMatrix, transmissionSampleTexture)\n    {\n        if (primitive.skip) return;\n\n        let material;\n        if(primitive.mappings !== undefined && state.variant != \"default\")\n        {\n            const names = state.gltf.variants.map(obj => obj.name);\n            const idx = names.indexOf(state.variant);\n            let materialIdx = primitive.material;\n            primitive.mappings.forEach(element => {\n                if(element.variants.indexOf(idx) >= 0)\n                {\n                    materialIdx = element.material;\n                }\n            });\n            material = state.gltf.materials[materialIdx];\n        }\n        else\n        {\n            material = state.gltf.materials[primitive.material];\n        }\n\n        //select shader permutation, compile and link program.\n\n        let vertDefines = [];\n        this.pushVertParameterDefines(vertDefines, state.renderingParameters, state.gltf, node, primitive);\n        vertDefines = primitive.getDefines().concat(vertDefines);\n\n        let fragDefines = material.getDefines().concat(vertDefines);\n        this.pushFragParameterDefines(fragDefines, state);\n\n        const fragmentHash = this.shaderCache.selectShader(material.getShaderIdentifier(), fragDefines);\n        const vertexHash = this.shaderCache.selectShader(primitive.getShaderIdentifier(), vertDefines);\n\n        if (fragmentHash && vertexHash)\n        {\n            this.shader = this.shaderCache.getShaderProgram(fragmentHash, vertexHash);\n        }\n\n        if (this.shader === undefined)\n        {\n            return;\n        }\n\n        this.webGl.context.useProgram(this.shader.program);\n\n        if (state.renderingParameters.usePunctual)\n        {\n            this.applyLights(state.gltf);\n        }\n\n        // update model dependant matrices once per node\n        this.shader.updateUniform(\"u_ViewProjectionMatrix\", viewProjectionMatrix);\n        this.shader.updateUniform(\"u_ModelMatrix\", node.worldTransform);\n        this.shader.updateUniform(\"u_NormalMatrix\", node.normalMatrix, false);\n        this.shader.updateUniform(\"u_Exposure\", state.renderingParameters.exposure, false);\n        this.shader.updateUniform(\"u_Camera\", this.currentCameraPosition, false);\n\n        this.updateAnimationUniforms(state, node, primitive);\n\n        if (mat4.determinant(node.worldTransform) < 0.0)\n        {\n            this.webGl.context.frontFace(GL.CW);\n        }\n        else\n        {\n            this.webGl.context.frontFace(GL.CCW);\n        }\n\n        if (material.doubleSided)\n        {\n            this.webGl.context.disable(GL.CULL_FACE);\n        }\n        else\n        {\n            this.webGl.context.enable(GL.CULL_FACE);\n        }\n\n        if (material.alphaMode === 'BLEND')\n        {\n            this.webGl.context.enable(GL.BLEND);\n            this.webGl.context.blendFuncSeparate(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\n            this.webGl.context.blendEquation(GL.FUNC_ADD);\n        }\n        else\n        {\n            this.webGl.context.disable(GL.BLEND);\n        }\n\n        const drawIndexed = primitive.indices !== undefined;\n        if (drawIndexed)\n        {\n            if (!this.webGl.setIndices(state.gltf, primitive.indices))\n            {\n                return;\n            }\n        }\n\n        let vertexCount = 0;\n        for (const attribute of primitive.glAttributes)\n        {\n            const gltfAccessor = state.gltf.accessors[attribute.accessor];\n            vertexCount = gltfAccessor.count;\n\n            const location = this.shader.getAttributeLocation(attribute.name);\n            if (location < 0)\n            {\n                continue; // only skip this attribute\n            }\n            if (!this.webGl.enableAttribute(state.gltf, location, gltfAccessor))\n            {\n                return; // skip this primitive\n            }\n        }\n\n        for (let [uniform, val] of material.getProperties().entries())\n        {\n            this.shader.updateUniform(uniform, val);\n        }\n\n        for (let i = 0; i < material.textures.length; ++i)\n        {\n            let info = material.textures[i];\n            const location = this.shader.getUniformLocation(info.samplerName);\n            if (location < 0)\n            {\n                continue; // only skip this texture\n            }\n            if (!this.webGl.setTexture(location, state.gltf, info, i)) // binds texture and sampler\n            {\n                return; // skip this material\n            }\n        }\n\n        let textureCount = material.textures.length;\n        if (state.renderingParameters.useIBL && state.environment !== undefined)\n        {\n            textureCount = this.applyEnvironmentMap(state, textureCount);\n        }\n\n        if (state.renderingParameters.usePunctual)\n        {\n            this.webGl.setTexture(this.shader.getUniformLocation(\"u_SheenELUT\"), state.gltf, state.environment.sheenELUT, textureCount++);\n        }\n\n        if(transmissionSampleTexture !== undefined)\n        {\n            this.webGl.context.activeTexture(GL.TEXTURE0 + textureCount);\n            this.webGl.context.bindTexture(this.webGl.context.TEXTURE_2D, this.opaqueRenderTexture);\n            this.webGl.context.uniform1i(this.shader.getUniformLocation(\"u_TransmissionFramebufferSampler\"), textureCount);\n            textureCount++;\n\n            this.webGl.context.uniform2i(this.shader.getUniformLocation(\"u_ScreenSize\"), this.currentWidth, this.currentHeight);\n            this.webGl.context.uniform2i(this.shader.getUniformLocation(\"u_TransmissionFramebufferSize\"), this.opaqueFramebufferWidth, this.opaqueFramebufferHeight);\n        }\n\n        if (drawIndexed)\n        {\n            const indexAccessor = state.gltf.accessors[primitive.indices];\n            this.webGl.context.drawElements(primitive.mode, indexAccessor.count, indexAccessor.componentType, 0);\n        }\n        else\n        {\n            this.webGl.context.drawArrays(primitive.mode, 0, vertexCount);\n        }\n\n        for (const attribute of primitive.glAttributes)\n        {\n            const location = this.shader.getAttributeLocation(attribute.name);\n            if (location < 0)\n            {\n                continue; // skip this attribute\n            }\n            this.webGl.context.disableVertexAttribArray(location);\n        }\n    }\n\n    // returns all lights that are relevant for rendering or the default light if there are none\n    getVisibleLights(gltf, scene)\n    {\n        let lights = [];\n        for (let light of gltf.lights)\n        {\n            if (light.node !== undefined)\n            {\n                if (scene.includesNode(gltf, light.node))\n                {\n                    lights.push(light);\n                }\n            }\n        }\n        return lights;\n    }\n\n    updateSkin(state, node)\n    {\n        if (state.renderingParameters.skinning && state.gltf.skins !== undefined)\n        {\n            const skin = state.gltf.skins[node.skin];\n            skin.computeJoints(state.gltf, node);\n        }\n    }\n\n    pushVertParameterDefines(vertDefines, parameters, gltf, node, primitive)\n    {\n        // skinning\n        if (parameters.skinning && node.skin !== undefined && primitive.hasWeights && primitive.hasJoints)\n        {\n            const skin = gltf.skins[node.skin];\n\n            vertDefines.push(\"USE_SKINNING 1\");\n            vertDefines.push(\"JOINT_COUNT \" + skin.jointMatrices.length);\n        }\n\n        // morphing\n        if (parameters.morphing && node.mesh !== undefined && primitive.targets.length > 0)\n        {\n            const mesh = gltf.meshes[node.mesh];\n            if (mesh.weights !== undefined && mesh.weights.length > 0)\n            {\n                vertDefines.push(\"USE_MORPHING 1\");\n                vertDefines.push(\"WEIGHT_COUNT \" + Math.min(mesh.weights.length, 8));\n            }\n        }\n    }\n\n    updateAnimationUniforms(state, node, primitive)\n    {\n        if (state.renderingParameters.skinning && node.skin !== undefined && primitive.hasWeights && primitive.hasJoints)\n        {\n            const skin = state.gltf.skins[node.skin];\n\n            this.shader.updateUniform(\"u_jointMatrix\", skin.jointMatrices);\n            if(primitive.hasNormals)\n            {\n                this.shader.updateUniform(\"u_jointNormalMatrix\", skin.jointNormalMatrices);\n            }\n        }\n\n        if (state.renderingParameters.morphing && node.mesh !== undefined && primitive.targets.length > 0)\n        {\n            const mesh = state.gltf.meshes[node.mesh];\n            if (mesh.weights !== undefined && mesh.weights.length > 0)\n            {\n                this.shader.updateUniformArray(\"u_morphWeights\", mesh.weights);\n            }\n        }\n    }\n\n    pushFragParameterDefines(fragDefines, state)\n    {\n        if (state.renderingParameters.usePunctual)\n        {\n            fragDefines.push(\"USE_PUNCTUAL 1\");\n            fragDefines.push(\"LIGHT_COUNT \" + this.visibleLights.length);\n        }\n\n        if (state.renderingParameters.useIBL && state.environment)\n        {\n            fragDefines.push(\"USE_IBL 1\");\n        }\n\n        switch (state.renderingParameters.toneMap)\n        {\n        case (ToneMaps.ACES_FAST):\n            fragDefines.push(\"TONEMAP_ACES_FAST 1\");\n            break;\n        case (ToneMaps.ACES):\n            fragDefines.push(\"TONEMAP_ACES 1\");\n            break;\n        case (ToneMaps.NONE):\n        default:\n            break;\n        }\n\n        if (state.renderingParameters.debugOutput !== DebugOutput.NONE)\n        {\n            fragDefines.push(\"DEBUG_OUTPUT 1\");\n        }\n\n        switch (state.renderingParameters.debugOutput)\n        {\n        case (DebugOutput.METALLIC):\n            fragDefines.push(\"DEBUG_METALLIC 1\");\n            break;\n        case (DebugOutput.ROUGHNESS):\n            fragDefines.push(\"DEBUG_ROUGHNESS 1\");\n            break;\n        case (DebugOutput.NORMAL):\n            fragDefines.push(\"DEBUG_NORMAL 1\");\n            break;\n        case (DebugOutput.WORLDSPACENORMAL):\n            fragDefines.push(\"DEBUG_WORLDSPACE_NORMAL 1\");\n            break;\n        case (DebugOutput.GEOMETRYNORMAL):\n            fragDefines.push(\"DEBUG_GEOMETRY_NORMAL 1\");\n            break;\n        case (DebugOutput.TANGENT):\n            fragDefines.push(\"DEBUG_TANGENT 1\");\n            break;\n        case (DebugOutput.BITANGENT):\n            fragDefines.push(\"DEBUG_BITANGENT 1\");\n            break;\n        case (DebugOutput.BASECOLOR):\n            fragDefines.push(\"DEBUG_BASECOLOR 1\");\n            break;\n        case (DebugOutput.OCCLUSION):\n            fragDefines.push(\"DEBUG_OCCLUSION 1\");\n            break;\n        case (DebugOutput.EMISSIVE):\n            fragDefines.push(\"DEBUG_FEMISSIVE 1\");\n            break;\n        case (DebugOutput.SPECULAR):\n            fragDefines.push(\"DEBUG_FSPECULAR 1\");\n            break;\n        case (DebugOutput.DIFFUSE):\n            fragDefines.push(\"DEBUG_FDIFFUSE 1\");\n            break;\n        case (DebugOutput.THICKNESS):\n            fragDefines.push(\"DEBUG_THICKNESS 1\");\n            break;\n        case (DebugOutput.CLEARCOAT):\n            fragDefines.push(\"DEBUG_FCLEARCOAT 1\");\n            break;\n        case (DebugOutput.SHEEN):\n            fragDefines.push(\"DEBUG_FSHEEN 1\");\n            break;\n        case (DebugOutput.SUBSURFACE):\n            fragDefines.push(\"DEBUG_FSUBSURFACE 1\");\n            break;\n        case (DebugOutput.TRANSMISSION):\n            fragDefines.push(\"DEBUG_FTRANSMISSION 1\");\n            break;\n        case (DebugOutput.F0):\n            fragDefines.push(\"DEBUG_F0 1\");\n            break;\n        case (DebugOutput.ALPHA):\n            fragDefines.push(\"DEBUG_ALPHA 1\");\n            break;\n        }\n    }\n\n    applyLights(gltf)\n    {\n        let uniformLights = [];\n        for (let light of this.visibleLights)\n        {\n            uniformLights.push(light.toUniform(gltf));\n        }\n\n        if (uniformLights.length > 0)\n        {\n            this.shader.updateUniform(\"u_Lights\", uniformLights);\n        }\n    }\n\n    applyEnvironmentMap(state, texSlotOffset)\n    {\n        const environment = state.environment;\n        this.webGl.setTexture(this.shader.getUniformLocation(\"u_LambertianEnvSampler\"), environment, environment.diffuseEnvMap, texSlotOffset++);\n\n        this.webGl.setTexture(this.shader.getUniformLocation(\"u_GGXEnvSampler\"), environment, environment.specularEnvMap, texSlotOffset++);\n        this.webGl.setTexture(this.shader.getUniformLocation(\"u_GGXLUT\"), environment, environment.lut, texSlotOffset++);\n\n        this.webGl.setTexture(this.shader.getUniformLocation(\"u_CharlieEnvSampler\"), environment, environment.sheenEnvMap, texSlotOffset++);\n        this.webGl.setTexture(this.shader.getUniformLocation(\"u_CharlieLUT\"), environment, environment.sheenLUT, texSlotOffset++);\n\n        this.shader.updateUniform(\"u_MipCount\", environment.mipCount);\n\n        let rotMatrix4 = mat4.create();\n        mat4.rotateY(rotMatrix4, rotMatrix4,  state.renderingParameters.environmentRotation / 180.0 * Math.PI);\n        let rotMatrix3 = mat3.create();\n        mat3.fromMat4(rotMatrix3, rotMatrix4);\n        this.shader.updateUniform(\"u_envRotation\", rotMatrix3);\n\n        return texSlotOffset;\n    }\n\n    destroy()\n    {\n        this.shaderCache.destroy();\n    }\n}\n\nexport { gltfRenderer };\n","import { GltfState } from '../GltfState/gltf_state.js';\nimport { gltfRenderer } from '../Renderer/renderer.js';\nimport { GL } from '../Renderer/webgl.js';\n\nclass GltfView\n{\n    constructor(context, ui)\n    {\n        this.ui = ui;\n        this.context = context;\n        this.renderer = new gltfRenderer(this.context);\n    }\n\n    createState()\n    {\n        return new GltfState();\n    }\n\n    updateCanvas(canvas)\n    {\n        if(this.ui !== undefined)\n        {\n            canvas.width = window.innerWidth - this.ui.getBoundingClientRect().width;\n        }\n        else\n        {\n            canvas.width = canvas.clientWidth;\n        }\n        canvas.height = canvas.clientHeight;\n    }\n    \n    updateViewport(width, height)\n    {\n        this.renderer.resize(width, height);\n    }\n    \n    renderFrame(state)\n    {\n\n        this.renderer.clearFrame(state.renderingParameters.clearColor);\n\n        if(state.gltf === undefined)\n        {\n            return;\n        }\n\n        const scene = state.gltf.scenes[state.sceneIndex];\n\n        scene.applyTransformHierarchy(state.gltf);\n\n        this.renderer.drawScene(state, scene);\n    }\n    animate(state)\n    {\n        if(state.gltf === undefined)\n        {\n            return;\n        }\n\n        if(state.gltf.animations !== undefined && state.animationIndices !== undefined && !state.animationTimer.paused)\n        {\n            const t = state.animationTimer.elapsedSec();\n\n            const animations = state.animationIndices.map(index => {\n                return state.gltf.animations[index];\n            }).filter(animation => animation !== undefined);\n\n            for(const animation of animations)\n            {\n                animation.advance(state.gltf, t);\n            }\n        }\n    }\n\n    // gatherStatistics collects information about the GltfState such as the number of rendererd meshes or triangles\n    gatherStatistics(state)\n    {\n        if(state.gltf === undefined)\n        {\n            return;\n        }\n\n        // gather information from the active scene\n        const scene = state.gltf.scenes[state.sceneIndex];\n        const nodes = scene.gatherNodes(state.gltf);\n        const activeMeshes = nodes.filter(node => node.mesh !== undefined).map(node => state.gltf.meshes[node.mesh]);\n        const activePrimitives = activeMeshes\n            .reduce((acc, mesh) => acc.concat(mesh.primitives), [])\n            .filter(primitive => primitive.material !== undefined);\n        const activeMaterials = [... new Set(activePrimitives.map(primitive => state.gltf.materials[primitive.material]))];\n        const opaqueMaterials = activeMaterials.filter(material => material.alphaMode !== \"BLEND\");\n        const transparentMaterials = activeMaterials.filter(material => material.alphaMode === \"BLEND\");\n        const faceCount = activePrimitives\n            .map(primitive => {\n                const verticesCount = state.gltf.accessors[primitive.indices].count;\n                if (verticesCount === 0)\n                {\n                    return 0;\n                }\n\n                // convert vertex count to point, line or triangle count\n                switch (primitive.mode) {\n                case GL.POINTS:\n                    return verticesCount;\n                case GL.LINES:\n                    return verticesCount / 2;\n                case GL.LINE_LOOP:\n                    return verticesCount;\n                case GL.LINE_STRIP:\n                    return verticesCount - 1;\n                case GL.TRIANGLES:\n                    return verticesCount / 3;\n                case GL.TRIANGLE_STRIP:\n                case GL.TRIANGLE_FAN:\n                    return verticesCount - 2;\n                }\n            })\n            .reduce((acc, faceCount) => acc += faceCount);\n\n        // assemble statistics object\n        return {\n            meshCount: activeMeshes.length,\n            faceCount: faceCount,\n            opaqueMaterialsCount: opaqueMaterials.length,\n            transparentMaterialsCount: transparentMaterials.length\n        };\n    }\n\n    async startRendering(state, canvas)\n    {\n        const update = () =>\n        {\n            this.animate(state);\n            this.updateCanvas(canvas);\n            this.updateViewport(canvas.width, canvas.height);\n            this.renderFrame(state);\n            window.requestAnimationFrame(update);\n        };\n\n        // After this start executing render loop.\n        window.requestAnimationFrame(update);\n    }\n}\n\nexport { GltfView };\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","module.exports = require('./lib/axios');","import { GL } from '../Renderer/webgl.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfAccessor extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.bufferView = undefined;\n        this.byteOffset = 0;\n        this.componentType = undefined;\n        this.normalized = false;\n        this.count = undefined;\n        this.type = undefined;\n        this.max = undefined;\n        this.min = undefined;\n        this.sparse = undefined;\n        this.name = undefined;\n\n        // non gltf\n        this.glBuffer = undefined;\n        this.typedView = undefined;\n        this.filteredView = undefined;\n    }\n\n    getTypedView(gltf)\n    {\n        if (this.typedView !== undefined)\n        {\n            return this.typedView;\n        }\n\n        if (this.bufferView !== undefined)\n        {\n            const bufferView = gltf.bufferViews[this.bufferView];\n            const buffer = gltf.buffers[bufferView.buffer];\n            const byteOffset = this.byteOffset + bufferView.byteOffset;\n\n            const componentSize = this.getComponentSize(this.componentType);\n            let componentCount = this.getComponentCount(this.type);\n\n            if(bufferView.byteStride !== 0)\n            {\n                componentCount = bufferView.byteStride / componentSize;\n            }\n\n            let arrayLength = this.count * componentCount;\n\n            if (arrayLength * componentSize > buffer.buffer.byteLength - byteOffset)\n            {\n                arrayLength = (buffer.buffer.byteLength - byteOffset) / componentSize;\n                console.warn(\"Count in accessor '\" + (this.name ? this.name : \"\") + \"' is too large.\");\n            }\n\n            switch (this.componentType)\n            {\n            case GL.BYTE:\n                this.typedView = new Int8Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            case GL.UNSIGNED_BYTE:\n                this.typedView = new Uint8Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            case GL.SHORT:\n                this.typedView = new Int16Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            case GL.UNSIGNED_SHORT:\n                this.typedView = new Uint16Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            case GL.UNSIGNED_INT:\n                this.typedView = new Uint32Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            case GL.FLOAT:\n                this.typedView = new Float32Array(buffer.buffer, byteOffset, arrayLength);\n                break;\n            }\n        }\n\n        if (this.typedView === undefined)\n        {\n            console.warn(\"Failed to convert buffer view to typed view!: \" + this.bufferView);\n        }\n        else if (this.sparse !== undefined)\n        {\n            this.applySparse(gltf, this.typedView);\n        }\n\n        return this.typedView;\n    }\n\n    getDeinterlacedView(gltf)\n    {\n        if (this.filteredView !== undefined)\n        {\n            return this.filteredView;\n        }\n\n        if (this.bufferView !== undefined)\n        {\n            const bufferView = gltf.bufferViews[this.bufferView];\n            const buffer = gltf.buffers[bufferView.buffer];\n            const byteOffset = this.byteOffset + bufferView.byteOffset;\n\n            const componentSize = this.getComponentSize(this.componentType);\n            const componentCount = this.getComponentCount(this.type);\n            const arrayLength = this.count * componentCount;\n\n            let stride = bufferView.byteStride !== 0 ? bufferView.byteStride : componentCount * componentSize;\n            let dv = new DataView(buffer.buffer, byteOffset, this.count * stride);\n\n            let func = 'getFloat32';\n            switch (this.componentType)\n            {\n            case GL.BYTE:\n                this.filteredView = new Int8Array(arrayLength);\n                func = 'getInt8';\n                break;\n            case GL.UNSIGNED_BYTE:\n                this.filteredView = new Uint8Array(arrayLength);\n                func = 'getUint8';\n                break;\n            case GL.SHORT:\n                this.filteredView = new Int16Array(arrayLength);\n                func = 'getInt16';\n                break;\n            case GL.UNSIGNED_SHORT:\n                this.filteredView = new Uint16Array(arrayLength);\n                func = 'getUint16';\n                break;\n            case GL.UNSIGNED_INT:\n                this.filteredView = new Uint32Array(arrayLength);\n                func = 'getUint32';\n                break;\n            case GL.FLOAT:\n                this.filteredView = new Float32Array(arrayLength);\n                func = 'getFloat32';\n                break;\n            }\n\n            for(let i = 0; i < arrayLength; ++i)\n            {\n                let offset = Math.floor(i/componentCount) * stride + (i % componentCount) * componentSize;\n                this.filteredView[i] = dv[func](offset, true);\n            }\n        }\n\n        if (this.filteredView === undefined)\n        {\n            console.warn(\"Failed to convert buffer view to filtered view!: \" + this.bufferView);\n        }\n        else if (this.sparse !== undefined)\n        {\n            this.applySparse(gltf, this.filteredView);\n        }\n\n        return this.filteredView;\n    }\n\n    applySparse(gltf, view)\n    {\n        // Gather indices.\n\n        const indicesBufferView = gltf.bufferViews[this.sparse.indices.bufferView];\n        const indicesBuffer = gltf.buffers[indicesBufferView.buffer];\n        const indicesByteOffset = this.sparse.indices.byteOffset + indicesBufferView.byteOffset;\n\n        const indicesComponentSize = this.getComponentSize(this.sparse.indices.componentType);\n        let indicesComponentCount = 1;\n\n        if(indicesBufferView.byteStride !== 0)\n        {\n            indicesComponentCount = indicesBufferView.byteStride / indicesComponentSize;\n        }\n\n        const indicesArrayLength = this.sparse.count * indicesComponentCount;\n\n        let indicesTypedView;\n        switch (this.sparse.indices.componentType)\n        {\n        case GL.UNSIGNED_BYTE:\n            indicesTypedView = new Uint8Array(indicesBuffer.buffer, indicesByteOffset, indicesArrayLength);\n            break;\n        case GL.UNSIGNED_SHORT:\n            indicesTypedView = new Uint16Array(indicesBuffer.buffer, indicesByteOffset, indicesArrayLength);\n            break;\n        case GL.UNSIGNED_INT:\n            indicesTypedView = new Uint32Array(indicesBuffer.buffer, indicesByteOffset, indicesArrayLength);\n            break;\n        }\n\n        // Gather values.\n\n        const valuesBufferView = gltf.bufferViews[this.sparse.values.bufferView];\n        const valuesBuffer = gltf.buffers[valuesBufferView.buffer];\n        const valuesByteOffset = this.sparse.values.byteOffset + valuesBufferView.byteOffset;\n\n        const valuesComponentSize = this.getComponentSize(this.componentType);\n        let valuesComponentCount = this.getComponentCount(this.type);\n\n        if(valuesBufferView.byteStride !== 0)\n        {\n            valuesComponentCount = valuesBufferView.byteStride / valuesComponentSize;\n        }\n\n        const valuesArrayLength = this.sparse.count * valuesComponentCount;\n\n        let valuesTypedView;\n        switch (this.componentType)\n        {\n        case GL.BYTE:\n            valuesTypedView = new Int8Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        case GL.UNSIGNED_BYTE:\n            valuesTypedView = new Uint8Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        case GL.SHORT:\n            valuesTypedView = new Int16Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        case GL.UNSIGNED_SHORT:\n            valuesTypedView = new Uint16Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        case GL.UNSIGNED_INT:\n            valuesTypedView = new Uint32Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        case GL.FLOAT:\n            valuesTypedView = new Float32Array(valuesBuffer.buffer, valuesByteOffset, valuesArrayLength);\n            break;\n        }\n\n        // Overwrite values.\n\n        for(let i = 0; i < this.sparse.count; ++i)\n        {\n            for(let k = 0; k < valuesComponentCount; ++k)\n            {\n                view[indicesTypedView[i] * valuesComponentCount + k] = valuesTypedView[i * valuesComponentCount + k];\n            }\n        }\n    }\n\n    getComponentCount(type)\n    {\n        return CompononentCount.get(type);\n    }\n\n    getComponentSize(componentType)\n    {\n        switch (componentType)\n        {\n        case GL.BYTE:\n        case GL.UNSIGNED_BYTE:\n            return 1;\n        case GL.SHORT:\n        case GL.UNSIGNED_SHORT:\n            return 2;\n        case GL.UNSIGNED_INT:\n        case GL.FLOAT:\n            return 4;\n        default:\n            return 0;\n        }\n    }\n\n    destroy()\n    {\n        if (this.glBuffer !== undefined)\n        {\n            // TODO: this breaks the dependency direction\n            WebGl.context.deleteBuffer(this.glBuffer);\n        }\n\n        this.glBuffer = undefined;\n    }\n}\n\nconst CompononentCount = new Map(\n    [\n        [\"SCALAR\", 1],\n        [\"VEC2\", 2],\n        [\"VEC3\", 3],\n        [\"VEC4\", 4],\n        [\"MAT2\", 4],\n        [\"MAT3\", 9],\n        [\"MAT4\", 16]\n    ]\n);\n\nexport { gltfAccessor };\n","import axios from 'axios';\nimport { getContainingFolder } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfBuffer extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.uri = undefined;\n        this.byteLength = undefined;\n        this.name = undefined;\n\n        // non gltf\n        this.buffer = undefined; // raw data blob\n    }\n\n    load(gltf, additionalFiles = undefined)\n    {\n        if (this.buffer !== undefined)\n        {\n            console.error(\"buffer has already been loaded\");\n            return;\n        }\n\n        const self = this;\n        return new Promise(function(resolve)\n        {\n            if (!self.setBufferFromFiles(additionalFiles, resolve) &&\n                !self.sefBufferFromUri(gltf, resolve))\n            {\n                console.error(\"Was not able to resolve buffer with uri '%s'\", self.uri);\n                resolve();\n            }\n        });\n    }\n\n    sefBufferFromUri(gltf, callback)\n    {\n        if (this.uri === undefined)\n        {\n            return false;\n        }\n\n        const self = this;\n        axios.get(getContainingFolder(gltf.path) + this.uri, { responseType: 'arraybuffer'})\n            .then(function(response)\n            {\n                self.buffer = response.data;\n                callback();\n            });\n        return true;\n    }\n\n    setBufferFromFiles(files, callback)\n    {\n        if (this.uri === undefined || files === undefined)\n        {\n            return false;\n        }\n\n        const foundFile = files.find(function(file)\n        {\n            if (file.name === this.uri || file.fullPath === this.uri)\n            {\n                return true;\n            }\n        }, this);\n\n        if (foundFile === undefined)\n        {\n            return false;\n        }\n\n        const self = this;\n        const reader = new FileReader();\n        reader.onloadend = function(event)\n        {\n            self.buffer = event.target.result;\n            callback();\n        };\n        reader.readAsArrayBuffer(foundFile);\n\n        return true;\n    }\n}\n\nexport { gltfBuffer };\n","import { GltfObject } from './gltf_object.js';\n\nclass gltfBufferView extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.buffer = undefined;\n        this.byteOffset = 0;\n        this.byteLength = undefined;\n        this.byteStride = 0;\n        this.target = undefined;\n        this.name = undefined;\n    }\n}\n\nexport { gltfBufferView };\n","import { mat4, vec3, quat } from 'gl-matrix';\nimport { jsToGl, UniformStruct } from './utils.js';\nimport { fromKeys } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfLight extends GltfObject\n{\n    constructor(\n        type = \"directional\",\n        color = [1, 1, 1],\n        intensity = 1,\n        innerConeAngle = 0,\n        outerConeAngle = Math.PI / 4,\n        range = -1,\n        name = undefined,\n        node = undefined)\n    {\n        super();\n        this.type = type;\n        this.color = color;\n        this.intensity = intensity;\n        this.innerConeAngle = innerConeAngle;\n        this.outerConeAngle = outerConeAngle;\n        this.range = range;\n        this.name = name;\n        // non gltf\n        this.node = node;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        super.initGl(gltf, webGlContext);\n\n        for (let i = 0; i < gltf.nodes.length; i++)\n        {\n            const nodeExtensions = gltf.nodes[i].extensions;\n            if (nodeExtensions === undefined)\n            {\n                continue;\n            }\n\n            const lightsExtension = nodeExtensions.KHR_lights_punctual;\n            if (lightsExtension === undefined)\n            {\n                continue;\n            }\n\n            const lightIndex = lightsExtension.light;\n            if (gltf.lights[lightIndex] === this)\n            {\n                this.node = i;\n                break;\n            }\n        }\n    }\n\n    fromJson(jsonLight)\n    {\n        super.fromJson(jsonLight);\n\n        if(jsonLight.spot !== undefined)\n        {\n            fromKeys(this, jsonLight.spot);\n        }\n    }\n\n    toUniform(gltf)\n    {\n        const uLight = new UniformLight();\n\n        if (this.node !== undefined)\n        {\n            const matrix = gltf.nodes[this.node].worldTransform;\n\n            var scale = vec3.fromValues(1, 1, 1);\n            mat4.getScaling(scale, matrix);\n\n            // To extract a correct rotation, the scaling component must be eliminated.\n            const mn = mat4.create();\n            for(const col of [0, 1, 2])\n            {\n                mn[col] = matrix[col] / scale[0];\n                mn[col + 4] = matrix[col + 4] / scale[1];\n                mn[col + 8] = matrix[col + 8] / scale[2];\n            }\n            var rotation = quat.create();\n            mat4.getRotation(rotation, mn);\n            quat.normalize(rotation, rotation);\n\n            const alongNegativeZ = vec3.fromValues(0, 0, -1);\n            vec3.transformQuat(uLight.direction, alongNegativeZ, rotation);\n\n            var translation = vec3.fromValues(0, 0, 0);\n            mat4.getTranslation(translation, matrix);\n            uLight.position = translation;\n        }\n\n        uLight.range = this.range;\n        uLight.color = jsToGl(this.color);\n        uLight.intensity = this.intensity;\n\n        uLight.innerConeCos = Math.cos(this.innerConeAngle);\n        uLight.outerConeCos = Math.cos(this.outerConeAngle);\n\n        switch(this.type)\n        {\n        case \"spot\":\n            uLight.type = Type_Spot;\n            break;\n        case \"point\":\n            uLight.type = Type_Point;\n            break;\n        case \"directional\":\n        default:\n            uLight.type = Type_Directional;\n            break;\n        }\n\n        return uLight;\n    }\n}\n\nconst Type_Directional = 0;\nconst Type_Point = 1;\nconst Type_Spot = 2;\n\nclass UniformLight extends UniformStruct\n{\n    constructor()\n    {\n        super();\n\n        const defaultDirection = vec3.fromValues(-0.7399, -0.6428, -0.1983);\n        this.direction = defaultDirection;\n        this.range = -1;\n\n        this.color = jsToGl([1, 1, 1]);\n        this.intensity = 1;\n\n        this.position = jsToGl([0, 0, 0]);\n        this.innerConeCos = 0.0;\n\n        this.outerConeCos = Math.PI / 4;\n        this.type = Type_Directional;\n        this.padding1 = 0.0;\n        this.padding2 = 0.0;\n    }\n}\n\nexport { gltfLight };\n","import { jsToGl } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\nimport { GL } from \"../Renderer/webgl\";\n\n// https://github.com/KhronosGroup/glTF/blob/khr_ktx2_ibl/extensions/2.0/Khronos/KHR_lights_image_based/schema/imageBasedLight.schema.json\n\nclass ImageBasedLight extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.rotation = jsToGl([0, 0, 0, 1]);\n        this.brightnessFactor = 1;\n        this.brightnessOffset = 0;\n        this.specularEnvironmentTexture = undefined;\n        this.diffuseEnvironmentTexture = undefined;\n        this.sheenEnvironmentTexture = undefined;\n\n        // non-gltf\n        this.levelCount = 1;\n    }\n\n    fromJson(jsonIBL)\n    {\n        super.fromJson(jsonIBL);\n\n        if(jsonIBL.extensions !== undefined)\n        {\n            this.fromJsonExtensions(jsonIBL.extensions);\n        }\n    }\n\n    fromJsonExtensions(extensions)\n    {\n        if (extensions.KHR_materials_sheen !== undefined)\n        {\n            this.sheenEnvironmentTexture = extensions.KHR_materials_sheen.sheenEnvironmentTexture;\n        }\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        if (this.diffuseEnvironmentTexture !== undefined)\n        {\n            const textureObject = gltf.textures[this.diffuseEnvironmentTexture];\n            textureObject.type = GL.TEXTURE_CUBE_MAP;\n        }\n        if (this.specularEnvironmentTexture !== undefined)\n        {\n            const textureObject = gltf.textures[this.specularEnvironmentTexture];\n            textureObject.type = GL.TEXTURE_CUBE_MAP;\n\n            const imageObject = gltf.images[textureObject.source];\n            this.levelCount = imageObject.image.levelCount;\n        }\n        if(this.sheenEnvironmentTexture !== undefined)\n        {\n            const textureObject = gltf.textures[this.sheenEnvironmentTexture];\n            textureObject.type = GL.TEXTURE_CUBE_MAP;\n\n            const imageObject = gltf.images[textureObject.source];\n            if (this.levelCount !== imageObject.image.levelCount)\n            {\n                console.error(\"Specular and sheen do not have same level count\");\n            }\n        }\n    }\n}\n\nexport { ImageBasedLight };\n","import { fromKeys, initGlForMembers } from './utils.js';\nimport { GL } from '../Renderer/webgl.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfTexture extends GltfObject\n{\n    constructor(sampler = undefined, source = undefined, type = GL.TEXTURE_2D, texture = undefined)\n    {\n        super();\n        this.sampler = sampler; // index to gltfSampler, default sampler ?\n        this.source = source; // index to gltfImage\n\n        // non gltf\n        this.glTexture = texture;\n        this.type = type;\n        this.initialized = false;\n        this.mipLevelCount = 0;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        if (this.sampler === undefined)\n        {\n            this.sampler = gltf.samplers.length - 1;\n        }\n\n        initGlForMembers(this, gltf, webGlContext);\n    }\n\n    fromJson(jsonTexture)\n    {\n        super.fromJson(jsonTexture);\n        if (jsonTexture.extensions !== undefined &&\n            jsonTexture.extensions.KHR_texture_basisu !== undefined &&\n            jsonTexture.extensions.KHR_texture_basisu.source !== undefined)\n        {\n            this.source = jsonTexture.extensions.KHR_texture_basisu.source;\n        }\n    }\n\n    destroy()\n    {\n        if (this.glTexture !== undefined)\n        {\n            // TODO: this breaks the dependency direction\n            WebGl.context.deleteTexture(this.glTexture);\n        }\n\n        this.glTexture = undefined;\n    }\n}\n\nclass gltfTextureInfo\n{\n    constructor(index = undefined, texCoord = 0, linear = true, samplerName = \"\", generateMips = true) // linear by default\n    {\n        this.index = index; // reference to gltfTexture\n        this.texCoord = texCoord; // which UV set to use\n        this.linear = linear;\n        this.samplerName = samplerName;\n        this.strength = 1.0; // occlusion\n        this.scale = 1.0; // normal\n        this.generateMips = generateMips;\n\n        this.extensions = undefined;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        initGlForMembers(this, gltf, webGlContext);\n    }\n\n    fromJson(jsonTextureInfo)\n    {\n        fromKeys(this, jsonTextureInfo);\n    }\n}\n\nexport { gltfTexture, gltfTextureInfo };\n","import { mat3, vec3, vec4 } from 'gl-matrix';\nimport { gltfTextureInfo } from './texture.js';\nimport { jsToGl, initGlForMembers } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfMaterial extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.name = undefined;\n        this.pbrMetallicRoughness = undefined;\n        this.normalTexture = undefined;\n        this.occlusionTexture = undefined;\n        this.emissiveTexture = undefined;\n        this.emissiveFactor = vec3.fromValues(0, 0, 0);\n        this.alphaMode = \"OPAQUE\";\n        this.alphaCutoff = 0.5;\n        this.doubleSided = false;\n\n        // non gltf properties\n        this.type = \"unlit\";\n        this.textures = [];\n        this.properties = new Map();\n        this.defines = [];\n    }\n\n    static createDefault()\n    {\n        const defaultMaterial = new gltfMaterial();\n        defaultMaterial.type = \"MR\";\n        defaultMaterial.name = \"Default Material\";\n        defaultMaterial.defines.push(\"MATERIAL_METALLICROUGHNESS 1\");\n        const baseColorFactor = vec4.fromValues(1, 1, 1, 1);\n        const metallicFactor = 1;\n        const roughnessFactor = 1;\n        defaultMaterial.properties.set(\"u_BaseColorFactor\", baseColorFactor);\n        defaultMaterial.properties.set(\"u_MetallicFactor\", metallicFactor);\n        defaultMaterial.properties.set(\"u_RoughnessFactor\", roughnessFactor);\n\n        return defaultMaterial;\n    }\n\n    getShaderIdentifier()\n    {\n        switch (this.type)\n        {\n        default:\n        case \"SG\": // fall through till we sparate shaders\n        case \"MR\": return \"pbr.frag\";\n            //case \"SG\": return \"specular-glossiness.frag\" ;\n        }\n    }\n\n    getDefines()\n    {\n        return this.defines;\n    }\n\n    getProperties()\n    {\n        return this.properties;\n    }\n\n    getTextures()\n    {\n        return this.textures;\n    }\n\n    parseTextureInfoExtensions(textureInfo, textureKey)\n    {\n        if(textureInfo.extensions === undefined)\n        {\n            return;\n        }\n\n        if(textureInfo.extensions.KHR_texture_transform !== undefined)\n        {\n            const uvTransform = textureInfo.extensions.KHR_texture_transform;\n\n            // override uvset\n            if(uvTransform.texCoord !== undefined)\n            {\n                textureInfo.texCoord = uvTransform.texCoord;\n            }\n\n            let rotation = mat3.create();\n            let scale = mat3.create();\n            let translation = mat3.create();\n\n            if(uvTransform.rotation !== undefined)\n            {\n                const s =  Math.sin(uvTransform.rotation);\n                const c =  Math.cos(uvTransform.rotation);\n\n                rotation = jsToGl([\n                    c, s, 0.0,\n                    -s, c, 0.0,\n                    0.0, 0.0, 1.0]);\n            }\n\n            if(uvTransform.scale !== undefined)\n            {\n                scale = jsToGl([uvTransform.scale[0], 0, 0, 0, uvTransform.scale[1], 0, 0, 0, 1]);\n            }\n\n            if(uvTransform.offset !== undefined)\n            {\n                translation = jsToGl([1, 0, uvTransform.offset[0], 0, 1, uvTransform.offset[1], 0, 0, 1]);\n            }\n\n            let uvMatrix = mat3.create();\n            mat3.multiply(uvMatrix, rotation, scale);\n            mat3.multiply(uvMatrix, uvMatrix, translation);\n\n            this.defines.push(\"HAS_\" + textureKey.toUpperCase() + \"_UV_TRANSFORM 1\");\n            this.properties.set(\"u_\" + textureKey + \"UVTransform\", uvMatrix);\n        }\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        if (this.normalTexture !== undefined)\n        {\n            this.normalTexture.samplerName = \"u_NormalSampler\";\n            this.parseTextureInfoExtensions(this.normalTexture, \"Normal\");\n            this.textures.push(this.normalTexture);\n            this.defines.push(\"HAS_NORMAL_MAP 1\");\n            this.properties.set(\"u_NormalScale\", this.normalTexture.scale);\n            this.properties.set(\"u_NormalUVSet\", this.normalTexture.texCoord);\n        }\n\n        if (this.occlusionTexture !== undefined)\n        {\n            this.occlusionTexture.samplerName = \"u_OcclusionSampler\";\n            this.parseTextureInfoExtensions(this.occlusionTexture, \"Occlusion\");\n            this.textures.push(this.occlusionTexture);\n            this.defines.push(\"HAS_OCCLUSION_MAP 1\");\n            this.properties.set(\"u_OcclusionStrength\", this.occlusionTexture.strength);\n            this.properties.set(\"u_OcclusionUVSet\", this.occlusionTexture.texCoord);\n        }\n\n        this.properties.set(\"u_EmissiveFactor\", this.emissiveFactor);\n        if (this.emissiveTexture !== undefined)\n        {\n            this.emissiveTexture.samplerName = \"u_EmissiveSampler\";\n            this.parseTextureInfoExtensions(this.emissiveTexture, \"Emissive\");\n            this.textures.push(this.emissiveTexture);\n            this.defines.push(\"HAS_EMISSIVE_MAP 1\");\n            this.properties.set(\"u_EmissiveUVSet\", this.emissiveTexture.texCoord);\n        }\n\n        if (this.baseColorTexture !== undefined)\n        {\n            this.baseColorTexture.samplerName = \"u_BaseColorSampler\";\n            this.parseTextureInfoExtensions(this.baseColorTexture, \"BaseColor\");\n            this.textures.push(this.baseColorTexture);\n            this.defines.push(\"HAS_BASE_COLOR_MAP 1\");\n            this.properties.set(\"u_BaseColorUVSet\", this.baseColorTexture.texCoord);\n        }\n\n        if (this.metallicRoughnessTexture !== undefined)\n        {\n            this.metallicRoughnessTexture.samplerName = \"u_MetallicRoughnessSampler\";\n            this.parseTextureInfoExtensions(this.metallicRoughnessTexture, \"MetallicRoughness\");\n            this.textures.push(this.metallicRoughnessTexture);\n            this.defines.push(\"HAS_METALLIC_ROUGHNESS_MAP 1\");\n            this.properties.set(\"u_MetallicRoughnessUVSet\", this.metallicRoughnessTexture.texCoord);\n        }\n\n        if (this.diffuseTexture !== undefined)\n        {\n            this.diffuseTexture.samplerName = \"u_DiffuseSampler\";\n            this.parseTextureInfoExtensions(this.diffuseTexture, \"Diffuse\");\n            this.textures.push(this.diffuseTexture);\n            this.defines.push(\"HAS_DIFFUSE_MAP 1\");\n            this.properties.set(\"u_DiffuseUVSet\", this.diffuseTexture.texCoord);\n        }\n\n        if (this.specularGlossinessTexture !== undefined)\n        {\n            this.specularGlossinessTexture.samplerName = \"u_SpecularGlossinessSampler\";\n            this.parseTextureInfoExtensions(this.specularGlossinessTexture, \"SpecularGlossiness\");\n            this.textures.push(this.specularGlossinessTexture);\n            this.defines.push(\"HAS_SPECULAR_GLOSSINESS_MAP 1\");\n            this.properties.set(\"u_SpecularGlossinessUVSet\", this.specularGlossinessTexture.texCoord);\n        }\n\n        if(this.alphaMode === 'MASK') // only set cutoff value for mask material\n        {\n            this.defines.push(\"ALPHAMODE_MASK 1\");\n            this.properties.set(\"u_AlphaCutoff\", this.alphaCutoff);\n        }\n        else if (this.alphaMode === 'OPAQUE')\n        {\n            this.defines.push(\"ALPHAMODE_OPAQUE 1\");\n        }\n\n        if (this.pbrMetallicRoughness !== undefined && this.type !== \"SG\")\n        {\n            this.defines.push(\"MATERIAL_METALLICROUGHNESS 1\");\n\n            let baseColorFactor = vec4.fromValues(1, 1, 1, 1);\n            let metallicFactor = 1;\n            let roughnessFactor = 1;\n\n            if (this.pbrMetallicRoughness.baseColorFactor !== undefined)\n            {\n                baseColorFactor = jsToGl(this.pbrMetallicRoughness.baseColorFactor);\n            }\n\n            if (this.pbrMetallicRoughness.metallicFactor !== undefined)\n            {\n                metallicFactor = this.pbrMetallicRoughness.metallicFactor;\n            }\n\n            if (this.pbrMetallicRoughness.roughnessFactor !== undefined)\n            {\n                roughnessFactor = this.pbrMetallicRoughness.roughnessFactor;\n            }\n\n            this.properties.set(\"u_BaseColorFactor\", baseColorFactor);\n            this.properties.set(\"u_MetallicFactor\", metallicFactor);\n            this.properties.set(\"u_RoughnessFactor\", roughnessFactor);\n        }\n\n        if (this.extensions !== undefined)\n        {\n            if (this.extensions.KHR_materials_unlit !== undefined)\n            {\n                this.defines.push(\"MATERIAL_UNLIT 1\");\n            }\n\n            if (this.extensions.KHR_materials_pbrSpecularGlossiness !== undefined)\n            {\n                this.defines.push(\"MATERIAL_SPECULARGLOSSINESS 1\");\n\n                let diffuseFactor = vec4.fromValues(1, 1, 1, 1);\n                let specularFactor = vec3.fromValues(1, 1, 1);\n                let glossinessFactor = 1;\n\n                if (this.extensions.KHR_materials_pbrSpecularGlossiness.diffuseFactor !== undefined)\n                {\n                    diffuseFactor = jsToGl(this.extensions.KHR_materials_pbrSpecularGlossiness.diffuseFactor);\n                }\n\n                if (this.extensions.KHR_materials_pbrSpecularGlossiness.specularFactor !== undefined)\n                {\n                    specularFactor = jsToGl(this.extensions.KHR_materials_pbrSpecularGlossiness.specularFactor);\n                }\n\n                if (this.extensions.KHR_materials_pbrSpecularGlossiness.glossinessFactor !== undefined)\n                {\n                    glossinessFactor = this.extensions.KHR_materials_pbrSpecularGlossiness.glossinessFactor;\n                }\n\n                this.properties.set(\"u_DiffuseFactor\", diffuseFactor);\n                this.properties.set(\"u_SpecularFactor\", specularFactor);\n                this.properties.set(\"u_GlossinessFactor\", glossinessFactor);\n            }\n\n            // Clearcoat is part of the default metallic-roughness shader\n            if(this.extensions.KHR_materials_clearcoat !== undefined)\n            {\n                let clearcoatFactor = 0.0;\n                let clearcoatRoughnessFactor = 0.0;\n\n                this.defines.push(\"MATERIAL_CLEARCOAT 1\");\n\n                if(this.extensions.KHR_materials_clearcoat.clearcoatFactor !== undefined)\n                {\n                    clearcoatFactor = this.extensions.KHR_materials_clearcoat.clearcoatFactor;\n                }\n                if(this.extensions.KHR_materials_clearcoat.clearcoatRoughnessFactor !== undefined)\n                {\n                    clearcoatRoughnessFactor = this.extensions.KHR_materials_clearcoat.clearcoatRoughnessFactor;\n                }\n\n                if (this.clearcoatTexture !== undefined)\n                {\n                    this.clearcoatTexture.samplerName = \"u_ClearcoatSampler\";\n                    this.parseTextureInfoExtensions(this.clearcoatTexture, \"Clearcoat\");\n                    this.textures.push(this.clearcoatTexture);\n                    this.defines.push(\"HAS_CLEARCOAT_TEXTURE_MAP 1\");\n                    this.properties.set(\"u_ClearcoatUVSet\", this.clearcoatTexture.texCoord);\n                }\n                if (this.clearcoatRoughnessTexture !== undefined)\n                {\n                    this.clearcoatRoughnessTexture.samplerName = \"u_ClearcoatRoughnessSampler\";\n                    this.parseTextureInfoExtensions(this.clearcoatRoughnessTexture, \"ClearcoatRoughness\");\n                    this.textures.push(this.clearcoatRoughnessTexture);\n                    this.defines.push(\"HAS_CLEARCOAT_ROUGHNESS_MAP 1\");\n                    this.properties.set(\"u_ClearcoatRoughnessUVSet\", this.clearcoatRoughnessTexture.texCoord);\n                }\n                if (this.clearcoatNormalTexture !== undefined)\n                {\n                    this.clearcoatNormalTexture.samplerName = \"u_ClearcoatNormalSampler\";\n                    this.parseTextureInfoExtensions(this.clearcoatNormalTexture, \"ClearcoatNormal\");\n                    this.textures.push(this.clearcoatNormalTexture);\n                    this.defines.push(\"HAS_CLEARCOAT_NORMAL_MAP 1\");\n                    this.properties.set(\"u_ClearcoatNormalUVSet\", this.clearcoatNormalTexture.texCoord);\n                }\n                this.properties.set(\"u_ClearcoatFactor\", clearcoatFactor);\n                this.properties.set(\"u_ClearcoatRoughnessFactor\", clearcoatRoughnessFactor);\n            }\n\n            // Sheen material extension\n            // https://github.com/sebavan/glTF/tree/KHR_materials_sheen/extensions/2.0/Khronos/KHR_materials_sheen\n            if(this.extensions.KHR_materials_sheen !== undefined)\n            {\n                let sheenRoughnessFactor = 0.0;\n                let sheenColorFactor =  vec3.fromValues(1.0, 1.0, 1.0);\n\n                this.defines.push(\"MATERIAL_SHEEN 1\");\n\n                if(this.extensions.KHR_materials_sheen.sheenRoughnessFactor !== undefined)\n                {\n                    sheenRoughnessFactor = this.extensions.KHR_materials_sheen.sheenRoughnessFactor;\n                }\n                if(this.extensions.KHR_materials_sheen.sheenColorFactor !== undefined)\n                {\n                    sheenColorFactor = jsToGl(this.extensions.KHR_materials_sheen.sheenColorFactor);\n                }\n                if (this.sheenRoughnessTexture !== undefined)\n                {\n                    this.sheenRoughnessTexture.samplerName = \"u_sheenRoughnessSampler\";\n                    this.parseTextureInfoExtensions(this.sheenRoughnessTexture, \"SheenRoughness\");\n                    this.textures.push(this.sheenRoughnessTexture);\n                    this.defines.push(\"HAS_SHEEN_ROUGHNESS_MAP 1\");\n                    this.properties.set(\"u_SheenRoughnessUVSet\", this.sheenRoughnessTexture.texCoord);\n                }\n                if (this.sheenColorTexture !== undefined)\n                {\n                    this.sheenColorTexture.samplerName = \"u_SheenColorSampler\";\n                    this.parseTextureInfoExtensions(this.sheenColorTexture, \"SheenColor\");\n                    this.textures.push(this.sheenColorTexture);\n                    this.defines.push(\"HAS_SHEEN_COLOR_MAP 1\");\n                    this.properties.set(\"u_SheenColorUVSet\", this.sheenColorTexture.texCoord);\n                }\n\n                this.properties.set(\"u_SheenRoughnessFactor\", sheenRoughnessFactor);\n                this.properties.set(\"u_SheenColorFactor\", sheenColorFactor);\n            }\n\n            // KHR Extension: Transmission\n            if (this.extensions.KHR_materials_transmission !== undefined)\n            {\n                let transmissionFactor = 0.0;\n\n                this.defines.push(\"MATERIAL_TRANSMISSION 1\");\n\n                if (transmissionFactor !== undefined)\n                {\n                    transmissionFactor = this.extensions.KHR_materials_transmission.transmissionFactor;\n                }\n                if (this.transmissionTexture !== undefined)\n                {\n                    this.transmissionTexture.samplerName = \"u_TransmissionSampler\";\n                    this.parseTextureInfoExtensions(this.transmissionTexture, \"Transmission\");\n                    this.textures.push(this.transmissionTexture);\n                    this.defines.push(\"HAS_TRANSMISSION_MAP 1\");\n                    this.properties.set(\"u_TransmissionUVSet\", this.transmissionTexture.texCoord);\n                }\n\n                this.properties.set(\"u_TransmissionFactor\", transmissionFactor);\n            }\n        }\n\n        initGlForMembers(this, gltf, webGlContext);\n    }\n\n    fromJson(jsonMaterial)\n    {\n        super.fromJson(jsonMaterial);\n\n        if (jsonMaterial.emissiveFactor !== undefined)\n        {\n            this.emissiveFactor = jsToGl(jsonMaterial.emissiveFactor);\n        }\n\n        if (jsonMaterial.normalTexture !== undefined)\n        {\n            const normalTexture = new gltfTextureInfo();\n            normalTexture.fromJson(jsonMaterial.normalTexture);\n            this.normalTexture = normalTexture;\n        }\n\n        if (jsonMaterial.occlusionTexture !== undefined)\n        {\n            const occlusionTexture = new gltfTextureInfo();\n            occlusionTexture.fromJson(jsonMaterial.occlusionTexture);\n            this.occlusionTexture = occlusionTexture;\n        }\n\n        if (jsonMaterial.emissiveTexture !== undefined)\n        {\n            const emissiveTexture = new gltfTextureInfo(undefined, 0, false);\n            emissiveTexture.fromJson(jsonMaterial.emissiveTexture);\n            this.emissiveTexture = emissiveTexture;\n        }\n\n        if(jsonMaterial.extensions !== undefined)\n        {\n            this.fromJsonMaterialExtensions(jsonMaterial.extensions);\n        }\n\n        if (jsonMaterial.pbrMetallicRoughness !== undefined && this.type !== \"SG\")\n        {\n            this.type = \"MR\";\n            this.fromJsonMetallicRoughness(jsonMaterial.pbrMetallicRoughness);\n        }\n    }\n\n    fromJsonMaterialExtensions(jsonExtensions)\n    {\n        if (jsonExtensions.KHR_materials_pbrSpecularGlossiness !== undefined)\n        {\n            this.type = \"SG\";\n            this.fromJsonSpecularGlossiness(jsonExtensions.KHR_materials_pbrSpecularGlossiness);\n        }\n\n        if(jsonExtensions.KHR_materials_unlit !== undefined)\n        {\n            this.type = \"unlit\";\n        }\n\n        if(jsonExtensions.KHR_materials_clearcoat !== undefined)\n        {\n            this.fromJsonClearcoat(jsonExtensions.KHR_materials_clearcoat);\n        }\n\n        if(jsonExtensions.KHR_materials_sheen !== undefined)\n        {\n            this.fromJsonSheen(jsonExtensions.KHR_materials_sheen);\n        }\n\n        if(jsonExtensions.KHR_materials_transmission !== undefined)\n        {\n            this.fromJsonTransmission(jsonExtensions.KHR_materials_transmission);\n        }\n    }\n\n    fromJsonMetallicRoughness(jsonMetallicRoughness)\n    {\n        if (jsonMetallicRoughness.baseColorTexture !== undefined)\n        {\n            const baseColorTexture = new gltfTextureInfo(undefined, 0, false);\n            baseColorTexture.fromJson(jsonMetallicRoughness.baseColorTexture);\n            this.baseColorTexture = baseColorTexture;\n        }\n\n        if (jsonMetallicRoughness.metallicRoughnessTexture !== undefined)\n        {\n            const metallicRoughnessTexture = new gltfTextureInfo();\n            metallicRoughnessTexture.fromJson(jsonMetallicRoughness.metallicRoughnessTexture);\n            this.metallicRoughnessTexture = metallicRoughnessTexture;\n        }\n    }\n\n    fromJsonSpecularGlossiness(jsonSpecularGlossiness)\n    {\n        if (jsonSpecularGlossiness.diffuseTexture !== undefined)\n        {\n            const diffuseTexture = new gltfTextureInfo(undefined, 0, false);\n            diffuseTexture.fromJson(jsonSpecularGlossiness.diffuseTexture);\n            this.diffuseTexture = diffuseTexture;\n        }\n\n        if (jsonSpecularGlossiness.specularGlossinessTexture !== undefined)\n        {\n            const specularGlossinessTexture = new gltfTextureInfo();\n            specularGlossinessTexture.fromJson(jsonSpecularGlossiness.specularGlossinessTexture);\n            this.specularGlossinessTexture = specularGlossinessTexture;\n        }\n    }\n\n    fromJsonClearcoat(jsonClearcoat)\n    {\n        if(jsonClearcoat.clearcoatTexture !== undefined)\n        {\n            const clearcoatTexture = new gltfTextureInfo();\n            clearcoatTexture.fromJson(jsonClearcoat.clearcoatTexture);\n            this.clearcoatTexture = clearcoatTexture;\n        }\n\n        if(jsonClearcoat.clearcoatRoughnessTexture !== undefined)\n        {\n            const clearcoatRoughnessTexture =  new gltfTextureInfo();\n            clearcoatRoughnessTexture.fromJson(jsonClearcoat.clearcoatRoughnessTexture);\n            this.clearcoatRoughnessTexture = clearcoatRoughnessTexture;\n        }\n\n        if(jsonClearcoat.clearcoatNormalTexture !== undefined)\n        {\n            const clearcoatNormalTexture =  new gltfTextureInfo();\n            clearcoatNormalTexture.fromJson(jsonClearcoat.clearcoatNormalTexture);\n            this.clearcoatNormalTexture = clearcoatNormalTexture;\n        }\n    }\n\n    fromJsonSheen(jsonSheen)\n    {\n        if(jsonSheen.sheenColorTexture !== undefined)\n        {\n            const sheenColorTexture = new gltfTextureInfo();\n            sheenColorTexture.fromJson(jsonSheen.sheenColorTexture);\n            this.sheenColorTexture = sheenColorTexture;\n        }\n        if(jsonSheen.sheenRoughnessTexture !== undefined)\n        {\n            const sheenRoughnessTexture = new gltfTextureInfo();\n            sheenRoughnessTexture.fromJson(jsonSheen.sheenRoughnessTexture);\n            this.sheenRoughnessTexture = sheenRoughnessTexture;\n        }\n    }\n\n    fromJsonTransmission(jsonTransmission)\n    {\n        if(jsonTransmission.transmissionTexture !== undefined)\n        {\n            const transmissionTexture = new gltfTextureInfo();\n            transmissionTexture.fromJson(jsonTransmission.transmissionTexture);\n            this.transmissionTexture = transmissionTexture;\n        }\n    }\n}\n\nexport { gltfMaterial };\n","class DracoDecoder {\n\n    constructor(dracoLib) {\n        if (!DracoDecoder.instance && dracoLib === undefined)\n        {\n            if (DracoDecoderModule === undefined)\n            {\n                console.error('Failed to initalize DracoDecoder: draco library undefined');\n                return undefined;\n            }\n            else\n            {\n                dracoLib = DracoDecoderModule;\n            }\n        }\n        if (!DracoDecoder.instance)\n        {\n            DracoDecoder.instance = this;\n            this.module = null;\n\n            this.initializingPromise = new Promise(resolve => {\n                let dracoDecoderType = {};\n                dracoDecoderType['onModuleLoaded'] = dracoDecoderModule => {\n                    this.module = dracoDecoderModule;\n                    resolve();\n                };\n                dracoLib(dracoDecoderType);\n            });\n        }\n        return DracoDecoder.instance;\n    }\n\n    async ready() {\n        await this.initializingPromise;\n        Object.freeze(DracoDecoder.instance);\n    }\n\n}\n\nexport { DracoDecoder };\n","import { initGlForMembers } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\nimport { gltfBuffer } from './buffer.js';\nimport { gltfBufferView } from './buffer_view.js';\nimport { DracoDecoder } from '../ResourceLoader/draco.js';\nimport { GL  } from '../Renderer/webgl.js';\n\nclass gltfPrimitive extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.attributes = [];\n        this.targets = [];\n        this.indices = undefined;\n        this.material = undefined;\n        this.mode = GL.TRIANGLES;\n\n        // non gltf\n        this.glAttributes = [];\n        this.defines = [];\n        this.skip = true;\n        this.hasWeights = false;\n        this.hasJoints = false;\n        this.hasNormals = false;\n        this.hasTangents = false;\n        this.hasTexcoord = false;\n        this.hasColor = false;\n\n        // The primitive centroid is used for depth sorting.\n        this.centroid = undefined;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        // Use the default glTF material.\n        if (this.material === undefined)\n        {\n            this.material = gltf.materials.length - 1;\n        }\n\n        initGlForMembers(this, gltf, webGlContext);\n\n        const maxAttributes = webGlContext.getParameter(GL.MAX_VERTEX_ATTRIBS);\n\n        // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\n        if (this.extensions !== undefined)\n        {\n            if (this.extensions.KHR_draco_mesh_compression !== undefined)\n            {\n                const dracoDecoder = new DracoDecoder();\n                if (dracoDecoder !== undefined && Object.isFrozen(dracoDecoder))\n                {\n                    let dracoGeometry = this.decodeDracoBufferToIntermediate(\n                        this.extensions.KHR_draco_mesh_compression, gltf);\n                    this.copyDataFromDecodedGeometry(gltf, dracoGeometry, this.attributes);\n                }\n                else\n                {\n                    console.warn('Failed to load draco compressed mesh: DracoDecoder not initialized');\n                }\n            }\n        }\n\n        // VERTEX ATTRIBUTES\n        for (const attribute of Object.keys(this.attributes))\n        {\n            if(this.glAttributes.length >= maxAttributes)\n            {\n                console.error(\"To many vertex attributes for this primitive, skipping \" + attribute);\n                break;\n            }\n\n            const idx = this.attributes[attribute];\n            switch (attribute)\n            {\n            case \"POSITION\":\n                this.skip = false;\n                this.glAttributes.push({ attribute: attribute, name: \"a_Position\", accessor: idx });\n                break;\n            case \"NORMAL\":\n                this.hasNormals = true;\n                this.defines.push(\"HAS_NORMALS 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Normal\", accessor: idx });\n                break;\n            case \"TANGENT\":\n                this.hasTangents = true;\n                this.defines.push(\"HAS_TANGENTS 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Tangent\", accessor: idx });\n                break;\n            case \"TEXCOORD_0\":\n                this.hasTexcoord = true;\n                this.defines.push(\"HAS_UV_SET1 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_UV1\", accessor: idx });\n                break;\n            case \"TEXCOORD_1\":\n                this.hasTexcoord = true;\n                this.defines.push(\"HAS_UV_SET2 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_UV2\", accessor: idx });\n                break;\n            case \"COLOR_0\":\n                this.hasColor = true;\n                const accessor = gltf.accessors[idx];\n                this.defines.push(\"HAS_VERTEX_COLOR_\" + accessor.type + \" 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Color\", accessor: idx });\n                break;\n            case \"JOINTS_0\":\n                this.hasJoints = true;\n                this.defines.push(\"HAS_JOINT_SET1 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Joint1\", accessor: idx });\n                break;\n            case \"WEIGHTS_0\":\n                this.hasWeights = true;\n                this.defines.push(\"HAS_WEIGHT_SET1 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Weight1\", accessor: idx });\n                break;\n            case \"JOINTS_1\":\n                this.hasJoints = true;\n                this.defines.push(\"HAS_JOINT_SET2 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Joint2\", accessor: idx });\n                break;\n            case \"WEIGHTS_1\":\n                this.hasWeights = true;\n                this.defines.push(\"HAS_WEIGHT_SET2 1\");\n                this.glAttributes.push({ attribute: attribute, name: \"a_Weight2\", accessor: idx });\n                break;\n            default:\n                console.log(\"Unknown attribute: \" + attribute);\n            }\n        }\n\n        // MORPH TARGETS\n        if (this.targets !== undefined)\n        {\n            let i = 0;\n            for (const target of this.targets)\n            {\n                if(this.glAttributes.length + 3 > maxAttributes)\n                {\n                    console.error(\"To many vertex attributes for this primitive, skipping target \" + i);\n                    break;\n                }\n\n                for (const attribute of Object.keys(target))\n                {\n                    const idx = target[attribute];\n\n                    switch (attribute)\n                    {\n                    case \"POSITION\":\n                        this.defines.push(\"HAS_TARGET_POSITION\" + i + \" 1\");\n                        this.glAttributes.push({ attribute: attribute, name: \"a_Target_Position\" + i, accessor: idx });\n                        break;\n                    case \"NORMAL\":\n                        this.defines.push(\"HAS_TARGET_NORMAL\" + i + \" 1\");\n                        this.glAttributes.push({ attribute: attribute, name: \"a_Target_Normal\" + i, accessor: idx });\n                        break;\n                    case \"TANGENT\":\n                        this.defines.push(\"HAS_TARGET_TANGENT\" + i + \" 1\");\n                        this.glAttributes.push({ attribute: attribute, name: \"a_Target_Tangent\" + i, accessor: idx });\n                        break;\n                    }\n                }\n\n                ++i;\n            }\n        }\n    }\n\n    getShaderIdentifier()\n    {\n        return \"primitive.vert\";\n    }\n\n    getDefines()\n    {\n        return this.defines;\n    }\n\n    setCentroid(centroid)\n    {\n        this.centroid = centroid;\n    }\n\n    fromJson(jsonPrimitive)\n    {\n        super.fromJson(jsonPrimitive);\n\n        if(jsonPrimitive.extensions !== undefined)\n        {\n            this.fromJsonPrimitiveExtensions(jsonPrimitive.extensions);\n        }\n    }\n\n    fromJsonPrimitiveExtensions(jsonExtensions)\n    {\n        if(jsonExtensions.KHR_materials_variants !== undefined)\n        {\n            this.fromJsonVariants(jsonExtensions.KHR_materials_variants);\n        }\n    }\n\n    fromJsonVariants(jsonVariants)\n    {\n        if(jsonVariants.mappings !== undefined)\n        {\n            this.mappings = jsonVariants.mappings;\n        }\n    }\n\n    copyDataFromDecodedGeometry(gltf, dracoGeometry, primitiveAttributes)\n    {\n        // indices\n        let indexBuffer = dracoGeometry.index.array;\n        this.loadBufferIntoGltf(indexBuffer, gltf, this.indices, 34963,\n            \"index buffer view\");\n\n        // Position\n        if(dracoGeometry.attributes.POSITION !== undefined)\n        {\n            let positionBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.POSITION.array,\n                dracoGeometry.attributes.POSITION.componentType);\n            this.loadBufferIntoGltf(positionBuffer, gltf, primitiveAttributes[\"POSITION\"], 34962,\n                \"position buffer view\");\n        }\n\n        // Normal\n        if(dracoGeometry.attributes.NORMAL !== undefined)\n        {\n            let normalBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.NORMAL.array,\n                dracoGeometry.attributes.NORMAL.componentType);\n            this.loadBufferIntoGltf(normalBuffer, gltf, primitiveAttributes[\"NORMAL\"], 34962,\n                \"normal buffer view\");\n        }\n\n        // TEXCOORD_0\n        if(dracoGeometry.attributes.TEXCOORD_0 !== undefined)\n        {\n            let uvBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.TEXCOORD_0.array,\n                dracoGeometry.attributes.TEXCOORD_0.componentType);\n            this.loadBufferIntoGltf(uvBuffer, gltf, primitiveAttributes[\"TEXCOORD_0\"], 34962,\n                \"TEXCOORD_0 buffer view\");\n        }\n\n        // TEXCOORD_1\n        if(dracoGeometry.attributes.TEXCOORD_1 !== undefined)\n        {\n            let uvBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.TEXCOORD_1.array,\n                dracoGeometry.attributes.TEXCOORD_1.componentType);\n            this.loadBufferIntoGltf(uvBuffer, gltf, primitiveAttributes[\"TEXCOORD_1\"], 34962,\n                \"TEXCOORD_1 buffer view\");\n        }\n\n        // Tangent\n        if(dracoGeometry.attributes.TANGENT !== undefined)\n        {\n            let tangentBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.TANGENT.array,\n                dracoGeometry.attributes.TANGENT.componentType);\n            this.loadBufferIntoGltf(tangentBuffer, gltf, primitiveAttributes[\"TANGENT\"], 34962,\n                \"Tangent buffer view\");\n        }\n\n        // Color\n        if(dracoGeometry.attributes.COLOR_0 !== undefined)\n        {\n            let colorBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.COLOR_0.array,\n                dracoGeometry.attributes.COLOR_0.componentType);\n            this.loadBufferIntoGltf(colorBuffer, gltf, primitiveAttributes[\"COLOR_0\"], 34962,\n                \"color buffer view\");\n        }\n\n        // JOINTS_0\n        if(dracoGeometry.attributes.JOINTS_0 !== undefined)\n        {\n            let jointsBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.JOINTS_0.array,\n                dracoGeometry.attributes.JOINTS_0.componentType);\n            this.loadBufferIntoGltf(jointsBuffer, gltf, primitiveAttributes[\"JOINTS_0\"], 34963,\n                \"JOINTS_0 buffer view\");\n        }\n\n        // WEIGHTS_0\n        if(dracoGeometry.attributes.WEIGHTS_0 !== undefined)\n        {\n            let weightsBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.WEIGHTS_0.array,\n                dracoGeometry.attributes.WEIGHTS_0.componentType);\n            this.loadBufferIntoGltf(weightsBuffer, gltf, primitiveAttributes[\"WEIGHTS_0\"], 34963,\n                \"WEIGHTS_0 buffer view\");\n        }\n\n        // JOINTS_1\n        if(dracoGeometry.attributes.JOINTS_1 !== undefined)\n        {\n            let jointsBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.JOINTS_1.array,\n                dracoGeometry.attributes.JOINTS_1.componentType);\n            this.loadBufferIntoGltf(jointsBuffer, gltf, primitiveAttributes[\"JOINTS_1\"], 34963,\n                \"JOINTS_1 buffer view\");\n        }\n\n        // WEIGHTS_1\n        if(dracoGeometry.attributes.WEIGHTS_1 !== undefined)\n        {\n            let weightsBuffer = this.loadArrayIntoArrayBuffer(dracoGeometry.attributes.WEIGHTS_1.array,\n                dracoGeometry.attributes.WEIGHTS_1.componentType);\n            this.loadBufferIntoGltf(weightsBuffer, gltf, primitiveAttributes[\"WEIGHTS_1\"], 34963,\n                \"WEIGHTS_1 buffer view\");\n        }\n    }\n\n    loadBufferIntoGltf(buffer, gltf, gltfAccessorIndex, gltfBufferViewTarget, gltfBufferViewName)\n    {\n        const gltfBufferObj = new gltfBuffer();\n        gltfBufferObj.byteLength = buffer.byteLength;\n        gltfBufferObj.buffer = buffer;\n        gltf.buffers.push(gltfBufferObj);\n\n        const gltfBufferViewObj = new gltfBufferView();\n        gltfBufferViewObj.buffer = gltf.buffers.length - 1;\n        gltfBufferViewObj.byteLength = buffer.byteLength;\n        if(gltfBufferViewName !== undefined)\n        {\n            gltfBufferViewObj.name = gltfBufferViewName;\n        }\n        gltfBufferViewObj.target = gltfBufferViewTarget;\n        gltf.bufferViews.push(gltfBufferViewObj);\n\n        gltf.accessors[gltfAccessorIndex].byteOffset = 0;\n        gltf.accessors[gltfAccessorIndex].bufferView = gltf.bufferViews.length - 1;\n    }\n\n    loadArrayIntoArrayBuffer(arrayData, componentType)\n    {\n        let arrayBuffer;\n        switch (componentType)\n        {\n        case \"Int8Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length);\n            let int8Array = new Int8Array(arrayBuffer);\n            int8Array.set(arrayData);\n            break;\n        case \"Uint8Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length);\n            let uint8Array = new Uint8Array(arrayBuffer);\n            uint8Array.set(arrayData);\n            break;\n        case \"Int16Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length * 2);\n            let int16Array = new Int16Array(arrayBuffer);\n            int16Array.set(arrayData);\n            break;\n        case \"Uint16Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length * 2);\n            let uint16Array = new Uint16Array(arrayBuffer);\n            uint16Array.set(arrayData);\n            break;\n        case \"Int32Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length * 4);\n            let int32Array = new Int32Array(arrayBuffer);\n            int32Array.set(arrayData);\n            break;\n        case \"Uint32Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length * 4);\n            let uint32Array = new Uint32Array(arrayBuffer);\n            uint32Array.set(arrayData);\n            break;\n        default:\n        case \"Float32Array\":\n            arrayBuffer = new ArrayBuffer(arrayData.length * 4);\n            let floatArray = new Float32Array(arrayBuffer);\n            floatArray.set(arrayData);\n            break;\n        }\n\n\n        return arrayBuffer;\n    }\n\n    decodeDracoBufferToIntermediate(dracoExtension, gltf)\n    {\n        let dracoBufferViewIDX = dracoExtension.bufferView;\n\n        const origGltfDrBufViewObj = gltf.bufferViews[dracoBufferViewIDX];\n        const origGltfDracoBuffer = gltf.buffers[origGltfDrBufViewObj.buffer];\n\n        const totalBuffer = new Int8Array( origGltfDracoBuffer.buffer );\n        const actualBuffer = totalBuffer.slice(origGltfDrBufViewObj.byteOffset,\n            origGltfDrBufViewObj.byteOffset + origGltfDrBufViewObj.byteLength);\n\n        // decode draco buffer to geometry intermediate\n        let dracoDecoder = new DracoDecoder();\n        let draco = dracoDecoder.module;\n        let decoder = new draco.Decoder();\n        let decoderBuffer = new draco.DecoderBuffer();\n        decoderBuffer.Init(actualBuffer, origGltfDrBufViewObj.byteLength);\n        let geometry = this.decodeGeometry( draco, decoder, decoderBuffer, dracoExtension.attributes, gltf );\n\n        draco.destroy( decoderBuffer );\n\n        return geometry;\n    }\n\n    getDracoArrayTypeFromComponentType(componentType)\n    {\n        switch (componentType)\n        {\n        case GL.BYTE:\n            return \"Int8Array\";\n        case GL.UNSIGNED_BYTE:\n            return \"Uint8Array\";\n        case GL.SHORT:\n            return \"Int16Array\";\n        case GL.UNSIGNED_SHORT:\n            return \"Uint16Array\";\n        case GL.INT:\n            return \"Int32Array\";\n        case GL.UNSIGNED_INT:\n            return \"Uint32Array\";\n        case GL.FLOAT:\n            return \"Float32Array\";\n        default:\n            return \"Float32Array\";\n        }\n    }\n\n    decodeGeometry(draco, decoder, decoderBuffer, gltfDracoAttributes, gltf) {\n        let dracoGeometry;\n        let decodingStatus;\n\n        // decode mesh in draco decoder\n        let geometryType = decoder.GetEncodedGeometryType( decoderBuffer );\n        if ( geometryType === draco.TRIANGULAR_MESH ) {\n            dracoGeometry = new draco.Mesh();\n            decodingStatus = decoder.DecodeBufferToMesh( decoderBuffer, dracoGeometry );\n        }\n        else\n        {\n            throw new Error( 'DRACOLoader: Unexpected geometry type.' );\n        }\n\n        if ( ! decodingStatus.ok() || dracoGeometry.ptr === 0 ) {\n            throw new Error( 'DRACOLoader: Decoding failed: ' + decodingStatus.error_msg() );\n        }\n\n        let geometry = { index: null, attributes: {} };\n        let vertexCount = dracoGeometry.num_points();\n\n        // Gather all vertex attributes.\n        for(let dracoAttr in gltfDracoAttributes)\n        {\n            let componentType = GL.BYTE;\n            let accessotVertexCount;\n            // find gltf accessor for this draco attribute\n            for (const [key, value] of Object.entries(this.attributes))\n            {\n                if(key === dracoAttr)\n                {\n                    componentType = gltf.accessors[value].componentType;\n                    accessotVertexCount = gltf.accessors[value].count;\n                    break;\n                }\n            }\n\n            // check if vertex count matches\n            if(vertexCount !== accessotVertexCount)\n            {\n                throw new Error(`DRACOLoader: Accessor vertex count ${accessotVertexCount} does not match draco decoder vertex count  ${vertexCount}`);\n            }\n            componentType = this.getDracoArrayTypeFromComponentType(componentType);\n\n            let dracoAttribute = decoder.GetAttributeByUniqueId( dracoGeometry, gltfDracoAttributes[dracoAttr]);\n            var tmpObj = this.decodeAttribute( draco, decoder,\n                dracoGeometry, dracoAttr, dracoAttribute, componentType);\n            geometry.attributes[tmpObj.name] = tmpObj;\n        }\n\n        // Add index buffer\n        if ( geometryType === draco.TRIANGULAR_MESH ) {\n\n            // Generate mesh faces.\n            let numFaces = dracoGeometry.num_faces();\n            let numIndices = numFaces * 3;\n            let dataSize = numIndices * 4;\n            let ptr = draco._malloc( dataSize );\n            decoder.GetTrianglesUInt32Array( dracoGeometry, dataSize, ptr );\n            let index = new Uint32Array( draco.HEAPU32.buffer, ptr, numIndices ).slice();\n            draco._free( ptr );\n\n            geometry.index = { array: index, itemSize: 1 };\n\n        }\n\n        draco.destroy( dracoGeometry );\n        return geometry;\n    }\n\n    decodeAttribute( draco, decoder, dracoGeometry, attributeName, attribute, attributeType) {\n        let numComponents = attribute.num_components();\n        let numPoints = dracoGeometry.num_points();\n        let numValues = numPoints * numComponents;\n\n        let ptr;\n        let array;\n\n        let dataSize;\n        switch ( attributeType ) {\n        case \"Float32Array\":\n            dataSize = numValues * 4;\n            ptr = draco._malloc( dataSize );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_FLOAT32, dataSize, ptr );\n            array = new Float32Array( draco.HEAPF32.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Int8Array\":\n            ptr = draco._malloc( numValues );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_INT8, numValues, ptr );\n            array = new Int8Array( draco.HEAP8.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Int16Array\":\n            dataSize = numValues * 2;\n            ptr = draco._malloc( dataSize );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_INT16, dataSize, ptr );\n            array = new Int16Array( draco.HEAP16.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Int32Array\":\n            dataSize = numValues * 4;\n            ptr = draco._malloc( dataSize );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_INT32, dataSize, ptr );\n            array = new Int32Array( draco.HEAP32.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Uint8Array\":\n            ptr = draco._malloc( numValues );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_UINT8, numValues, ptr );\n            array = new Uint8Array( draco.HEAPU8.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Uint16Array\":\n            dataSize = numValues * 2;\n            ptr = draco._malloc( dataSize );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_UINT16, dataSize, ptr );\n            array = new Uint16Array( draco.HEAPU16.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        case \"Uint32Array\":\n            dataSize = numValues * 4;\n            ptr = draco._malloc( dataSize );\n            decoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, draco.DT_UINT32, dataSize, ptr );\n            array = new Uint32Array( draco.HEAPU32.buffer, ptr, numValues ).slice();\n            draco._free( ptr );\n            break;\n\n        default:\n            throw new Error( 'DRACOLoader: Unexpected attribute type.' );\n        }\n\n        return {\n            name: attributeName,\n            array: array,\n            itemSize: numComponents,\n            componentType: attributeType\n        };\n\n    }\n}\n\nexport { gltfPrimitive };\n\n","import { gltfPrimitive } from './primitive.js';\nimport { objectsFromJsons } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\nclass gltfMesh extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.primitives = [];\n        this.name = undefined;\n        this.weights = [];\n    }\n\n    fromJson(jsonMesh)\n    {\n        super.fromJson(jsonMesh);\n\n        if (jsonMesh.name !== undefined)\n        {\n            this.name = jsonMesh.name;\n        }\n\n        this.primitives = objectsFromJsons(jsonMesh.primitives, gltfPrimitive);\n\n        if(jsonMesh.weights !== undefined)\n        {\n            this.weights = jsonMesh.weights;\n        }\n    }\n}\n\nexport { gltfMesh };\n","import { mat4, quat } from 'gl-matrix';\nimport { jsToGl } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\n\n// contain:\n// transform\n// child indices (reference to scene array of nodes)\n\nclass gltfNode extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.camera = undefined;\n        this.children = [];\n        this.matrix = undefined;\n        this.rotation = jsToGl([0, 0, 0, 1]);\n        this.scale = jsToGl([1, 1, 1]);\n        this.translation = jsToGl([0, 0, 0]);\n        this.name = undefined;\n        this.mesh = undefined;\n        this.skin = undefined;\n\n        // non gltf\n        this.worldTransform = mat4.create();\n        this.inverseWorldTransform = mat4.create();\n        this.normalMatrix = mat4.create();\n        this.light = undefined;\n        this.changed = true;\n    }\n\n    initGl()\n    {\n        if (this.matrix !== undefined)\n        {\n            this.applyMatrix(this.matrix);\n        }\n        else\n        {\n            if (this.scale !== undefined)\n            {\n                this.scale = jsToGl(this.scale);\n            }\n\n            if (this.rotation !== undefined)\n            {\n                this.rotation = jsToGl(this.rotation);\n            }\n\n            if (this.translation !== undefined)\n            {\n                this.translation = jsToGl(this.translation);\n            }\n        }\n        this.changed = true;\n    }\n\n    applyMatrix(matrixData)\n    {\n        this.matrix = jsToGl(matrixData);\n\n        mat4.getScaling(this.scale, this.matrix);\n\n        // To extract a correct rotation, the scaling component must be eliminated.\n        const mn = mat4.create();\n        for(const col of [0, 1, 2])\n        {\n            mn[col] = this.matrix[col] / this.scale[0];\n            mn[col + 4] = this.matrix[col + 4] / this.scale[1];\n            mn[col + 8] = this.matrix[col + 8] / this.scale[2];\n        }\n        mat4.getRotation(this.rotation, mn);\n        quat.normalize(this.rotation, this.rotation);\n\n        mat4.getTranslation(this.translation, this.matrix);\n\n        this.changed = true;\n    }\n\n    // vec3\n    applyTranslation(translation)\n    {\n        this.translation = translation;\n        this.changed = true;\n    }\n\n    // quat\n    applyRotation(rotation)\n    {\n        this.rotation = rotation;\n        this.changed = true;\n    }\n\n    // vec3\n    applyScale(scale)\n    {\n        this.scale = scale;\n        this.changed = true;\n    }\n\n    resetTransform()\n    {\n        this.rotation = jsToGl([0, 0, 0, 1]);\n        this.scale = jsToGl([1, 1, 1]);\n        this.translation = jsToGl([0, 0, 0]);\n        this.changed = true;\n    }\n\n    getLocalTransform()\n    {\n        if(this.transform === undefined || this.changed)\n        {\n            this.transform = mat4.create();\n            mat4.fromRotationTranslationScale(this.transform, this.rotation, this.translation, this.scale);\n            this.changed = false;\n        }\n\n        return mat4.clone(this.transform);\n    }\n}\n\nexport { gltfNode };\n","import { GltfObject } from './gltf_object.js';\nimport { GL } from '../Renderer/webgl.js';\n\nclass gltfSampler extends GltfObject\n{\n    constructor(\n        magFilter = GL.LINEAR,\n        minFilter = GL.LINEAR_MIPMAP_LINEAR,\n        wrapS = GL.REPEAT,\n        wrapT = GL.REPEAT)\n    {\n        super();\n        this.magFilter = magFilter;\n        this.minFilter = minFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.name = undefined;\n    }\n\n    static createDefault()\n    {\n        return new gltfSampler();\n    }\n}\n\nexport { gltfSampler };\n","import { mat4 } from 'gl-matrix';\nimport { GltfObject } from './gltf_object';\n\nclass gltfScene extends GltfObject\n{\n    constructor(nodes = [], name = undefined)\n    {\n        super();\n        this.nodes = nodes;\n        this.name = name;\n\n        // non gltf\n        this.imageBasedLight = undefined;\n    }\n\n    initGl(gltf, webGlContext)\n    {\n        super.initGl(gltf, webGlContext);\n\n        if (this.extensions !== undefined &&\n            this.extensions.KHR_lights_image_based !== undefined)\n        {\n            const index = this.extensions.KHR_lights_image_based.imageBasedLight;\n            this.imageBasedLight = gltf.imageBasedLights[index];\n        }\n    }\n\n    applyTransformHierarchy(gltf, rootTransform = mat4.create())\n    {\n        function applyTransform(gltf, node, parentTransform)\n        {\n            mat4.multiply(node.worldTransform, parentTransform, node.getLocalTransform());\n            mat4.invert(node.inverseWorldTransform, node.worldTransform);\n            mat4.transpose(node.normalMatrix, node.inverseWorldTransform);\n\n            for (const child of node.children)\n            {\n                applyTransform(gltf, gltf.nodes[child], node.worldTransform);\n            }\n        }\n\n        for (const node of this.nodes)\n        {\n            applyTransform(gltf, gltf.nodes[node], rootTransform);\n        }\n    }\n\n    gatherNodes(gltf)\n    {\n        const nodes = [];\n\n        function gatherNode(nodeIndex)\n        {\n            const node = gltf.nodes[nodeIndex];\n            nodes.push(node);\n\n            // recurse into children\n            for(const child of node.children)\n            {\n                gatherNode(child);\n            }\n        }\n\n        for (const node of this.nodes)\n        {\n            gatherNode(node);\n        }\n\n        return nodes;\n    }\n\n    includesNode(gltf, nodeIndex)\n    {\n        let children = [...this.nodes];\n        while(children.length > 0)\n        {\n            const childIndex = children.pop();\n\n            if (childIndex === nodeIndex)\n            {\n                return true;\n            }\n\n            children = children.concat(gltf.nodes[childIndex].children);\n        }\n\n        return false;\n    }\n}\n\nexport { gltfScene };\n","import { GltfObject } from \"./gltf_object\";\n\nclass gltfAsset extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.copyright = undefined;\n        this.generator = undefined;\n        this.version = undefined;\n        this.minVersion = undefined;\n    }\n}\n\nexport { gltfAsset as gltfAsset };\n","import { GltfObject } from './gltf_object.js';\n\nclass gltfAnimationChannel extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.target = {node: undefined, path: undefined};\n        this.sampler = undefined;\n    }\n}\n\nconst InterpolationPath =\n{\n    TRANSLATION: \"translation\",\n    ROTATION: \"rotation\",\n    SCALE: \"scale\",\n    WEIGHTS: \"weights\"\n};\n\nexport { gltfAnimationChannel, InterpolationPath };\n","import { GltfObject } from './gltf_object.js';\n\nclass gltfAnimationSampler extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.input = undefined;\n        this.interpolation = undefined;\n        this.output = undefined;\n    }\n}\n\nconst InterpolationModes =\n{\n    LINEAR: \"LINEAR\",\n    STEP: \"STEP\",\n    CUBICSPLINE: \"CUBICSPLINE\"\n};\n\nexport { gltfAnimationSampler, InterpolationModes };\n","import { InterpolationModes } from './animation_sampler.js';\nimport { InterpolationPath } from './channel.js';\nimport { clamp, jsToGlSlice } from './utils.js';\nimport { quat, glMatrix } from 'gl-matrix';\n\nclass gltfInterpolator\n{\n    constructor()\n    {\n        this.prevKey = 0;\n        this.prevT = 0.0;\n    }\n\n    slerpQuat(q1, q2, t)\n    {\n        const qn1 = quat.create();\n        const qn2 = quat.create();\n\n        quat.normalize(qn1, q1);\n        quat.normalize(qn2, q2);\n\n        const quatResult = quat.create();\n\n        quat.slerp(quatResult, qn1, qn2, t);\n        quat.normalize(quatResult, quatResult);\n\n        return quatResult;\n    }\n\n    step(prevKey, output, stride)\n    {\n        const result = new glMatrix.ARRAY_TYPE(stride);\n\n        for(let i = 0; i < stride; ++i)\n        {\n            result[i] = output[prevKey * stride + i];\n        }\n\n        return result;\n    }\n\n    linear(prevKey, nextKey, output, t, stride)\n    {\n        const result = new glMatrix.ARRAY_TYPE(stride);\n\n        for(let i = 0; i < stride; ++i)\n        {\n            result[i] = output[prevKey * stride + i] * (1-t) + output[nextKey * stride + i] * t;\n        }\n\n        return result;\n    }\n\n    cubicSpline(prevKey, nextKey, output, keyDelta, t, stride)\n    {\n        // stride: Count of components (4 in a quaternion).\n        // Scale by 3, because each output entry consist of two tangents and one data-point.\n        const prevIndex = prevKey * stride * 3;\n        const nextIndex = nextKey * stride * 3;\n        const A = 0;\n        const V = 1 * stride;\n        const B = 2 * stride;\n\n        const result = new glMatrix.ARRAY_TYPE(stride);\n        const tSq = t ** 2;\n        const tCub = t ** 3;\n\n        // We assume that the components in output are laid out like this: in-tangent, point, out-tangent.\n        // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#appendix-c-spline-interpolation\n        for(let i = 0; i < stride; ++i)\n        {\n            const v0 = output[prevIndex + i + V];\n            const a = keyDelta * output[nextIndex + i + A];\n            const b = keyDelta * output[prevIndex + i + B];\n            const v1 = output[nextIndex + i + V];\n\n            result[i] = ((2*tCub - 3*tSq + 1) * v0) + ((tCub - 2*tSq + t) * b) + ((-2*tCub + 3*tSq) * v1) + ((tCub - tSq) * a);\n        }\n\n        return result;\n    }\n\n    resetKey()\n    {\n        this.prevKey = 0;\n    }\n\n    interpolate(gltf, channel, sampler, t, stride, maxTime)\n    {\n        const input = gltf.accessors[sampler.input].getDeinterlacedView(gltf);\n        const output = gltf.accessors[sampler.output].getDeinterlacedView(gltf);\n\n        if(output.length === stride) // no interpolation for single keyFrame animations\n        {\n            return jsToGlSlice(output, 0, stride);\n        }\n\n        // Wrap t around, so the animation loops.\n        // Make sure that t is never earlier than the first keyframe and never later then the last keyframe.\n        t = t % maxTime;\n        t = clamp(t, input[0], input[input.length - 1]);\n\n        if (this.prevT > t)\n        {\n            this.prevKey = 0;\n        }\n\n        this.prevT = t;\n\n        // Find next keyframe: min{ t of input | t > prevKey }\n        let nextKey = null;\n        for (let i = this.prevKey; i < input.length; ++i)\n        {\n            if (t <= input[i])\n            {\n                nextKey = clamp(i, 1, input.length - 1);\n                break;\n            }\n        }\n        this.prevKey = clamp(nextKey - 1, 0, nextKey);\n\n        const keyDelta = input[nextKey] - input[this.prevKey];\n\n        // Normalize t: [t0, t1] -> [0, 1]\n        const tn = (t - input[this.prevKey]) / keyDelta;\n\n        if(channel.target.path === InterpolationPath.ROTATION)\n        {\n\n            if(InterpolationModes.CUBICSPLINE === sampler.interpolation)\n            {\n                // GLTF requires cubic spline interpolation for quaternions.\n                // https://github.com/KhronosGroup/glTF/issues/1386\n                const result = this.cubicSpline(this.prevKey, nextKey, output, keyDelta, tn, 4);\n                quat.normalize(result, result);\n                return result;\n            }\n            else if(sampler.interpolation === InterpolationModes.LINEAR)\n            {\n                const q0 = this.getQuat(output, this.prevKey);\n                const q1 = this.getQuat(output, nextKey);\n                return this.slerpQuat(q0, q1, tn);\n            }\n            else if(sampler.interpolation === InterpolationModes.STEP)\n            {\n                return this.getQuat(output, this.prevKey);\n            }\n\n        }\n\n        switch(sampler.interpolation)\n        {\n        case InterpolationModes.STEP:\n            return this.step(this.prevKey, output, stride);\n        case InterpolationModes.CUBICSPLINE:\n            return this.cubicSpline(this.prevKey, nextKey, output, keyDelta, tn, stride);\n        default:\n            return this.linear(this.prevKey, nextKey, output, tn, stride);\n        }\n    }\n\n    getQuat(output, index)\n    {\n        const x = output[4 * index];\n        const y = output[4 * index + 1];\n        const z = output[4 * index + 2];\n        const w = output[4 * index + 3];\n        return quat.fromValues(x, y, z, w);\n    }\n}\n\nexport { gltfInterpolator };\n","import { GltfObject } from './gltf_object.js';\nimport { objectsFromJsons } from './utils.js';\nimport { gltfAnimationChannel, InterpolationPath } from './channel.js';\nimport { gltfAnimationSampler } from './animation_sampler.js';\nimport { gltfInterpolator } from './interpolator.js';\n\nclass gltfAnimation extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.channels = [];\n        this.samplers = [];\n        this.name = '';\n\n        // not gltf\n        this.interpolators = [];\n        this.maxTime = 0;\n    }\n\n    fromJson(jsonAnimation)\n    {\n        super.fromJson(jsonAnimation);\n\n        this.channels = objectsFromJsons(jsonAnimation.channels, gltfAnimationChannel);\n        this.samplers = objectsFromJsons(jsonAnimation.samplers, gltfAnimationSampler);\n        this.name = jsonAnimation.name;\n\n        if(this.channels === undefined)\n        {\n            console.error(\"No channel data found for skin\");\n            return;\n        }\n\n        for(let i = 0; i < this.channels.length; ++i)\n        {\n            this.interpolators.push(new gltfInterpolator());\n        }\n    }\n\n    advance(gltf, totalTime)\n    {\n        if(this.channels === undefined)\n        {\n            return;\n        }\n\n        if(this.maxTime == 0)\n        {\n            for(let i = 0; i < this.channels.length; ++i)\n            {\n                const channel = this.channels[i];\n                const sampler = this.samplers[channel.sampler];\n                const input = gltf.accessors[sampler.input].getDeinterlacedView(gltf);\n                const max = input[input.length - 1];\n                if(max > this.maxTime)\n                {\n                    this.maxTime = max;\n                }\n            }\n        }\n\n        for(let i = 0; i < this.interpolators.length; ++i)\n        {\n            const channel = this.channels[i];\n            const sampler = this.samplers[channel.sampler];\n            const interpolator = this.interpolators[i];\n\n            const node = gltf.nodes[channel.target.node];\n\n            switch(channel.target.path)\n            {\n            case InterpolationPath.TRANSLATION:\n                node.applyTranslation(interpolator.interpolate(gltf, channel, sampler, totalTime, 3, this.maxTime));\n                break;\n            case InterpolationPath.ROTATION:\n                node.applyRotation(interpolator.interpolate(gltf, channel, sampler, totalTime, 4, this.maxTime));\n                break;\n            case InterpolationPath.SCALE:\n                node.applyScale(interpolator.interpolate(gltf, channel, sampler, totalTime, 3, this.maxTime));\n                break;\n            case InterpolationPath.WEIGHTS:\n            {\n                const mesh = gltf.meshes[node.mesh];\n                mesh.weights = interpolator.interpolate(gltf, channel, sampler, totalTime, mesh.weights.length, this.maxTime);\n                break;\n            }\n            }\n        }\n    }\n}\n\nexport { gltfAnimation };\n","import { jsToGlSlice } from './utils.js';\nimport { GltfObject } from './gltf_object.js';\nimport { mat4 } from 'gl-matrix';\n\nclass gltfSkin extends GltfObject\n{\n    constructor()\n    {\n        super();\n\n        this.name = \"\";\n        this.inverseBindMatrices = undefined;\n        this.joints = [];\n        this.skeleton = undefined;\n\n        // not gltf\n        this.jointMatrices = [];\n        this.jointNormalMatrices = [];\n    }\n\n    computeJoints(gltf, parentNode)\n    {\n        const ibmAccessor = gltf.accessors[this.inverseBindMatrices].getDeinterlacedView(gltf);\n        this.jointMatrices = [];\n        this.jointNormalMatrices = [];\n\n        let i = 0;\n        for(const joint of this.joints)\n        {\n            const node = gltf.nodes[joint];\n\n            let jointMatrix = mat4.create();\n            let ibm = jsToGlSlice(ibmAccessor, i++ * 16, 16);\n            mat4.mul(jointMatrix, node.worldTransform, ibm);\n            mat4.mul(jointMatrix, parentNode.inverseWorldTransform, jointMatrix);\n            this.jointMatrices.push(jointMatrix);\n\n            let normalMatrix = mat4.create();\n            mat4.invert(normalMatrix, jointMatrix);\n            mat4.transpose(normalMatrix, normalMatrix);\n            this.jointNormalMatrices.push(normalMatrix);\n        }\n    }\n}\n\nexport { gltfSkin };\n","import { GltfObject } from './gltf_object.js';\n\nclass gltfVariant extends GltfObject\n{\n    constructor()\n    {\n        super();\n        this.name = undefined;\n    }\n\n    fromJson(jsonVariant)\n    {\n        if(jsonVariant.name !== undefined)\n        {\n            this.name = jsonVariant.name;\n        }\n    }\n}\n\nexport { gltfVariant as gltfVariant };\n","import { gltfAccessor } from './accessor.js';\nimport { gltfBuffer } from './buffer.js';\nimport { gltfBufferView } from './buffer_view.js';\nimport { gltfCamera } from './camera.js';\nimport { gltfImage } from './image.js';\nimport { gltfLight } from './light.js';\nimport { ImageBasedLight } from './image_based_light.js';\nimport { gltfMaterial } from './material.js';\nimport { gltfMesh } from './mesh.js';\nimport { gltfNode } from './node.js';\nimport { gltfSampler } from './sampler.js';\nimport { gltfScene } from './scene.js';\nimport { gltfTexture } from './texture.js';\nimport { initGlForMembers, objectsFromJsons, objectFromJson } from './utils';\nimport { gltfAsset } from './asset.js';\nimport { GltfObject } from './gltf_object.js';\nimport { gltfAnimation } from './animation.js';\nimport { gltfSkin } from './skin.js';\nimport { gltfVariant } from './variant.js';\n\nclass glTF extends GltfObject\n{\n    constructor(file)\n    {\n        super();\n        this.asset = undefined;\n        this.accessors = [];\n        this.nodes = [];\n        this.scene = undefined; // the default scene to show.\n        this.scenes = [];\n        this.cameras = [];\n        this.lights = [];\n        this.imageBasedLights = [];\n        this.textures = [];\n        this.images = [];\n        this.samplers = [];\n        this.meshes = [];\n        this.buffers = [];\n        this.bufferViews = [];\n        this.materials = [];\n        this.animations = [];\n        this.skins = [];\n        this.path = file;\n    }\n\n    initGl(webGlContext)\n    {\n        initGlForMembers(this, this, webGlContext);\n    }\n\n    fromJson(json)\n    {\n        super.fromJson(json);\n\n        this.asset = objectFromJson(json.asset, gltfAsset);\n        this.cameras = objectsFromJsons(json.cameras, gltfCamera);\n        this.accessors = objectsFromJsons(json.accessors, gltfAccessor);\n        this.meshes = objectsFromJsons(json.meshes, gltfMesh);\n        this.samplers = objectsFromJsons(json.samplers, gltfSampler);\n        this.materials = objectsFromJsons(json.materials, gltfMaterial);\n        this.buffers = objectsFromJsons(json.buffers, gltfBuffer);\n        this.bufferViews = objectsFromJsons(json.bufferViews, gltfBufferView);\n        this.scenes = objectsFromJsons(json.scenes, gltfScene);\n        this.textures = objectsFromJsons(json.textures, gltfTexture);\n        this.nodes = objectsFromJsons(json.nodes, gltfNode);\n        this.lights = objectsFromJsons(getJsonLightsFromExtensions(json.extensions), gltfLight);\n        this.imageBasedLights = objectsFromJsons(getJsonIBLsFromExtensions(json.extensions), ImageBasedLight);\n        this.images = objectsFromJsons(json.images, gltfImage);\n        this.animations = objectsFromJsons(json.animations, gltfAnimation);\n        this.skins = objectsFromJsons(json.skins, gltfSkin);\n        this.variants = objectsFromJsons(getJsonVariantsFromExtension(json.extensions), gltfVariant);\n        this.variants = enforceVariantsUniqueness(this.variants);\n\n        this.materials.push(gltfMaterial.createDefault());\n        this.samplers.push(gltfSampler.createDefault());\n\n        if (json.scenes !== undefined)\n        {\n            if (json.scene === undefined && json.scenes.length > 0)\n            {\n                this.scene = 0;\n            }\n            else\n            {\n                this.scene = json.scene;\n            }\n        }\n    }\n}\n\nfunction getJsonLightsFromExtensions(extensions)\n{\n    if (extensions === undefined)\n    {\n        return [];\n    }\n    if (extensions.KHR_lights_punctual === undefined)\n    {\n        return [];\n    }\n    return extensions.KHR_lights_punctual.lights;\n}\n\nfunction getJsonIBLsFromExtensions(extensions)\n{\n    if (extensions === undefined)\n    {\n        return [];\n    }\n    if (extensions.KHR_lights_image_based === undefined)\n    {\n        return [];\n    }\n    return extensions.KHR_lights_image_based.imageBasedLights;\n}\n\nfunction getJsonVariantsFromExtension(extensions)\n{\n    if (extensions === undefined)\n    {\n        return [];\n    }\n    if (extensions.KHR_materials_variants === undefined)\n    {\n        return [];\n    }\n    return extensions.KHR_materials_variants.variants;\n}\n\nfunction enforceVariantsUniqueness(variants)\n{\n    for(let i=0;i<variants.length;i++)\n    {\n        const name = variants[i].name;\n        for(let j=i+1;j<variants.length;j++)\n        {\n            if(variants[j].name == name)\n            {\n                variants[j].name += \"0\";  // Add random character to duplicates\n            }\n        }\n    }\n\n\n    return variants;\n}\n\nexport { glTF };\n","class GlbParser\n{\n    constructor(data)\n    {\n        this.data = data;\n        this.glbHeaderInts = 3;\n        this.glbChunkHeaderInts = 2;\n        this.glbMagic = 0x46546C67;\n        this.glbVersion = 2;\n        this.jsonChunkType = 0x4E4F534A;\n        this.binaryChunkType = 0x004E4942;\n    }\n\n    extractGlbData()\n    {\n        const glbInfo = this.getCheckedGlbInfo();\n        if (glbInfo === undefined)\n        {\n            return undefined;\n        }\n\n        let json = undefined;\n        let buffers = [];\n        const chunkInfos = this.getAllChunkInfos();\n        for (let chunkInfo of chunkInfos)\n        {\n            if (chunkInfo.type == this.jsonChunkType && !json)\n            {\n                json = this.getJsonFromChunk(chunkInfo);\n            }\n            else if (chunkInfo.type == this.binaryChunkType)\n            {\n                buffers.push(this.getBufferFromChunk(chunkInfo));\n            }\n        }\n\n        return { json: json, buffers: buffers };\n    }\n\n    getCheckedGlbInfo()\n    {\n        const header = new Uint32Array(this.data, 0, this.glbHeaderInts);\n        const magic = header[0];\n        const version = header[1];\n        const length = header[2];\n\n        if (!this.checkEquality(magic, this.glbMagic, \"glb magic\") ||\n            !this.checkEquality(version, this.glbVersion, \"glb header version\") ||\n            !this.checkEquality(length, this.data.byteLength, \"glb byte length\"))\n        {\n            return undefined;\n        }\n\n        return { \"magic\": magic, \"version\": version, \"length\": length };\n    }\n\n    getAllChunkInfos()\n    {\n        let infos = [];\n        let chunkStart = this.glbHeaderInts * 4;\n        while (chunkStart < this.data.byteLength)\n        {\n            const chunkInfo = this.getChunkInfo(chunkStart);\n            infos.push(chunkInfo);\n            chunkStart += chunkInfo.length + this.glbChunkHeaderInts * 4;\n        }\n        return infos;\n    }\n\n    getChunkInfo(headerStart)\n    {\n        const header = new Uint32Array(this.data, headerStart, this.glbChunkHeaderInts);\n        const chunkStart = headerStart + this.glbChunkHeaderInts * 4;\n        const chunkLength = header[0];\n        const chunkType = header[1];\n        return { \"start\": chunkStart, \"length\": chunkLength, \"type\": chunkType };\n    }\n\n    getJsonFromChunk(chunkInfo)\n    {\n        const chunkLength = chunkInfo.length;\n        const jsonStart = (this.glbHeaderInts + this.glbChunkHeaderInts) * 4;\n        const jsonSlice = new Uint8Array(this.data, jsonStart, chunkLength);\n        const stringBuffer = new TextDecoder(\"utf-8\").decode(jsonSlice);\n        return JSON.parse(stringBuffer);\n    }\n\n    getBufferFromChunk(chunkInfo)\n    {\n        return this.data.slice(chunkInfo.start, chunkInfo.start + chunkInfo.length);\n    }\n\n    checkEquality(actual, expected, name)\n    {\n        if (actual == expected)\n        {\n            return true;\n        }\n\n        console.error(\"Found invalid/unsupported \" + name + \", expected: \" + expected + \", but was: \" + actual);\n        return false;\n    }\n}\n\nexport { GlbParser };\n","\nclass gltfLoader\n{\n    static async load(gltf, webGlContext, appendix = undefined)\n    {\n        const buffers = gltfLoader.getBuffers(appendix);\n        const additionalFiles = gltfLoader.getAdditionalFiles(appendix);\n\n        const buffersPromise = gltfLoader.loadBuffers(gltf, buffers, additionalFiles);\n\n        await buffersPromise; // images might be stored in the buffers\n        const imagesPromise = gltfLoader.loadImages(gltf, additionalFiles);\n\n        return await Promise.all([buffersPromise, imagesPromise])\n            .then(() => gltf.initGl(webGlContext));\n    }\n\n    static unload(gltf)\n    {\n        for (let image of gltf.images)\n        {\n            image.image = undefined;\n        }\n        gltf.images = [];\n\n        for (let texture of gltf.textures)\n        {\n            texture.destroy();\n        }\n        gltf.textures = [];\n\n        for (let accessor of gltf.accessors)\n        {\n            accessor.destroy();\n        }\n        gltf.accessors = [];\n    }\n\n    static getBuffers(appendix)\n    {\n        return gltfLoader.getTypedAppendix(appendix, ArrayBuffer);\n    }\n\n    static getAdditionalFiles(appendix)\n    {\n        if(typeof(File) !== 'undefined')\n        {\n            return gltfLoader.getTypedAppendix(appendix, File);\n        }\n        else\n        {\n            return;\n        }\n    }\n\n    static getTypedAppendix(appendix, Type)\n    {\n        if (appendix && appendix.length > 0)\n        {\n            if (appendix[0] instanceof Type)\n            {\n                return appendix;\n            }\n        }\n    }\n\n    static loadBuffers(gltf, buffers, additionalFiles)\n    {\n        const promises = [];\n        if (buffers)\n        {\n            const count = Math.min(buffers.length, gltf.buffers.length);\n            for (let i = 0; i < count; ++i)\n            {\n                gltf.buffers[i].buffer = buffers[i];\n            }\n        }\n        else\n        {\n            for (const buffer of gltf.buffers)\n            {\n                promises.push(buffer.load(gltf, additionalFiles));\n            }\n        }\n        return Promise.all(promises);\n    }\n\n    static loadImages(gltf, additionalFiles)\n    {\n        const imagePromises = [];\n        for (let image of gltf.images)\n        {\n            imagePromises.push(image.load(gltf, additionalFiles));\n        }\n        return Promise.all(imagePromises);\n    }\n}\n\nexport { gltfLoader };\n","import { ShaderCache } from './Renderer/shader_cache.js';\n\n\nimport iblFiltering from './shaders/ibl_filtering.frag';\nimport panoramaToCubeMap from './shaders/panorama_to_cubemap.frag';\nimport debugOutput from './shaders/debug.frag';\nimport fullscreenShader from './shaders/fullscreen.vert';\n\n\n// How to use:\n// set canvas/context in constructor\n// init(input: panorama image)\n// filterAll()\n// fetch texture IDs\n\nclass iblSampler\n{\n    constructor(view)\n    {\n\n        this.gl = view.context;\n\n        this.textureSize = 256;\n        this.sampleCount = 64;\n        this.lodBias = 0.0;\n        this.mipmapCount = undefined;\n\n\n        this.lambertianTextureID = undefined;\n        this.ggxTextureID = undefined;\n        this.sheenTextureID = undefined;\n\n\n        this.inputTextureID = undefined;\n        this.cubemapTextureID = undefined;\n        this.framebuffer = undefined;\n\n        const shaderSources = new Map();\n\n        shaderSources.set(\"fullscreen.vert\", fullscreenShader);\n        shaderSources.set(\"panorama_to_cubemap.frag\", panoramaToCubeMap);\n        shaderSources.set(\"ibl_filtering.frag\", iblFiltering);\n        shaderSources.set(\"debug.frag\", debugOutput);\n\n        this.shaderCache = new ShaderCache(shaderSources, view.renderer.webGl);\n\n\n    }\n\n    /////////////////////////////////////////////////////////////////////\n\n\n    loadTextureHDR(image)\n    {\n\n        var texture = this.gl.createTexture();\n\n        this.gl.bindTexture( this.gl.TEXTURE_2D,  texture);\n\n        var internalFormat = this.gl.RGB32F;\n        var format = this.gl.RGB;\n        var type = this.gl.FLOAT;\n        var data = undefined;\n\n        if (image.dataFloat instanceof Float32Array && typeof(this.gl.RGB32F) !== 'undefined')\n        {\n            internalFormat = this.gl.RGB32F;\n            format = this.gl.RGB;\n            type = this.gl.FLOAT;\n            data = image.dataFloat;\n        }\n        else if(image.dataFloat instanceof Float32Array)\n        {\n            // workaround for node-gles not supporting RGB32F\n            internalFormat = this.gl.RGBA32F;\n            format = this.gl.RGBA;\n            type = this.gl.FLOAT;\n\n            const numPixels = image.dataFloat.length / 3;\n            data = new Float32Array(numPixels * 4);\n            for(let i = 0; i < numPixels; ++i)\n            {\n                // copy the pixels and padd the alpha channel\n                data[i] = image.dataFloat[i];\n                data[i+1] = image.dataFloat[i+1];\n                data[i+2] = image.dataFloat[i+2];\n                data[i+3] = 0;\n            }\n        }\n        else if (typeof(Image) !== 'undefined' && image instanceof Image)\n        {\n            internalFormat = this.gl.RGBA;\n            format = this.gl.RGBA;\n            type = this.gl.UNSIGNED_BYTE;\n            data = image;\n        }\n        else\n        {\n            console.error(\"loadTextureHDR failed, unsupported HDR image\");\n            return;\n        }\n\n\n        this.gl.texImage2D(\n            this.gl.TEXTURE_2D,\n            0, //level\n            internalFormat,\n            image.width,\n            image.height,\n            0, //border\n            format,\n            type,\n            data);\n\n        this.gl.texParameteri( this.gl.TEXTURE_2D,  this.gl.TEXTURE_WRAP_S,  this.gl.MIRRORED_REPEAT);\n        this.gl.texParameteri( this.gl.TEXTURE_2D,  this.gl.TEXTURE_WRAP_T,  this.gl.MIRRORED_REPEAT);\n        this.gl.texParameteri( this.gl.TEXTURE_2D,  this.gl.TEXTURE_MIN_FILTER,  this.gl.LINEAR);\n        this.gl.texParameteri( this.gl.TEXTURE_2D,  this.gl.TEXTURE_MAG_FILTER,  this.gl.LINEAR);\n\n        return texture;\n    }\n\n\n\n    createCubemapTexture(withMipmaps)\n    {\n        var targetTexture =  this.gl.createTexture();\n        this.gl.bindTexture( this.gl.TEXTURE_CUBE_MAP, targetTexture);\n\n\n        // define size and format of level 0\n        const level = 0;\n        const internalFormat = this.use8bit ? this.gl.RGBA8 : this.gl.RGBA32F;\n        const border = 0;\n        const format = this.gl.RGBA;\n        const type = this.use8bit ? this.gl.UNSIGNED_BYTE : this.gl.FLOAT;\n        const data = null;\n\n        for(var i = 0; i < 6; ++i)\n        {\n            this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level, internalFormat,\n                this.textureSize, this.textureSize, border,\n                format, type, data);\n\n        }\n\n        if(withMipmaps)\n        {\n            this.gl.texParameteri( this.gl.TEXTURE_CUBE_MAP,  this.gl.TEXTURE_MIN_FILTER,  this.gl.LINEAR_MIPMAP_LINEAR);\n        }\n        else\n        {\n            this.gl.texParameteri( this.gl.TEXTURE_CUBE_MAP,  this.gl.TEXTURE_MIN_FILTER,  this.gl.LINEAR);\n        }\n\n        this.gl.texParameteri( this.gl.TEXTURE_CUBE_MAP,  this.gl.TEXTURE_MAG_FILTER,  this.gl.LINEAR);\n        this.gl.texParameteri( this.gl.TEXTURE_CUBE_MAP,  this.gl.TEXTURE_WRAP_S,  this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri( this.gl.TEXTURE_CUBE_MAP,  this.gl.TEXTURE_WRAP_T,  this.gl.CLAMP_TO_EDGE);\n\n        return targetTexture;\n    }\n\n    init(panoramaImage)\n    {\n        if (!this.gl.getExtension('EXT_color_buffer_float'))\n        {\n            this.use8bit = true;\n        }\n\n        this.inputTextureID = this.loadTextureHDR(panoramaImage);\n\n        this.cubemapTextureID = this.createCubemapTexture(true);\n\n        this.framebuffer = this.gl.createFramebuffer();\n\n        this.lambertianTextureID = this.createCubemapTexture(false);\n        this.ggxTextureID = this.createCubemapTexture(true);\n        this.sheenTextureID = this.createCubemapTexture(true);\n\n\n        this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.ggxTextureID);\n        this.gl.generateMipmap(this.gl.TEXTURE_CUBE_MAP);\n\n        this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.sheenTextureID);\n        this.gl.generateMipmap(this.gl.TEXTURE_CUBE_MAP);\n\n        this.mipmapLevels = Math.floor(Math.log2(this.textureSize))+1;\n    }\n\n    filterAll()\n    {\n        this.panoramaToCubeMap();\n        this.cubeMapToLambertian();\n        this.cubeMapToGGX();\n        this.cubeMapToSheen();\n\n        this.gl.bindFramebuffer(  this.gl.FRAMEBUFFER, null);\n    }\n\n\n\n\n    panoramaToCubeMap()\n    {\n        for(var i = 0; i < 6; ++i)\n        {\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer);\n            var side = i;\n            this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_CUBE_MAP_POSITIVE_X+side, this.cubemapTextureID, 0);\n\n            this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.cubemapTextureID);\n\n            this.gl.viewport(0, 0,  this.textureSize,  this.textureSize);\n\n            this.gl.clearColor(1.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT| this.gl.DEPTH_BUFFER_BIT);\n\n            const vertexHash = this.shaderCache.selectShader(\"fullscreen.vert\", []);\n            const fragmentHash = this.shaderCache.selectShader(\"panorama_to_cubemap.frag\", []);\n\n            var shader = this.shaderCache.getShaderProgram(fragmentHash, vertexHash);\n            this.gl.useProgram(shader.program);\n\n            //  TEXTURE0 = active.\n            this.gl.activeTexture(this.gl.TEXTURE0+0);\n\n            // Bind texture ID to active texture\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.inputTextureID);\n\n            // map shader uniform to texture unit (TEXTURE0)\n            const location = this.gl.getUniformLocation(shader.program,\"u_panorama\");\n            this.gl.uniform1i(location, this.gl.TEXTURE0+0); // texture unit 0 (TEXTURE0)\n\n            shader.updateUniform(\"u_currentFace\", i);\n\n            //fullscreen triangle\n            this.gl.drawArrays(this.gl.TRIANGLES, 0, 3);\n        }\n\n        this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.cubemapTextureID);\n        this.gl.generateMipmap(this.gl.TEXTURE_CUBE_MAP);\n\n    }\n\n\n    applyFilter(\n        distribution,\n        roughness,\n        targetMipLevel,\n        targetTexture)\n    {\n        var currentTextureSize =  this.textureSize>>(targetMipLevel);\n\n        for(var i = 0; i < 6; ++i)\n        {\n\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer);\n            var side = i;\n            this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_CUBE_MAP_POSITIVE_X+side, targetTexture, targetMipLevel);\n\n            this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, targetTexture);\n\n            this.gl.viewport(0, 0, currentTextureSize, currentTextureSize);\n\n            this.gl.clearColor(1.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT| this.gl.DEPTH_BUFFER_BIT);\n\n\n            const vertexHash = this.shaderCache.selectShader(\"fullscreen.vert\", []);\n            const fragmentHash = this.shaderCache.selectShader(\"ibl_filtering.frag\", []);\n\n            var shader = this.shaderCache.getShaderProgram(fragmentHash, vertexHash);\n            this.gl.useProgram(shader.program);\n\n\n            //  TEXTURE0 = active.\n            this.gl.activeTexture(this.gl.TEXTURE0+0);\n\n            // Bind texture ID to active texture\n            this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.cubemapTextureID);\n\n            // map shader uniform to texture unit (TEXTURE0)\n            const location = this.gl.getUniformLocation(shader.program,\"u_cubemapTexture\");\n            this.gl.uniform1i(location, 0); // texture unit 0\n\n\n            shader.updateUniform(\"u_roughness\", roughness);\n            shader.updateUniform(\"u_sampleCount\", this.sampleCount)\n            shader.updateUniform(\"u_width\", this.textureSize);\n            shader.updateUniform(\"u_lodBias\", this.lodBias);\n            shader.updateUniform(\"u_distribution\", distribution);\n            shader.updateUniform(\"u_currentFace\", i);\n\n\n            //fullscreen triangle\n            this.gl.drawArrays(this.gl.TRIANGLES, 0, 3);\n\n        }\n\n    }\n\n    cubeMapToLambertian()\n    {\n        this.applyFilter(\n            0,\n            0.0,\n            0,\n            this.lambertianTextureID);\n    }\n\n\n    cubeMapToGGX()\n    {\n        for(var currentMipLevel = 0; currentMipLevel < this.mipmapLevels; ++currentMipLevel)\n        {\n            const roughness =  (currentMipLevel) /  (this.mipmapLevels - 1);\n            this.applyFilter(\n                1,\n                roughness,\n                currentMipLevel,\n                this.ggxTextureID);\n        }\n    }\n\n    cubeMapToSheen()\n    {\n        for(var currentMipLevel = 0; currentMipLevel < this.mipmapLevels; ++currentMipLevel)\n        {\n            const roughness =  (currentMipLevel) /  (this.mipmapLevels - 1);\n            this.applyFilter(\n                2,\n                roughness,\n                currentMipLevel,\n                this.sheenTextureID);\n        }\n    }\n\n\n    destroy()\n    {\n        this.shaderCache.destroy();\n    }\n}\n\nexport { iblSampler };\n","class KtxDecoder {\n\n    constructor (context, externalKtxlib) {\n        this.gl = context;\n        this.libktx = null;\n        if (context !== undefined)\n        {\n            if (externalKtxlib === undefined && LIBKTX !== undefined)\n            {\n                externalKtxlib = LIBKTX;\n            }\n            if (externalKtxlib !== undefined)\n            {\n                this.initializied = this.init(context, externalKtxlib);\n            }\n            else\n            {\n                console.error('Failed to initalize KTXDecoder: ktx library undefined');\n                return undefined;\n            }\n        }\n        else\n        {\n            console.error('Failed to initalize KTXDecoder: WebGL context undefined');\n            return undefined;\n        }\n    }\n\n    async init(context, externalKtxlib) {\n        this.libktx = await externalKtxlib({preinitializedWebGLContext: context});\n        this.libktx.GL.makeContextCurrent(this.libktx.GL.createContext(null, { majorVersion: 2.0 }));\n    }\n\n    transcode(ktexture) {\n        if (ktexture.needsTranscoding) {\n            let format;\n\n            let astcSupported = false;\n            let etcSupported = false;\n            let dxtSupported = false;\n            let pvrtcSupported = false;\n\n            astcSupported = !!this.gl.getExtension('WEBGL_compressed_texture_astc');\n            etcSupported = !!this.gl.getExtension('WEBGL_compressed_texture_etc1');\n            dxtSupported = !!this.gl.getExtension('WEBGL_compressed_texture_s3tc');\n            pvrtcSupported = !!(this.gl.getExtension('WEBGL_compressed_texture_pvrtc')) || !!(this.gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'));\n\n            if (astcSupported) {\n                format = this.libktx.TranscodeTarget.ASTC_4x4_RGBA;\n            } else if (dxtSupported) {\n                format = this.libktx.TranscodeTarget.BC1_OR_3;\n            } else if (pvrtcSupported) {\n                format = this.libktx.TranscodeTarget.PVRTC1_4_RGBA;\n            } else if (etcSupported) {\n                format = this.libktx.TranscodeTarget.ETC;\n            } else {\n                format = this.libktx.TranscodeTarget.RGBA8888;\n            }\n            if (ktexture.transcodeBasis(format, 0) != this.libktx.ErrorCode.SUCCESS) {\n                console.warn('Texture transcode failed. See console for details.');\n            }\n        }\n    }\n\n    async loadKtxFromUri(uri) {\n        await this.initializied;\n        const response = await fetch(uri);\n        const data = new Uint8Array(await response.arrayBuffer());\n        const texture = new this.libktx.ktxTexture(data);\n        this.transcode(texture);\n        let uploadResult = texture.glUpload();\n        uploadResult.texture.levels = Math.log2(texture.baseWidth);\n        return uploadResult.texture;\n    }\n\n    async loadKtxFromBuffer(data) {\n        await this.initializied;\n        const texture = new this.libktx.ktxTexture(data);\n        this.transcode(texture);\n        const uploadResult = texture.glUpload();\n        return uploadResult.texture;\n    }\n}\n\nexport { KtxDecoder };\n","/**\n * hdrpng.js - Original code from Enki https://enkimute.github.io/hdrpng.js/\n *\n * Refactored and simplified.\n */\n\nimport { gltfImage } from \"../gltf/image\";\n\nfunction _rgbeToFloat(buffer)\n{\n    const length = buffer.byteLength >> 2;\n    const result = new Float32Array(length * 3);\n\n    for (let i = 0; i < length; i++)\n    {\n        const s = Math.pow(2, buffer[i * 4 + 3] - (128 + 8));\n\n        result[i * 3] = buffer[i * 4] * s;\n        result[i * 3 + 1] = buffer[i * 4 + 1] * s;\n        result[i * 3 + 2] = buffer[i * 4 + 2] * s;\n    }\n    return result;\n}\n\nasync function loadHDR(buffer)\n{\n    let header = '';\n    let pos = 0;\n    const d8 = buffer;\n    let format = undefined;\n    // read header.\n    while (!header.match(/\\n\\n[^\\n]+\\n/g)) header += String.fromCharCode(d8[pos++]);\n    // check format.\n    format = header.match(/FORMAT=(.*)$/m)[1];\n    if (format != '32-bit_rle_rgbe') return console.warn('unknown format : ' + format), this.onerror();\n    // parse resolution\n    const rez = header.split(/\\n/).reverse()[1].split(' '), width = rez[3] * 1, height = rez[1] * 1;\n    // Create image.\n    const img = new Uint8Array(width * height * 4)\n    let ipos = 0;\n    // Read all scanlines\n    for (let j = 0; j < height; j++)\n    {\n        const scanline = [];\n\n        const rgbe = d8.slice(pos, pos += 4);\n        const isNewRLE = (rgbe[0] == 2 && rgbe[1] == 2 && rgbe[2] == ((width >> 8) & 0xFF) && rgbe[3] == (width & 0xFF));\n\n        if (isNewRLE && (width >= 8) && (width < 32768))\n        {\n            for (let i = 0; i < 4; i++)\n            {\n                let ptr = i * width;\n                const ptr_end = (i + 1) * width;\n                let buf = undefined;\n                let count = undefined;\n                while (ptr < ptr_end)\n                {\n                    buf = d8.slice(pos, pos += 2);\n                    if (buf[0] > 128)\n                    {\n                        count = buf[0] - 128;\n                        while (count-- > 0) scanline[ptr++] = buf[1];\n                    }\n                    else\n                    {\n                        count = buf[0] - 1;\n                        scanline[ptr++] = buf[1];\n                        while (count-- > 0) scanline[ptr++] = d8[pos++];\n                    }\n                }\n            }\n\n            for (let i = 0; i < width; i++)\n            {\n                img[ipos++] = scanline[i + 0 * width];\n                img[ipos++] = scanline[i + 1 * width];\n                img[ipos++] = scanline[i + 2 * width];\n                img[ipos++] = scanline[i + 3 * width];\n            }\n        }\n        else\n        {\n            pos -= 4;\n\n            for (const i = 0; i < width; i++)\n            {\n                rgbe = d8.slice(pos, pos += 4);\n\n                img[ipos++] = rgbe[0];\n                img[ipos++] = rgbe[1];\n                img[ipos++] = rgbe[2];\n                img[ipos++] = rgbe[3];\n            }\n        }\n    }\n\n    const imageFloatBuffer = _rgbeToFloat(img);\n\n    return {\n        dataFloat: imageFloatBuffer,\n        width: width,\n        height: height\n    };\n}\n\nexport { loadHDR };\n","\nimport  axios from 'axios';\nimport { glTF } from '../gltf/gltf.js';\nimport { getIsGlb, getContainingFolder } from '../gltf/utils.js';\nimport { GlbParser } from './glb_parser.js';\nimport { gltfLoader } from \"./loader.js\";\nimport { gltfImage, ImageMimeType } from \"../gltf/image.js\";\nimport { gltfTexture, gltfTextureInfo } from '../gltf/texture.js';\nimport { gltfSampler } from '../gltf/sampler.js';\nimport { GL } from '../Renderer/webgl.js';\nimport { iblSampler } from '../ibl_sampler.js';\n\n\nimport { AsyncFileReader } from './async_file_reader.js';\n\nimport { DracoDecoder } from './draco.js';\nimport { KtxDecoder } from './ktx.js';\n\nimport { loadHDR } from '../libs/hdrpng.js';\n\nfunction initKtxLib(view, ktxlib)\n{\n    view.ktxDecoder = new KtxDecoder(view.context,ktxlib);\n}\n\nasync function initDracoLib(dracolib)\n{\n    const dracoDecoder = new DracoDecoder(dracolib);\n    if (dracoDecoder !== undefined)\n    {\n        await dracoDecoder.ready();\n    }\n}\n\nasync function loadGltf(file, view, additionalFiles)\n{\n    let isGlb = undefined;\n    let buffers = undefined;\n    let json = undefined;\n    let data = undefined;\n    let filename = \"\";\n    if(typeof file === \"string\")\n    {\n        isGlb = getIsGlb(file);\n        let response = await axios.get(file, { responseType: isGlb ? \"arraybuffer\" : \"json\" });\n        json = response.data;\n        data = response.data;\n        filename = file;\n    }\n    else if(file instanceof ArrayBuffer)\n    {\n        isGlb = additionalFiles === undefined;\n        if (isGlb)\n        {\n            data = file;\n        }\n        else\n        {\n            // TODO\n        }\n    }\n    else if(typeof(File) !== 'undefined' && file instanceof File)\n    {\n        let fileContent = file;\n        filename = file.name;\n        isGlb = getIsGlb(filename);\n        if (isGlb)\n        {\n            data = await AsyncFileReader.readAsArrayBuffer(fileContent);\n        }\n        else\n        {\n            data = await AsyncFileReader.readAsText(fileContent);\n            json = JSON.parse(data);\n            buffers = additionalFiles;\n        }\n    }\n    else\n    {\n        console.error(\"Passed invalid type to loadGltf \" + typeof(file));\n    }\n\n    if (isGlb)\n    {\n        const glbParser = new GlbParser(data);\n        const glb = glbParser.extractGlbData();\n        json = glb.json;\n        buffers = glb.buffers;\n    }\n\n    const gltf = new glTF(filename);\n    gltf.ktxDecoder = view.ktxDecoder;\n    //Make sure draco decoder instance is ready\n    gltf.fromJson(json);\n\n    // because the gltf image paths are not relative\n    // to the gltf, we have to resolve all image paths before that\n    for (const image of gltf.images)\n    {\n        image.resolveRelativePath(getContainingFolder(gltf.path));\n    }\n\n    await gltfLoader.load(gltf, view.context, buffers);\n\n    return gltf;\n}\n\n\nasync function loadEnvironment(file, view)\n{\n    let image = undefined;\n    if (typeof file === \"string\")\n    {\n        let response = await axios.get(file, { responseType: \"arraybuffer\" });\n\n        image = await loadHDR(new Uint8Array(response.data));\n    }\n    else if(file instanceof ArrayBuffer)\n    {\n        image = await loadHDR(new Uint8Array(file));\n    }\n    else\n    {\n        const imageData = await AsyncFileReader.readAsArrayBuffer(file).catch( () => {\n            console.error(\"Could not load image with FileReader\");\n        });\n        image = await loadHDR(new Uint8Array(imageData));\n    }\n    return loadEnvironmentFromImage(image, view);\n}\n\n\nasync function loadEnvironmentFromImage(imageHDR, view)\n{\n    // The environment uses the same type of samplers, textures and images as used in the glTF class\n    // so we just use it as a template\n    const environment = new glTF();\n\n    //\n    // Prepare samplers.\n    //\n\n    let samplerIdx = environment.samplers.length;\n\n    environment.samplers.push(new gltfSampler(GL.LINEAR, GL.LINEAR, GL.CLAMP_TO_EDGE, GL.CLAMP_TO_EDGE, \"DiffuseCubeMapSampler\"));\n    const diffuseCubeSamplerIdx = samplerIdx++;\n\n    environment.samplers.push(new gltfSampler(GL.LINEAR, GL.LINEAR_MIPMAP_LINEAR, GL.CLAMP_TO_EDGE, GL.CLAMP_TO_EDGE, \"SpecularCubeMapSampler\"));\n    const specularCubeSamplerIdx = samplerIdx++;\n\n    environment.samplers.push(new gltfSampler(GL.LINEAR, GL.LINEAR_MIPMAP_LINEAR, GL.CLAMP_TO_EDGE, GL.CLAMP_TO_EDGE, \"SheenCubeMapSampler\"));\n    const sheenCubeSamplerIdx = samplerIdx++;\n\n    environment.samplers.push(new gltfSampler(GL.LINEAR, GL.LINEAR, GL.CLAMP_TO_EDGE, GL.CLAMP_TO_EDGE, \"LUTSampler\"));\n    const lutSamplerIdx = samplerIdx++;\n\n    //\n    // Prepare images and textures.\n    //\n\n    let imageIdx = environment.images.length;\n\n    let environmentFiltering = new iblSampler(view);\n\n    environmentFiltering.init(imageHDR);\n    environmentFiltering.filterAll();\n\n    // Diffuse\n\n    const diffuseGltfImage = new gltfImage(\n        undefined,\n        GL.TEXTURE_CUBE_MAP,\n        0,\n        undefined,\n        \"Diffuse\",\n        ImageMimeType.GLTEXTURE,\n        environmentFiltering.lambertianTextureID\n        );\n\n    environment.images.push(diffuseGltfImage);\n\n    const diffuseTexture = new gltfTexture(\n        diffuseCubeSamplerIdx,\n        [imageIdx++],\n        GL.TEXTURE_CUBE_MAP,\n        environmentFiltering.lambertianTextureID);\n\n    environment.textures.push(diffuseTexture);\n\n    environment.diffuseEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.diffuseEnvMap.generateMips = false;\n\n\n\n    // Specular\n    const specularGltfImage = new gltfImage(\n        undefined,\n        GL.TEXTURE_CUBE_MAP,\n        0,\n        undefined,\n        \"Specular\",\n        ImageMimeType.GLTEXTURE,\n        environmentFiltering.ggxTextureID\n        );\n\n    environment.images.push(specularGltfImage);\n\n    const specularTexture = new gltfTexture(\n        specularCubeSamplerIdx,\n        [imageIdx++],\n        GL.TEXTURE_CUBE_MAP,\n        environmentFiltering.ggxTextureID);\n\n    environment.textures.push(specularTexture);\n\n    environment.specularEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.specularEnvMap.generateMips = false;\n\n\n    // Sheen\n    const sheenGltfImage = new gltfImage(\n        undefined,\n        GL.TEXTURE_CUBE_MAP,\n        0,\n        undefined,\n        \"Sheen\",\n        ImageMimeType.GLTEXTURE,\n        environmentFiltering.ggxTextureID\n        );\n\n    environment.images.push(sheenGltfImage);\n\n    const sheenTexture = new gltfTexture(\n        sheenCubeSamplerIdx,\n        [imageIdx++],\n        GL.TEXTURE_CUBE_MAP,\n        environmentFiltering.sheenTextureID);\n\n    environment.textures.push(sheenTexture);\n\n    environment.sheenEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.sheenEnvMap.generateMips = false;\n\n/*\n    // Diffuse\n\n    const lambertian = new gltfImage(filteredEnvironmentsDirectoryPath + \"/lambertian/diffuse.ktx2\", GL.TEXTURE_CUBE_MAP);\n    lambertian.mimeType = ImageMimeType.KTX2;\n    environment.images.push(lambertian);\n    environment.textures.push(new gltfTexture(diffuseCubeSamplerIdx, [imageIdx++], GL.TEXTURE_CUBE_MAP));\n    environment.diffuseEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.diffuseEnvMap.generateMips = false;\n\n    // Specular\n\n    const specular = new gltfImage(filteredEnvironmentsDirectoryPath + \"/ggx/specular.ktx2\", GL.TEXTURE_CUBE_MAP);\n    specular.mimeType = ImageMimeType.KTX2;\n    environment.images.push(specular);\n    environment.textures.push(new gltfTexture(specularCubeSamplerIdx, [imageIdx++], GL.TEXTURE_CUBE_MAP));\n    environment.specularEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.specularEnvMap.generateMips = false;\n\n    const specularImage = environment.images[environment.textures[environment.textures.length - 1].source];\n\n    // Sheen\n\n    const sheen = new gltfImage(filteredEnvironmentsDirectoryPath + \"/charlie/sheen.ktx2\", GL.TEXTURE_CUBE_MAP);\n    sheen.mimeType = ImageMimeType.KTX2;\n    environment.images.push(sheen);\n    environment.textures.push(new gltfTexture(sheenCubeSamplerIdx, [imageIdx++], GL.TEXTURE_CUBE_MAP));\n    environment.sheenEnvMap = new gltfTextureInfo(environment.textures.length - 1, 0, true);\n    environment.sheenEnvMap.generateMips = false;*/\n\n    //\n    // Look Up Tables.\n    //\n\n    // GGX\n\n    environment.images.push(new gltfImage(\"assets/images/lut_ggx.png\", GL.TEXTURE_2D));\n    environment.textures.push(new gltfTexture(lutSamplerIdx, [imageIdx++], GL.TEXTURE_2D));\n\n    environment.lut = new gltfTextureInfo(environment.textures.length - 1);\n    environment.lut.generateMips = false;\n\n    // Sheen\n    // Charlie\n\n    environment.images.push(new gltfImage(\"assets/images/lut_charlie.png\", GL.TEXTURE_2D));\n    environment.textures.push(new gltfTexture(lutSamplerIdx, [imageIdx++], GL.TEXTURE_2D));\n\n    environment.sheenLUT = new gltfTextureInfo(environment.textures.length - 1);\n    environment.sheenLUT.generateMips = false;\n\n    // Sheen E LUT\n\n    environment.images.push(new gltfImage(\"assets/images/lut_sheen_E.png\", GL.TEXTURE_2D));\n    environment.textures.push(new gltfTexture(lutSamplerIdx, [imageIdx++], GL.TEXTURE_2D));\n\n    environment.sheenELUT = new gltfTextureInfo(environment.textures.length - 1);\n    environment.sheenELUT.generateMips = false;\n\n    await gltfLoader.loadImages(environment);\n\n    environment.initGl(view.context);\n\n    environment.mipCount = environmentFiltering.mipmapLevels;\n\n    return environment;\n}\n\nexport { loadGltf, loadEnvironment, initKtxLib, initDracoLib};\n"],"names":["jsToGl","array","tensor","glMatrix","ARRAY_TYPE","length","i","jsToGlSlice","offset","stride","initGlForMembers","gltfObj","gltf","webGlContext","name","Object","keys","member","undefined","initGl","Array","isArray","element","objectsFromJsons","jsonObjects","GltfType","objects","jsonObject","push","objectFromJson","object","fromJson","fromKeys","target","jsonObj","ignore","k","find","elem","replace","stringHash","str","seed","Math","imul","charCodeAt","clamp","number","min","max","getIsGlb","filename","getExtension","getIsGltf","getIsHdr","split","toLowerCase","getFileNameWithoutExtension","filePath","getFileName","index","lastIndexOf","slice","getContainingFolder","substring","combinePaths","parts","from","arguments","join","UniformStruct","AnimationTimer","[object Object]","this","startTime","paused","fixedTime","pausedTime","Date","getTime","unpause","pause","timeInSec","GltfObject","extensions","extras","json","gltfCamera","type","znear","zfar","yfov","PI","aspectRatio","xmag","ymag","nodeIndex","super","node","cameraIndex","nodes","camera","cameras","console","error","jsonCamera","perspective","orthographic","drawables","drawable","modelView","mat4","create","multiply","getViewMatrix","worldTransform","pos","vec3","transformMat4","clone","primitive","centroid","depth","filter","a","sort","b","projection","view","position","getPosition","getLookAtTarget","lookAt","fromValues","lookDirection","getLookDirection","add","getNode","getTranslation","direction","rotation","getRotation","transformQuat","quat","getExtentsFromAccessor","accessor","outMin","outMax","boxMin","boxMax","center","scale","centerToSurface","sub","radius","computePrimitiveCentroids","primitives","mesh","map","meshes","reduce","acc","concat","positions","accessors","attributes","POSITION","getTypedView","indices","Float32Array","setCentroid","positionVectors","VecZero","UserCamera","up","xRot","yRot","zoom","zoomFactor","rotateSpeed","panSpeed","sceneExtents","toLocalRotation","fitCameraPlanesToExtents","sceneIndex","fitViewToScene","value","x","y","yMax","left","longestDistance","distance","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","nodeIndices","scenes","pop","children","attribute","glAttributes","assetMin","assetMax","getSceneExtents","fitCameraTargetToExtents","fitZoomToExtents","fitPanSpeedToScene","vector","rotateX","rotateY","maxAxisLength","getFittingZoom","zNear","zFar","axisLength","xfov","yZoom","tan","xZoom","isPowerOf2","n","AsyncFileReader","path","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsArrayBuffer","readAsText","readAsDataURL","ImageMimeType","GL","gltfWebGl","context","webglExtensions","extension","warn","loc","textureInfo","texSlot","gltfTex","textures","image","images","source","mimeType","glTexture","initialized","createTexture","activeTexture","TEXTURE0","bindTexture","uniform1i","gltfSampler","samplers","sampler","pixelStorei","UNPACK_FLIP_Y_WEBGL","internalformat","linear","RGBA","SRGB8_ALPHA8","texImage2D","miplevel","UNSIGNED_BYTE","generateMips","shouldGenerateMips","setSampler","minFilter","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","generateMipmap","accessorIndex","gltfAccessor","glBuffer","createBuffer","data","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","attributeLocation","bufferView","gltfBufferView","bufferViews","ARRAY_BUFFER","vertexAttribPointer","getComponentCount","componentType","normalized","byteStride","enableVertexAttribArray","shaderIdentifier","isVert","shaderSource","shader","createShader","VERTEX_SHADER","FRAGMENT_SHADER","compileShader","getShaderParameter","COMPILE_STATUS","info","messages","getShaderInfoLog","message","matches","match","lineNumber","parseInt","lines","Error","vertex","fragment","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","gltfSamplerObj","generateMipmaps","texParameteri","TEXTURE_WRAP_S","wrapS","TEXTURE_WRAP_T","wrapT","CLAMP_TO_EDGE","NEAREST","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","magFilter","supports_EXT_texture_filter_anisotropic","texParameterf","anisotropy","maxAnisotropy","gltfImage","uri","TEXTURE_2D","basePath","startsWith","substr","additionalFiles","setImageFromBufferView","setImageFromFiles","setImageFromUri","url","Image","addEventListener","src","crossOrigin","ktxDecoder","loadKtxFromUri","loadHTMLImage","catch","buffer","buffers","Uint8Array","byteOffset","byteLength","loadKtxFromBuffer","jpeg.decode","useTArray","png.decode","blob","Blob","objectURL","URL","createObjectURL","files","foundFile","file","fullPath","arrayBuffer","imageData","width","height","ToneMaps","NONE","ACES_FAST","ACES","DebugOutput","METALLIC","ROUGHNESS","NORMAL","WORLDSPACENORMAL","GEOMETRYNORMAL","TANGENT","BITANGENT","BASECOLOR","OCCLUSION","EMISSIVE","DIFFUSE","SPECULAR","CLEARCOAT","SHEEN","TRANSMISSION","ALPHA","F0","GltfState","environment","renderingParameters","morphing","skinning","clearColor","exposure","usePunctual","useIBL","toneMap","debugOutput","environmentBackground","environmentRotation","userCamera","animationIndices","animationTimer","variant","gltfShader","hash","gl","uniforms","Map","unknownAttributes","unknownUniforms","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","set","attribCount","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","deleteProgram","get","log","uniform","objectName","updateUniformStruct","updateUniformArray","updateUniformValue","arrayName","uniformName","updateUniform","flat","apply","structName","memberNames","memberName","FLOAT","uniform1fv","uniform1f","FLOAT_VEC2","uniform2fv","FLOAT_VEC3","uniform3fv","FLOAT_VEC4","uniform4fv","INT","Uint32Array","Int32Array","uniform1iv","INT_VEC2","uniform2iv","INT_VEC3","uniform3iv","INT_VEC4","uniform4iv","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","ShaderCache","sources","shaders","programs","key","changed","includeName","includeSource","pattern","includes","entries","deleteShader","clear","destroy","permutationDefines","endsWith","defines","define","vertexShaderHash","fragmentShaderHash","hash1","hash2","linkedProg","gltfRenderer","currentWidth","currentHeight","webGl","opaqueRenderTexture","opaqueFramebuffer","opaqueDepthTexture","opaqueFramebufferWidth","opaqueFramebufferHeight","shaderSources","shaderCache","loadWebGlExtensions","visibleLights","viewMatrix","projMatrix","viewProjectionMatrix","currentCameraPosition","init","UNPACK_COLORSPACE_CONVERSION_WEBGL","enable","DEPTH_TEST","depthFunc","LEQUAL","colorMask","clearDepth","DEPTH_COMPONENT16","DEPTH_COMPONENT","UNSIGNED_SHORT","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","viewport","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","state","scene","currentCamera","getProjectionMatrix","getVisibleLights","gatherNodes","skin","updateSkin","material","opaqueDrawables","materials","alphaMode","KHR_materials_transmission","transparentDrawables","sortPrimitivesByDepth","drawPrimitive","transmissionDrawables","transmissionSampleTexture","skip","mappings","idx","variants","obj","indexOf","materialIdx","forEach","vertDefines","pushVertParameterDefines","getDefines","fragDefines","pushFragParameterDefines","fragmentHash","selectShader","getShaderIdentifier","vertexHash","getShaderProgram","useProgram","applyLights","normalMatrix","updateAnimationUniforms","determinant","frontFace","CW","CCW","doubleSided","disable","CULL_FACE","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","blendEquation","FUNC_ADD","drawIndexed","setIndices","vertexCount","count","location","getAttributeLocation","enableAttribute","val","getProperties","samplerName","setTexture","textureCount","applyEnvironmentMap","sheenELUT","uniform2i","indexAccessor","drawElements","mode","drawArrays","disableVertexAttribArray","lights","light","includesNode","skins","computeJoints","parameters","hasWeights","hasJoints","jointMatrices","targets","weights","hasNormals","jointNormalMatrices","uniformLights","toUniform","texSlotOffset","diffuseEnvMap","specularEnvMap","lut","sheenEnvMap","sheenLUT","mipCount","rotMatrix4","rotMatrix3","mat3","fromMat4","GltfView","ui","renderer","canvas","window","innerWidth","getBoundingClientRect","clientWidth","clientHeight","resize","clearFrame","applyTransformHierarchy","drawScene","animations","t","elapsedSec","animation","advance","activeMeshes","activePrimitives","activeMaterials","Set","opaqueMaterials","transparentMaterials","faceCount","verticesCount","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","meshCount","opaqueMaterialsCount","transparentMaterialsCount","update","animate","updateCanvas","updateViewport","renderFrame","requestAnimationFrame","fn","thisArg","args","toString","prototype","call","isUndefined","isObject","isPlainObject","getPrototypeOf","isFunction","l","hasOwnProperty","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","document","merge","assignValue","extend","bind","trim","stripBOM","content","encode","encodeURIComponent","params","paramsSerializer","serializedParams","utils","v","toISOString","JSON","stringify","hashmarkIndex","InterceptorManager","handlers","use","fulfilled","rejected","eject","id","h","headers","fns","__CANCEL__","normalizedName","toUpperCase","config","code","request","response","isAxiosError","toJSON","description","fileName","columnNumber","stack","enhanceError","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","remove","now","ignoreDuplicateOf","originURL","msie","test","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hostname","port","pathname","charAt","requestURL","parsed","requestData","requestHeaders","XMLHttpRequest","auth","username","password","unescape","Authorization","btoa","baseURL","requestedURL","relativeURL","combineURLs","open","method","buildURL","timeout","onreadystatechange","readyState","status","responseURL","responseHeaders","getAllResponseHeaders","line","responseType","responseText","statusText","validateStatus","createError","settle","onabort","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","isURLSameOrigin","xsrfCookieName","cookies","xsrfHeaderName","setRequestHeader","e","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","adapter","defaults","process","require$$0","transformRequest","normalizeHeaderName","transformResponse","parse","maxContentLength","maxBodyLength","common","Accept","throwIfCancellationRequested","throwIfRequested","transformData","reason","isCancel","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","mergeDeepProperties","prop","axiosKeys","otherKeys","Axios","instanceConfig","interceptors","mergeConfig","chain","dispatchRequest","interceptor","unshift","shift","getUri","Cancel","CancelToken","executor","TypeError","resolvePromise","token","c","createInstance","defaultConfig","instance","axios","require$$1","require$$2","all","promises","spread","callback","arr","payload","sparse","typedView","filteredView","componentSize","getComponentSize","componentCount","arrayLength","BYTE","Int8Array","SHORT","Int16Array","Uint16Array","UNSIGNED_INT","applySparse","dv","DataView","func","floor","indicesBufferView","indicesBuffer","indicesByteOffset","indicesComponentSize","indicesComponentCount","indicesArrayLength","indicesTypedView","valuesBufferView","values","valuesBuffer","valuesByteOffset","valuesComponentSize","valuesComponentCount","valuesArrayLength","valuesTypedView","CompononentCount","WebGl","deleteBuffer","gltfBuffer","self","setBufferFromFiles","sefBufferFromUri","onloadend","event","gltfLight","color","intensity","innerConeAngle","outerConeAngle","range","nodeExtensions","lightsExtension","KHR_lights_punctual","lightIndex","jsonLight","spot","uLight","UniformLight","matrix","getScaling","mn","col","normalize","alongNegativeZ","translation","innerConeCos","cos","outerConeCos","Type_Spot","Type_Point","Type_Directional","defaultDirection","padding1","padding2","ImageBasedLight","brightnessFactor","brightnessOffset","specularEnvironmentTexture","diffuseEnvironmentTexture","sheenEnvironmentTexture","levelCount","jsonIBL","fromJsonExtensions","KHR_materials_sheen","TEXTURE_CUBE_MAP","textureObject","imageObject","gltfTexture","texture","mipLevelCount","jsonTexture","KHR_texture_basisu","deleteTexture","gltfTextureInfo","texCoord","strength","jsonTextureInfo","gltfMaterial","pbrMetallicRoughness","normalTexture","occlusionTexture","emissiveTexture","emissiveFactor","alphaCutoff","properties","defaultMaterial","baseColorFactor","vec4","textureKey","KHR_texture_transform","uvTransform","s","sin","uvMatrix","parseTextureInfoExtensions","baseColorTexture","metallicRoughnessTexture","diffuseTexture","specularGlossinessTexture","metallicFactor","roughnessFactor","KHR_materials_unlit","KHR_materials_pbrSpecularGlossiness","diffuseFactor","specularFactor","glossinessFactor","KHR_materials_clearcoat","clearcoatFactor","clearcoatRoughnessFactor","clearcoatTexture","clearcoatRoughnessTexture","clearcoatNormalTexture","sheenRoughnessFactor","sheenColorFactor","sheenRoughnessTexture","sheenColorTexture","transmissionFactor","transmissionTexture","jsonMaterial","fromJsonMaterialExtensions","fromJsonMetallicRoughness","jsonExtensions","fromJsonSpecularGlossiness","fromJsonClearcoat","fromJsonSheen","fromJsonTransmission","jsonMetallicRoughness","jsonSpecularGlossiness","jsonClearcoat","jsonSheen","jsonTransmission","DracoDecoder","dracoLib","DracoDecoderModule","module","initializingPromise","dracoDecoderType","dracoDecoderModule","freeze","gltfPrimitive","hasTangents","hasTexcoord","hasColor","maxAttributes","getParameter","MAX_VERTEX_ATTRIBS","KHR_draco_mesh_compression","dracoDecoder","isFrozen","dracoGeometry","decodeDracoBufferToIntermediate","copyDataFromDecodedGeometry","jsonPrimitive","fromJsonPrimitiveExtensions","KHR_materials_variants","fromJsonVariants","jsonVariants","primitiveAttributes","indexBuffer","loadBufferIntoGltf","positionBuffer","loadArrayIntoArrayBuffer","normalBuffer","TEXCOORD_0","uvBuffer","TEXCOORD_1","tangentBuffer","COLOR_0","colorBuffer","JOINTS_0","jointsBuffer","WEIGHTS_0","weightsBuffer","JOINTS_1","WEIGHTS_1","gltfAccessorIndex","gltfBufferViewTarget","gltfBufferViewName","gltfBufferObj","gltfBufferViewObj","arrayData","dracoExtension","dracoBufferViewIDX","origGltfDrBufViewObj","origGltfDracoBuffer","actualBuffer","draco","decoder","Decoder","decoderBuffer","DecoderBuffer","Init","geometry","decodeGeometry","gltfDracoAttributes","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","ok","ptr","error_msg","num_points","dracoAttr","accessotVertexCount","getDracoArrayTypeFromComponentType","dracoAttribute","GetAttributeByUniqueId","tmpObj","decodeAttribute","numIndices","num_faces","dataSize","_malloc","GetTrianglesUInt32Array","HEAPU32","_free","itemSize","attributeName","attributeType","numComponents","num_components","numValues","GetAttributeDataArrayForAllPoints","DT_FLOAT32","HEAPF32","DT_INT8","HEAP8","DT_INT16","HEAP16","DT_INT32","HEAP32","DT_UINT8","HEAPU8","DT_UINT16","HEAPU16","DT_UINT32","gltfMesh","jsonMesh","gltfNode","inverseWorldTransform","applyMatrix","matrixData","transform","fromRotationTranslationScale","REPEAT","gltfScene","imageBasedLight","KHR_lights_image_based","imageBasedLights","rootTransform","applyTransform","parentTransform","getLocalTransform","invert","transpose","child","gatherNode","childIndex","gltfAsset","copyright","generator","version","minVersion","gltfAnimationChannel","InterpolationPath","gltfAnimationSampler","input","interpolation","output","InterpolationModes","gltfInterpolator","prevKey","prevT","q1","q2","qn1","qn2","quatResult","slerp","nextKey","keyDelta","prevIndex","nextIndex","V","B","tSq","tCub","v0","v1","channel","maxTime","getDeinterlacedView","tn","cubicSpline","q0","getQuat","slerpQuat","step","z","w","gltfAnimation","channels","interpolators","jsonAnimation","totalTime","interpolator","applyTranslation","interpolate","applyRotation","applyScale","gltfSkin","inverseBindMatrices","joints","skeleton","parentNode","ibmAccessor","joint","jointMatrix","ibm","mul","gltfVariant","jsonVariant","glTF","asset","getJsonLightsFromExtensions","getJsonIBLsFromExtensions","getJsonVariantsFromExtension","j","enforceVariantsUniqueness","createDefault","GlbParser","glbHeaderInts","glbChunkHeaderInts","glbMagic","glbVersion","jsonChunkType","binaryChunkType","getCheckedGlbInfo","chunkInfos","getAllChunkInfos","chunkInfo","getBufferFromChunk","getJsonFromChunk","header","magic","checkEquality","infos","chunkStart","getChunkInfo","headerStart","start","chunkLength","jsonStart","jsonSlice","stringBuffer","TextDecoder","decode","actual","expected","gltfLoader","appendix","getBuffers","getAdditionalFiles","buffersPromise","loadBuffers","imagesPromise","loadImages","getTypedAppendix","File","Type","load","imagePromises","iblSampler","textureSize","sampleCount","lodBias","mipmapCount","lambertianTextureID","ggxTextureID","sheenTextureID","inputTextureID","cubemapTextureID","framebuffer","internalFormat","RGB32F","format","RGB","dataFloat","RGBA32F","numPixels","MIRRORED_REPEAT","withMipmaps","targetTexture","use8bit","RGBA8","TEXTURE_CUBE_MAP_POSITIVE_X","panoramaImage","loadTextureHDR","createCubemapTexture","mipmapLevels","log2","panoramaToCubeMap","cubeMapToLambertian","cubeMapToGGX","cubeMapToSheen","side","distribution","roughness","targetMipLevel","currentTextureSize","applyFilter","currentMipLevel","KtxDecoder","externalKtxlib","libktx","LIBKTX","initializied","preinitializedWebGLContext","makeContextCurrent","createContext","majorVersion","ktexture","needsTranscoding","astcSupported","etcSupported","dxtSupported","pvrtcSupported","TranscodeTarget","ASTC_4x4_RGBA","BC1_OR_3","PVRTC1_4_RGBA","ETC","RGBA8888","transcodeBasis","ErrorCode","SUCCESS","fetch","ktxTexture","transcode","uploadResult","glUpload","levels","baseWidth","async","loadHDR","d8","String","fromCharCode","rez","reverse","img","ipos","scanline","rgbe","ptr_end","buf","pow","_rgbeToFloat","initKtxLib","ktxlib","initDracoLib","dracolib","ready","loadGltf","isGlb","fileContent","glb","extractGlbData","resolveRelativePath","loadEnvironment","imageHDR","samplerIdx","diffuseCubeSamplerIdx","specularCubeSamplerIdx","sheenCubeSamplerIdx","lutSamplerIdx","imageIdx","environmentFiltering","filterAll","diffuseGltfImage","specularGltfImage","specularTexture","sheenGltfImage","sheenTexture","loadEnvironmentFromImage"],"mappings":"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"}